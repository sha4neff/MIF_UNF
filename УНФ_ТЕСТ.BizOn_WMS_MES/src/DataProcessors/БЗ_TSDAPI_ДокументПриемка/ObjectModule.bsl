#Область Системные

Процедура ОбработчикОперации() Экспорт
	Если БЗ_TSDRU.Сессия().ПараметрыСессии.Режим="" Тогда
		Инициализация();
	Иначе
		Если БЗ_TSDRU.Запрос().action="" Тогда
			Выполнить(БЗ_TSDRU.Сессия().ПараметрыСессии.Режим+"_Активация()");
		Иначе
			Выполнить(БЗ_TSDRU.Сессия().ПараметрыСессии.Режим+"_ОбработчикСобытий()");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура АктивироватьРежим(Режим)
	БЗ_TSDRU.Сессия().ПараметрыСессии.Режим=Режим;
	Выполнить(Режим+"_Активация()");	
КонецПроцедуры

Процедура Инициализация()
	БЗ_TSDRU.Сессия().ПараметрыСессии.Вставить("Приемка",Новый Структура());
	АктивироватьРежим("ВыборДокумента");	
КонецПроцедуры

Процедура ДобавитьВведенныеДанные(ДНоменклатура,ДКоличество=1,ШК="")
	ПараметрыСеанса.БЗ_TSDAPI_ДанныеСеанса=Новый ХранилищеЗначения(Новый Структура("Сессия,ВременныеПеременные",БЗ_TSDRU.Сессия(),БЗ_TSDRU.ВременныеПеременные()));	

	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;
	СтартТранзакции();
	Фиксировать=ПроверитьАктивностьДокумента();
	Если БЗ_TSDRU.ВременныеПеременные().ОшибкаАктивацииДокумента Тогда ФинишТранзакции(Фиксировать); ОшибкаДокументУдален(); Возврат; КонецЕсли;
	
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВводДанных.НСтроки) + 1, 1) КАК НСтроки
	|ИЗ
	|	РегистрСведений.ТСД_Документы КАК ВводДанных
	|ГДЕ
	|	ВводДанных.Документ = &Ссылка");
	Запрос.Параметры.Вставить("Ссылка",АктивныйДокумент);
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Выборка.Следующий();
	
	МенеджерЗаписи = РегистрыСведений.ТСД_Документы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Документ = АктивныйДокумент;
	МенеджерЗаписи.НСтроки = Выборка.НСтроки;
	МенеджерЗаписи.Номенклатура = ДНоменклатура.номенклатура;   
	МенеджерЗаписи.Характеристика=ДНоменклатура.характеристика;
	МенеджерЗаписи.Ячейка=Дноменклатура.Ячейка;
	МенеджерЗаписи.Количество = ДКоличество-ДНоменклатура.количество;
	МенеджерЗаписи.ШК = ШК;
	МенеджерЗаписи.Добавлено = ТекущаяДата();
	МенеджерЗаписи.Сотрудник = БЗ_TSDRU.Сессия().Сотрудник;
	МенеджерЗаписи.Записать();
	
	ФинишТранзакции(Истина);
	
	БЗ_TSDRU.Ответ().Вставить(БЗ_TSDRU.ПараметрыПакетОтвета().play_sound,"beep"); // ответный бип при успешном добавлении
	АктивироватьРежим("ВводДанных");	
КонецПроцедуры

// -----
Функция ПроверитьАктивностьДокумента()
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;
	БЗ_TSDRU.ВременныеПеременные().Вставить("ОшибкаАктивацииДокумента",Ложь);
	
	
	ДокументОбъект=АктивныйДокумент.ПолучитьОбъект();
	ДокументОбъект.Прочитать();
	
	Если ДокументОбъект.ПометкаУдаления Тогда БЗ_TSDRU.ВременныеПеременные().ОшибкаАктивацииДокумента=Истина; Возврат Ложь; КонецЕсли;
	Если ДокументОбъект.ОткрытНаТСД Тогда Возврат Ложь; КонецЕсли;
	
	ДокументОбъект.ОткрытНаТСД=Истина;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Номенклатура КАК Номенклатура,
	|	 .Характеристика КАК Характеристика,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Количество КАК Количество,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Ссылка.Ячейка КАК Ячейка,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Ссылка.Ссылка КАК Документ,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.НомерСтроки КАК НСтроки
	|ИЗ
	|	Документ.ПеремещениеПоЯчейкам.ТСД_ВводДанных КАК ПеремещениеПоЯчейкамТСД_ВводДанных
	|ГДЕ
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Ссылка = &Ссылка");
	Запрос.Параметры.Вставить("Ссылка",АктивныйДокумент);
	Записи=Запрос.Выполнить().Выгрузить();
	Если Записи.Количество()>0 Тогда
		НаборЗаписей=РегистрыСведений.ТСД_Документы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(АктивныйДокумент);
		НаборЗаписей.Загрузить(Записи);
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	Возврат Истина;          
КонецФункции

Процедура ОшибкаДокументУдален()
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;
	// Сформировать новый ответ
	БЗ_TSDRU.Ответ().Удалить("payload_type");
	БЗ_TSDRU.Ответ().Удалить("payload");
	АктивироватьРежим("ВыборДокумента");
	БЗ_TSDAPI.ПоказатьОшибку("ОШИБКА !
	|
	|ДОКУМЕНТ "+АктивныйДокумент.Номер+"
	|
	|ДОКУМЕНТ БЫЛ УДАЛЕН
	|РАБОТА ЗАБЛОКИРОВАНА !!!");
КонецПроцедуры

Процедура СтартТранзакции()
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;		
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТСД_Документы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки = Блокировка.Добавить("Документ.ПеремещениеПоЯчейкам");
	ЭлементБлокировки.УстановитьЗначение("Ссылка",АктивныйДокумент);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
КонецПроцедуры

Процедура ФинишТранзакции(Фиксировать)
	Если Фиксировать Тогда ЗафиксироватьТранзакцию() Иначе ОтменитьТранзакцию(); КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ВыборФункции 

Процедура ВыборДокумента_Активация()
	Перем Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП;
	БЗ_TSDAPI.ИнициализацияПакетаОтвета(БЗ_TSDRU.ТипыФреймов().edit);
	БЗ_TSDAPI.ИнициализацияПараметров(Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП);
	БЗ_TSDAPI.ПерехватСобытий("0066,0004","y"); // Кнопка назад + Ввод значения
	ПараметрыДанных=БЗ_TSDRU.ПараметрыДанныхФреймаТекста();
	//	TSDAPI.ПерехватСобытий("0066,0004,0007,0008,0009,0010,0011,0012,0013,0014,0015,0016","y");
	
	// Заполнение Шапки
	Шапка.Вставить(РядШапка.hr1,БЗ_TSDAPI.РядАвторизацииПользователя());	
	
	ШРяд2=Новый Структура();             
	ТПоле=Новый Структура();	
	ТПоле.Вставить(ТП.tx,"Отсканируйте ящик");
	ТПоле.Вставить(ТП.al,"cc");   
	ТПоле.Вставить(ТП.fs,"16");
	ТПоле.Вставить(ТП.tf,"b");
	ТПоле.Вставить(ТП.pd,"2 2 3 3");
	ТПоле.Вставить(ТП.tc,"#FFFFFF");
	ТПоле.Вставить(ТП.bc,"#0000C8");		
	ШРяд2.Вставить(Колонки.c1,ТПоле);
	Шапка.Вставить(РядШапка.hr2,ШРяд2);
	
	Данные.Вставить(ПараметрыДанных.hd,Шапка);
	
	БЗ_TSDRU.Ответ().payload=Данные;	
КонецПроцедуры

Процедура ВыборДокумента_ОбработчикСобытий()
	СТЗапрос=БЗ_TSDRU.Запрос();	
	Если СТЗапрос.action="key" Тогда
		Данные=Лев(СТЗапрос.data,4);
		Если Данные=БЗ_TSDRU.ПеречислениеКнопок().КН_ESC Тогда // Назад
			БЗ_TSDAPI.ВыполнитьОперацию("ВыборОперации");
			Возврат;
		КонецЕсли;		
	ИначеЕсли   СТЗапрос.action="scan" Тогда
		выбрано= ВыборДокумента_найтиЯчейкуПоШК(СТЗапрос.data);
		Если Выбрано=Неопределено Тогда
			БЗ_TSDAPI.ПустойОтветНаЗапрос();
			Возврат
		КонецЕсли;                
		док=ВыборДокумента_найтиДокЯчейки(выбрано);		
		БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Вставить("АктивныйДокумент",док.Ссылка);
		АктивироватьРежим("ОсновноеМеню");		
	Иначе		
		БЗ_TSDAPI.ПустойОтветНаЗапрос();
	КонецЕсли;	
КонецПроцедуры

Функция ВыборДокумента_НайтиЯчейкуПоШК(ШК)
	Возврат Справочники.Ячейки.НайтиПоРеквизиту("БЗ_ШК",ШК);	
	
КонецФункции

функция ВыборДокумента_найтиДокЯчейки(Ячейка)  
	ПараметрыСеанса.БЗ_TSDAPI_ДанныеСеанса=Новый ХранилищеЗначения(Новый Структура("Сессия,ВременныеПеременные",БЗ_TSDRU.Сессия(),БЗ_TSDRU.ВременныеПеременные()));	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеПоЯчейкам.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПеремещениеПоЯчейкам КАК ПеремещениеПоЯчейкам
	|ГДЕ
	|	ПеремещениеПоЯчейкам.Ячейка = &ячейка
	|	И ПеремещениеПоЯчейкам.ВидОперации = &ВидОперации
	|	И ПеремещениеПоЯчейкам.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ячейка",Ячейка);      
	запрос.УстановитьПараметр("ДокументОснование", ячейка.бз_Документ);
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийПеремещениеПоЯчейкам.ИзНесколькихВОдну);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	док=ДОкументы.ПеремещениеПоЯчейкам.СоздатьДокумент();   
	док.ДокументОснование=ячейка.БЗ_Документ;
	док.Ячейка=ячейка;
	док.дата=ТекущаяДАта();
	док.организация=Справочники.Организации.ОрганизацияПоУмолчанию();
	док.ВидОперации=Перечисления.ВидыОперацийПеремещениеПоЯчейкам.ИзНесколькихВОдну;   
	док.Сотрудник=БЗ_TSDRU.Сессия().Сотрудник;
	док.СтруктурнаяЕдиница=Справочники.СтруктурныеЕдиницы.НайтиПоКоду("НФ-000004");
	док.Записать();
	возврат док.Ссылка;	
КонецФункции
#КонецОбласти

#Область ОсновноеМеню
Процедура ОсновноеМеню_Активация()
	Перем Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП;
	БЗ_TSDAPI.ИнициализацияПакетаОтвета(БЗ_TSDRU.ТипыФреймов().list);
	БЗ_TSDAPI.ИнициализацияПараметров(Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП);
	БЗ_TSDAPI.ПерехватСобытий(); // Ничего не перехватываем через назад не выйти      
	
	ПараметрыДанных=БЗ_TSDRU.ПараметрыДанныхФреймаСписка();
	
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.приемка.АктивныйДокумент;
	 
	СтартТранзакции(); 
	БЗ_TSDRU.ВременныеПеременные().Вставить("ОшибкаАктивацииДокумента",Ложь);

	Фиксировать=ПроверитьАктивностьДокумента();  
	
	Если БЗ_TSDRU.ВременныеПеременные().ОшибкаАктивацииДокумента Тогда 
		ФинишТранзакции(Фиксировать); 
		ОшибкаДокументУдален(); 
		Возврат;
	КонецЕсли;
	ФинишТранзакции(Фиксировать);
	ПараметрыДанных=БЗ_TSDRU.ПараметрыДанныхФреймаСписка();
	                
	Шапка.Вставить(РядШапка.hr1,БЗ_TSDAPI.РядАвторизацииПользователя());
	
	ШРяд2=Новый Структура(); // Документ
	ТПоле=Новый Структура();
	ТПоле.Вставить(ТП.tx,"ДОКУМЕНТ "+АктивныйДокумент.ячейка.наименование);
	ТПоле.Вставить(ТП.al,"cc");
	ТПоле.Вставить(ТП.fs,"17");
	ТПоле.Вставить(ТП.tf,"b");
	ТПоле.Вставить(ТП.pd,"2 2 2 2");
	ТПоле.Вставить(ТП.tc,"#993300");
	ТПоле.Вставить(ТП.bc,"#BCEBEB");
	ШРяд2.Вставить(Колонки.c1,ТПоле);
	
	Шапка.Вставить(РядШапка.hr2,ШРяд2);
	
	Данные.Вставить(ПараметрыДанных.hd,Шапка);
	Данные.Вставить(ПараметрыДанных.ls,ОсновноеМеню_ПолучитьСписок());
	// -----
	БЗ_TSDRU.Ответ().payload=Данные;
КонецПроцедуры 

Функция ОсновноеМеню_ШаблонСписок(Обновление=Ложь) Экспорт
	Список=Новый Структура();
	Если НЕ Обновление Тогда
		ПараметрыСписка=БЗ_TSDRU.ПараметрыСписка();		
		ТП=БЗ_TSDRU.ПараметрыТекстовоеПоле();
		Колонки=БЗ_TSDRU.ПараметрыКолонки();				
		// Параметры колонок списка
		ПараметрыКолонокСписка=Новый Структура();
		// Колонка 1
		ТПоле=Новый Структура();
		ТПоле.Вставить(ТП.al,"cc");
		ТПоле.Вставить(ТП.pd,"0 5 18 18");
		ТПоле.Вставить(ТП.fs,"20");
		ТПоле.Вставить(ТП.tf,"b");
		ПараметрыКолонокСписка.Вставить(Колонки.c1,ТПоле);	
		// Параметры строк списка
		ПараметрыТиповСтрок=Новый Массив();
		ПараметрыТиповСтрок.Добавить(Новый Структура("tp",0));
		ПараметрыТиповСтрок.Добавить(Новый Структура("tp,bc",1,"#E6E6E6"));
		// --
		ПараметрыТиповСтрокСписка=БЗ_TSDRU.ПараметрыТиповСтрокСписка();
		ПараметрыСтрокСписка=Новый Структура();	
		ПараметрыСтрокСписка.Вставить(ПараметрыТиповСтрокСписка.rwtp,ПараметрыТиповСтрок);
		ПараметрыСтрокСписка.Вставить(ПараметрыТиповСтрокСписка.rt,"3hc"); // вариант шаблона
		Список.Вставить(ПараметрыСписка.cl,ПараметрыКолонокСписка);
		Список.Вставить(ПараметрыСписка.rw,ПараметрыСтрокСписка);
	КонецЕсли;
	Возврат Список;	
КонецФункции

Функция ОсновноеМеню_ПолучитьСписок(Обновление=Ложь)
	ТБОсновноеМеню=Новый ТаблицаЗначений();
	ТБОсновноеМеню.Колонки.Добавить("Название",Новый ОписаниеТипов("Строка"));
	ТБОсновноеМеню.Колонки.Добавить("Операция",Новый ОписаниеТипов("Строка"));	
	
	Строка=ТБОсновноеМеню.Добавить();
	Строка.Название="НАЧАТЬ / ПРОДОЛЖИТЬ";
	Строка.Операция="ВводДанных";
	Строка=ТБОсновноеМеню.Добавить();
	Строка.Название="ПРОДОЛЖИТЬ ПОЗДНЕЕ";
	Строка.Операция="ПродолжитьПозднее";
	Строка=ТБОсновноеМеню.Добавить();
	Строка.Название="ЗАВЕРШИТЬ ДОКУМЕНТ";
	Строка.Операция="ЗавершитьДокумент";
	
	БЗ_TSDRU.ВременныеПеременные().Вставить("ТБОсновноеМеню",ТБОсновноеМеню);
	
	ТБСтроки=Новый Массив();
	Список=ОсновноеМеню_ШаблонСписок(Обновление);
	Поз=0;
	Для Каждого Выборка Из ТБОсновноеМеню Цикл
		tp=0;
		Если Выборка.Операция="ПродолжитьПозднее" ИЛИ Выборка.Операция="ЗавершитьДокумент" Тогда
			tp=1;
		КонецЕсли;
		ТБСтроки.Добавить(Новый Структура("id,c1,tp",Поз,Выборка.Название,tp));
		Поз=Поз+1;
	КонецЦикла;
	Список.Вставить("ct",ТБСтроки);
	
	Список.Вставить("sl_tp",1);
	
	Возврат Список;
КонецФункции

Процедура ОсновноеМеню_ЗавершитьДокумент()
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;
	ПараметрыСеанса.БЗ_TSDAPI_ДанныеСеанса=Новый ХранилищеЗначения(Новый Структура("Сессия,ВременныеПеременные",БЗ_TSDRU.Сессия(),БЗ_TSDRU.ВременныеПеременные()));	

	СтартТранзакции();
	Фиксировать=ПроверитьАктивностьДокумента();
	Если БЗ_TSDRU.ВременныеПеременные().ОшибкаАктивацииДокумента Тогда ФинишТранзакции(Фиксировать); ОшибкаДокументУдален(); Возврат; КонецЕсли;	
	
	
	ДокументОбъект=АктивныйДокумент.ПолучитьОбъект();
	ДокументОбъект.Прочитать();
	ДокументОбъект.ОткрытНаТСД=Ложь;
	ДокументОбъект.Завершен=Истина;
	ДокументОбъект.Запасы.Очистить();
	ДокументОбъект.ТСД_ВводДанных.Очистить();
	
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ТСД_ДемоДокумент.Номенклатура КАК Номенклатура,
	|	ТСД_ДемоДокумент.Номенклатура.Наименование КАК ННоменклатура,
	|	ТСД_ДемоДокумент.Характеристика КАК Характеристика,
	|	ТСД_ДемоДокумент.Характеристика.Наименование КАК НХарактеристика,
	|	ТСД_ДемоДокумент.Ячейка КАК Ячейка,
	|	0 КАК План,
	|	СУММА(ТСД_ДемоДокумент.Количество) КАК Факт
	|ПОМЕСТИТЬ ВТОбщая
	|ИЗ
	|	РегистрСведений.ТСД_Документы КАК ТСД_ДемоДокумент
	|ГДЕ
	|	ТСД_ДемоДокумент.Документ = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТСД_ДемоДокумент.Номенклатура,
	|	ТСД_ДемоДокумент.Номенклатура.Наименование,
	|	ТСД_ДемоДокумент.Характеристика,
	|	ТСД_ДемоДокумент.Характеристика.Наименование,
	|	ТСД_ДемоДокумент.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Номенклатура,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Номенклатура.Наименование,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Характеристика,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Характеристика.Наименование,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Ячейка,
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Количество,
	|	0
	|ИЗ
	|	Документ.ПеремещениеПоЯчейкам.ТСД_ВводДанных КАК ПеремещениеПоЯчейкамТСД_ВводДанных
	|ГДЕ
	|	ПеремещениеПоЯчейкамТСД_ВводДанных.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбщая.Номенклатура КАК Номенклатура,
	|	ВТОбщая.ННоменклатура КАК ННоменклатура,
	|	ВТОбщая.Характеристика КАК Характеристика,
	|	ВТОбщая.НХарактеристика КАК НХарактеристика,
	|	ВТОбщая.Ячейка КАК Ячейка,
	|	СУММА(ВТОбщая.План) КАК План,
	|	СУММА(ВТОбщая.Факт) КАК Количество
	|ИЗ
	|	ВТОбщая КАК ВТОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбщая.Номенклатура,
	|	ВТОбщая.ННоменклатура,
	|	ВТОбщая.НХарактеристика,
	|	ВТОбщая.Ячейка,
	|	ВТОбщая.Характеристика");
	Запрос.Параметры.Вставить("Ссылка",АктивныйДокумент);
	ДокументОбъект.ТСД_ВводДанных.Загрузить(Запрос.Выполнить().Выгрузить());
	ТБТовары=ДокументОбъект.ТСД_ВводДанных.Выгрузить(,"Номенклатура,Характеристика,Ячейка,Количество");
	ТБТовары.Свернуть("Номенклатура,Характеристика,Ячейка","Количество");
	//ДокументОбъект.Запасы.Загрузить(ДокументОбъект.ТСД_ВводДанных.выгрузить());

		Для каждого стр из ТБТовары цикл
		новстр=ДокументОбъект.Запасы.Добавить();
		новстр.Номенклатура=стр.номенклатура;
		новстр.Характеристика=стр.характеристика;  
		новстр.ЕдиницаИзмерения=новстр.Номенклатура.ЕдиницаИзмерения;
		//	новстр.БЗ_ПартияПриемник=стр.Ячейка;
		новстр.Количество=стр.Количество;
	КонецЦикла; 
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение); 
	НаборЗаписей=РегистрыСведений.ТСД_Документы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	

	//	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);	
	ФинишТранзакции(Истина);
	
	АктивироватьРежим("ВыборДокумента");
КонецПроцедуры

Процедура ОсновноеМеню_ОбработчикСобытий()
	СТЗапрос=БЗ_TSDRU.Запрос();
	Если СТЗапрос.action="select" Тогда
		Выбрано=БЗ_TSDRU.ВременныеПеременные().ТБОсновноеМеню.Получить(Число(СТЗапрос.data));
		Если Выбрано=Неопределено Тогда
			БЗ_TSDAPI.ПустойОтветНаЗапрос();
			Возврат
		КонецЕсли;
		Если Выбрано.Операция="ВводДанных" Тогда
			БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Удалить("ВыбранныйТовар");
			АктивироватьРежим("ВводДанных");
		ИначеЕсли Выбрано.Операция="ПродолжитьПозднее" Тогда
			АктивироватьРежим("ВыборДокумента");
		ИначеЕсли Выбрано.Операция="ЗавершитьДокумент" Тогда
			ОсновноеМеню_ЗавершитьДокумент();
		КонецЕсли;
	Иначе
		БЗ_TSDAPI.ПустойОтветНаЗапрос();
	КонецЕсли;
КонецПроцедуры
 #КонецОбласти

 #Область ВводДанных
Процедура ВводДанных_Активация()
	Перем Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП;
	БЗ_TSDAPI.ИнициализацияПакетаОтвета(БЗ_TSDRU.ТипыФреймов().list);
	БЗ_TSDAPI.ИнициализацияПараметров(Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП);
	БЗ_TSDAPI.ПерехватСобытий(БЗ_TSDRU.ПеречислениеКнопок().КН_ESC,"y"); // Назад и Сканер
	ПараметрыДанных=БЗ_TSDRU.ПараметрыДанныхФреймаСписка();
	
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.приемка.АктивныйДокумент;
	
	Шапка.Вставить(РядШапка.hr1,БЗ_TSDAPI.РядАвторизацииПользователя());	
	
	ШРяд2=Новый Структура(); // Документ
	ТПоле=Новый Структура();
	ТПоле.Вставить(ТП.tx,"ДОКУМЕНТ "+АктивныйДокумент.Номер+" ("+Формат(АктивныйДокумент.Дата,"ДФ=dd.MM.yyyy")+")");
	ТПоле.Вставить(ТП.al,"cc");
	ТПоле.Вставить(ТП.fs,"17");
	ТПоле.Вставить(ТП.tf,"b");
	ТПоле.Вставить(ТП.pd,"2 2 2 2");
	ТПоле.Вставить(ТП.tc,"#993300");
	ТПоле.Вставить(ТП.bc,"#BCEBEB");
	ШРяд2.Вставить(Колонки.c1,ТПоле);	
	Шапка.Вставить(РядШапка.hr2,ШРяд2);	
	
	ШРяд3=Новый Структура();
	ТПоле=Новый Структура();	
	ТПоле.Вставить(ТП.tx,"Документы приемки");
	ТПоле.Вставить(ТП.al,"cc");
	ТПоле.Вставить(ТП.fs,"16");		
	ТПоле.Вставить(ТП.pd,"2 2 2 2");
	ТПоле.Вставить(ТП.tc,"#7F0000");
	ТПоле.Вставить(ТП.bc,"#FFFFFF");
	ТПоле.Вставить(ТП.sw,"1");
	ТПоле.Вставить(ТП.sc,"#000080");
	ШРяд3.Вставить(Колонки.c1,ТПоле);
	ШРяд3.Вставить("pd","0 0 5 5");
	Шапка.Вставить(РядШапка.hr3,ШРяд3);	
	
	Шапка.Вставить(РядШапка.hr4,БЗ_TSDAPI.ШаблонРядШапкаСписка("Номенклатура","Количество",,,,"0.42"));
	
	Данные.Вставить(ПараметрыДанных.hd,Шапка);
	
	СтартТранзакции();
	Фиксировать=ПроверитьАктивностьДокумента();
	Если БЗ_TSDRU.ВременныеПеременные().ОшибкаАктивацииДокумента Тогда 
		ФинишТранзакции(Фиксировать); 
		ОшибкаДокументУдален(); 
		Возврат;
	КонецЕсли;
	Данные.Вставить(ПараметрыДанных.ls,ВводДанных_ПолучитьСписок());
	ФинишТранзакции(Фиксировать);
	БЗ_TSDRU.Ответ().payload=Данные;
КонецПроцедуры

Функция ВводДанных_ШаблонСписок(Обновление=Ложь) Экспорт
	Список=Новый Структура();
	ПараметрыСписка=БЗ_TSDRU.ПараметрыСписка();
	Если НЕ Обновление Тогда
		ТП=БЗ_TSDRU.ПараметрыТекстовоеПоле();
		Колонки=БЗ_TSDRU.ПараметрыКолонки();				
		// Параметры колонок списка
		ПараметрыКолонокСписка=Новый Структура();		
		// Колонка 1
		ТПоле=Новый Структура();
		ТПоле.Вставить(ТП.al,"lt");
		ТПоле.Вставить(ТП.ff,"roboto");
		ТПоле.Вставить(ТП.fs,"18");
		ТПоле.Вставить(ТП.pd,"6 1 16 16");
		ПараметрыКолонокСписка.Вставить(Колонки.c1,ТПоле);
		// Колонка 2				
		ТПоле=Новый Структура();
		ТПоле.Вставить(ТП.al,"rt");
		ТПоле.Вставить(ТП.wt,"0.42");
		ТПоле.Вставить(ТП.pd,"1 6 16 16");
		ТПоле.Вставить(ТП.ff,"roboto");
		ТПоле.Вставить(ТП.fs,"18");
		ПараметрыКолонокСписка.Вставить(Колонки.c2,ТПоле);
		// Параметры строк списка
		
		Свайпы=Новый Структура();
		
		СвайпВлево=Новый Структура();
		СвайпВлево.Вставить("svg",БЗ_TSDAPI.ПолучитьКартинку("delete_svg"));
		СвайпВлево.Вставить("svgvp","0 -0.5 30 30");
		СвайпВлево.Вставить("tx","УДАЛИТЬ");
		СвайпВлево.Вставить("tc","#FFFFFF");
		СвайпВлево.Вставить("bc","#9F0000");
		СвайпВлево.Вставить("fs","16");
		СвайпВлево.Вставить("ff","roboto_medium");
		СвайпВлево.Вставить("sw_ac","swipe_delete");
		СвайпВлево.Вставить("sw_dt","");
		Свайпы.Вставить("left",СвайпВлево);
		
		ПараметрыТиповСтрок=Новый Массив();
		ПараметрыТиповСтрок.Добавить(Новый Структура("tp,swipe",0,Свайпы));
		// ---
		ПараметрыТиповСтрокСписка=БЗ_TSDRU.ПараметрыТиповСтрокСписка();
		ПараметрыСтрокСписка=Новый Структура();	
		ПараметрыСтрокСписка.Вставить(ПараметрыТиповСтрокСписка.rwtp,ПараметрыТиповСтрок);
		ПараметрыСтрокСписка.Вставить(ПараметрыТиповСтрокСписка.rt,"3hc"); // вариант шаблона
		Список.Вставить(ПараметрыСписка.cl,ПараметрыКолонокСписка);
		Список.Вставить(ПараметрыСписка.rw,ПараметрыСтрокСписка);
	КонецЕсли;
	Возврат Список;	
КонецФункции

Функция ВводДанных_ПолучитьСписок(Обновление=Ложь)
	Список=ВводДанных_ШаблонСписок(Обновление); // Инициализация структуры списка и заполнение параметров колонок и типов строк
	Запрос=Новый Запрос();
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗапасыНаСкладахОбороты.Номенклатура КАК Номенклатура,
	|	ЗапасыНаСкладахОбороты.Характеристика КАК Характеристика,
	|	СУММА(ЗапасыНаСкладахОбороты.КоличествоРасход) КАК КоличествоРасход
	|ПОМЕСТИТЬ втПриход
	|ИЗ
	|	РегистрНакопления.ЗапасыНаСкладах.Обороты(, , Регистратор, ) КАК ЗапасыНаСкладахОбороты
	|ГДЕ
	|	ЗапасыНаСкладахОбороты.Регистратор В
	|			(ВЫБРАТЬ
	|				ПеремещениеПоЯчейкам.Ссылка КАК Ссылка
	|			ИЗ
	|				Документ.ПеремещениеПоЯчейкам КАК ПеремещениеПоЯчейкам
	|			ГДЕ
	|				ПеремещениеПоЯчейкам.ДокументОснование = &ДокументОснование)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыНаСкладахОбороты.Характеристика,
	|	ЗапасыНаСкладахОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	СУММА(ПриходнаяНакладнаяЗапасы.Количество) КАК Количество,
	|	ПриходнаяНакладнаяЗапасы.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТПриходнаяНакладная
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходнаяНакладнаяЗапасы.Характеристика,
	|	ПриходнаяНакладнаяЗапасы.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПриходнаяНакладная.Номенклатура КАК Номенклатура,
	|	ВТПриходнаяНакладная.Характеристика КАК Характеристика,
	|	ВТПриходнаяНакладная.Количество - ЕСТЬNULL(втПриход.КоличествоРасход, 0) КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.Ячейки.пустаяСсылка) КАК Ячейка
	|ПОМЕСТИТЬ ВтОстаток
	|ИЗ
	|	ВТПриходнаяНакладная КАК ВТПриходнаяНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПриход КАК втПриход
	|		ПО ВТПриходнаяНакладная.Номенклатура = втПриход.Номенклатура
	|			И ВТПриходнаяНакладная.Характеристика = втПриход.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТСД_ДемоДокумент.Номенклатура КАК Номенклатура,
	|	ТСД_ДемоДокумент.Номенклатура.Наименование КАК ННоменклатура,
	|	ТСД_ДемоДокумент.Характеристика КАК Характеристика,
	|	ТСД_ДемоДокумент.Характеристика.Наименование КАК НХарактеристика,
	|	ЗНАЧЕНИЕ(Справочник.Ячейки.пустаяСсылка) КАК Ячейка,
	|	0 КАК План,
	|	СУММА(ТСД_ДемоДокумент.Количество) КАК Факт
	|ПОМЕСТИТЬ ВТОбщая
	|ИЗ
	|	РегистрСведений.ТСД_Документы КАК ТСД_ДемоДокумент
	|ГДЕ
	|	ТСД_ДемоДокумент.Документ = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТСД_ДемоДокумент.Номенклатура,
	|	ТСД_ДемоДокумент.Номенклатура.Наименование,
	|	ТСД_ДемоДокумент.Характеристика,
	|	ТСД_ДемоДокумент.Характеристика.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОстаток.Номенклатура,
	|	ВтОстаток.Номенклатура.Наименование,
	|	ВтОстаток.Характеристика,
	|	ВтОстаток.Характеристика.Наименование,
	|	ВтОстаток.Ячейка,
	|	ВтОстаток.Количество,
	|	0
	|ИЗ
	|	ВтОстаток КАК ВтОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбщая.Номенклатура КАК Номенклатура,
	|	ВТОбщая.ННоменклатура КАК ННоменклатура,
	|	ВТОбщая.Характеристика КАК Характеристика,
	|	ВТОбщая.НХарактеристика КАК НХарактеристика,
	|	ВТОбщая.Ячейка КАК Ячейка,
	|	СУММА(ВТОбщая.План) КАК План,
	|	СУММА(ВТОбщая.Факт) КАК Факт
	|ИЗ
	|	ВТОбщая КАК ВТОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбщая.Номенклатура,
	|	ВТОбщая.ННоменклатура,
	|	ВТОбщая.НХарактеристика,
	|	ВТОбщая.Ячейка,
	|	ВТОбщая.Характеристика";	         
	Док=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;
	Запрос.УстановитьПараметр("Ссылка",Док);
	Запрос.УстановитьПараметр("ДокументОснование", док.ДокументОснование);
	ТБТовары=Запрос.Выполнить().Выгрузить();
	БЗ_TSDRU.ВременныеПеременные().Вставить("ТБТовары",ТБТовары); // Сохраняем таблицу во временные переменные
	
	// Формирования массива с данными списка
	ТБСтроки=Новый Массив();
	Поз=0;
	Для Каждого Товар Из ТБТовары Цикл
		ТБСтроки.Добавить(Новый Структура("id,c1,c2,tp",Поз,Товар.ННоменклатура+" "+товар.НХарактеристика,Формат(Товар.факт,"ЧН=; ЧГ=")+" из " + Формат(Товар.План,"ЧН=; ЧГ="),0));
		Поз=Поз+1;
	КонецЦикла;
	Список.Вставить("ct",ТБСтроки);
	
	Если НЕ Обновление Тогда
		Если БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Свойство("ВыбранныйТовар") Тогда
			НСтрока=ТБТовары.Найти(БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.ВыбранныйТовар.номенклатура,"Номенклатура");
			Если НСтрока=Неопределено Тогда
				Список.Вставить("sl",0);
			Иначе
				Список.Вставить("sl",ТБТовары.Индекс(НСтрока));
			КонецЕсли;
		Иначе
			Список.Вставить("sl",0);
		КонецЕсли;
	КонецЕсли;
	
	//Список.Вставить("sl_tp",1); // Один тач = выбор
	
	Возврат Список;
КонецФункции

Процедура ВводДанных_НайтиТоварПоШК(Штрихкод)   
	рез=Неопределено;
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	БЗ_ПриемкаВЯчейкиЗапасы.Ячейка КАК Ячейка,
	|	БЗ_ПриемкаВЯчейкиЗапасы.Номенклатура КАК Номенклатура,
	|	БЗ_ПриемкаВЯчейкиЗапасы.Характеристика КАК Характеристика,
	|	0 КАК Факт,
	|	БЗ_ПриемкаВЯчейкиЗапасы.Ссылка КАК Документ,
	|	БЗ_ПриемкаВЯчейкиЗапасы.Количество КАК План
	|ПОМЕСТИТЬ ВТДок
	|ИЗ
	|	Документ.БЗ_ПриемкаВЯчейки.Запасы КАК БЗ_ПриемкаВЯчейкиЗапасы
	|ГДЕ
	|	БЗ_ПриемкаВЯчейкиЗапасы.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТСД_Документы.Ячейка,
	|	ТСД_Документы.Номенклатура,
	|	ТСД_Документы.Характеристика,
	|	ТСД_Документы.Количество,
	|	ТСД_Документы.Документ,
	|	0
	|ИЗ
	|	РегистрСведений.ТСД_Документы КАК ТСД_Документы
	|ГДЕ
	|	ТСД_Документы.Документ = &ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДок.Ячейка КАК Ячейка,
	|	ВТДок.Номенклатура КАК Номенклатура,
	|	ВТДок.Характеристика КАК Характеристика,
	|	СУММА(ВТДок.Факт) КАК Факт,
	|	ВТДок.Документ КАК Документ,
	|	СУММА(ВТДок.План) КАК План
	|ПОМЕСТИТЬ ВТДокОб
	|ИЗ
	|	ВТДок КАК ВТДок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДок.Характеристика,
	|	ВТДок.Ячейка,
	|	ВТДок.Номенклатура,
	|	ВТДок.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|	ШтрихкодыНоменклатуры.Ячейка КАК Ячейка,
	|	ШтрихкодыНоменклатуры.Номенклатура.Наименование + "" "" + ШтрихкодыНоменклатуры.Характеристика.Наименование + "" "" + ШтрихкодыНоменклатуры.Ячейка.Наименование КАК Наименование,
	|	ВТДокОб.Факт КАК Факт
	|ИЗ
	|	ВТДокОб КАК ВТДокОб
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО (ШтрихкодыНоменклатуры.Номенклатура = ВТДокОб.Номенклатура)
	|			И (ШтрихкодыНоменклатуры.Характеристика = ВТДокОб.Характеристика)
	|			И (ШтрихкодыНоменклатуры.Ячейка = ВТДокОб.Ячейка)
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод");
	Запрос.УстановитьПараметр("Штрихкод",Штрихкод);   
	Запрос.УстановитьПараметр("Ссылка",БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент);
	Выборка=Запрос.Выполнить().Выбрать();
	
	
	Если Выборка.Следующий() Тогда               
		структураТовара= НОвый Структура();
		структураТовара.Вставить("Номенклатура", Выборка.Номенклатура);
		структураТовара.Вставить("Характеристика", Выборка.Характеристика);
		структураТовара.Вставить("Ячейка", Выборка.Партия);  
		структураТовара.Вставить("Количество", выборка.Факт);
		структураТовара.Вставить("Наименование",Выборка.Номенклатура.наименование+ " " +Выборка.характеристика.наименование+ " "+ Выборка.партия);
		БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Вставить("ВыбранныйТовар",структураТовара);
		БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Вставить("СканированиеШК",Штрихкод);
		БЗ_TSDRU.Ответ().Вставить(БЗ_TSDRU.ПараметрыПакетОтвета().play_sound,"beep"); // ответный бип при сканировании
		АктивироватьРежим("ВводКоличества");
	Иначе
		АктивироватьРежим("ВводДанных");
		БЗ_TSDAPI.ПоказатьОшибку("ТОВАР СО ШТРИХКОДОМ"+Символы.ПС+Штрихкод+Символы.ПС+"НЕ НАЙДЕН !");
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ВводДанных_УдалитьТовар(НомерСтроки)
	Выбрано=БЗ_TSDRU.ВременныеПеременные().ТБТовары.Получить(НомерСтроки);
	Если Выбрано=Неопределено Тогда
		БЗ_TSDAPI.ПустойОтветНаЗапрос();
		Возврат
	КонецЕсли;
ПараметрыСеанса.БЗ_TSDAPI_ДанныеСеанса=Новый ХранилищеЗначения(Новый Структура("Сессия,ВременныеПеременные",БЗ_TSDRU.Сессия(),БЗ_TSDRU.ВременныеПеременные()));	
	
	СтартТранзакции();
	Фиксировать=ПроверитьАктивностьДокумента();
	Если БЗ_TSDRU.ВременныеПеременные().ОшибкаАктивацииДокумента Тогда ФинишТранзакции(Фиксировать); ОшибкаДокументУдален(); Возврат; КонецЕсли;
	НаборЗаписей=РегистрыСведений.ТСД_Документы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент);
	НаборЗаписей.Отбор.Номенклатура.Установить(Выбрано.Номенклатура);  
	НаборЗаписей.Отбор.Номенклатура.Установить(Выбрано.Характеристика);
	НаборЗаписей.Отбор.Номенклатура.Установить(Выбрано.Ячейка);
	
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	ФинишТранзакции(Истина);
	
	БЗ_TSDAPI.ИнициализацияПакетаОтвета(БЗ_TSDRU.ТипыФреймов().list_update);
	ПараметрыДанных=БЗ_TSDRU.ПараметрыДанныхФреймаСписка();
	Данные=Новый Структура();
	Данные.Вставить(ПараметрыДанных.ls,ВводДанных_ПолучитьСписок(Истина));
	БЗ_TSDRU.Ответ().Вставить(БЗ_TSDRU.ПараметрыПакетОтвета().play_sound,"info");
	БЗ_TSDRU.Ответ().payload=Данные;	
КонецПроцедуры

Процедура ВводДанных_ОбработчикСобытий()
	СТЗапрос=БЗ_TSDRU.Запрос();
	Если СТЗапрос.action="select" Тогда
		Выбрано=БЗ_TSDAPI.ПолучитьВыбраннуюСтроку(БЗ_TSDRU.ВременныеПеременные().ТБТовары);
		Если Выбрано=Неопределено Тогда
			БЗ_TSDAPI.ПустойОтветНаЗапрос();
			Возврат
		КонецЕсли;         
		
		структураТовара= НОвый Структура();
		структураТовара.Вставить("Номенклатура", Выбрано.Номенклатура);
		структураТовара.Вставить("Характеристика", Выбрано.Характеристика);
		структураТовара.Вставить("Ячейка", Выбрано.Ячейка);
		структураТовара.Вставить("Количество", Выбрано.факт);
		структураТовара.Вставить("Наименование",Выбрано.Номенклатура.наименование+ " " +выбрано.характеристика.наименование+ " "+ выбрано.Ячейка);
		
		БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Вставить("ВыбранныйТовар",структураТовара);
		БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.Вставить("СканированиеШК","");
		АктивироватьРежим("ВводКоличества");
	ИначеЕсли СТЗапрос.action="scan" Тогда
	//	ВводДанных_НайтиТоварПоШК(СТЗапрос.data); 
	БЗ_TSDAPI.ПустойОтветНаЗапрос();

	ИначеЕсли СТЗапрос.action="swipe_delete" Тогда
		ВводДанных_УдалитьТовар(Число(СТЗапрос.data));
	ИначеЕсли СТЗапрос.action="key" Тогда
		Данные=Лев(СТЗапрос.data,4);
		Если Данные=БЗ_TSDRU.ПеречислениеКнопок().КН_ESC Тогда // Назад
			АктивироватьРежим("ОсновноеМеню");
			Возврат;
		КонецЕсли;
	Иначе
		БЗ_TSDAPI.ПустойОтветНаЗапрос();
	КонецЕсли;	
КонецПроцедуры
 #КонецОбласти

#Область ВводКоличества
Процедура ВводКоличества_Активация()
	Перем Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП;
	БЗ_TSDAPI.ИнициализацияПакетаОтвета(БЗ_TSDRU.ТипыФреймов().edit);
	БЗ_TSDAPI.ИнициализацияПараметров(Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП);
	БЗ_TSDAPI.ПерехватСобытий(БЗ_TSDRU.ПеречислениеКнопок().КН_ESC + БЗ_TSDRU.ПеречислениеКнопок().КН_ENT); // Кнопка назад + Ввод значения
	ПараметрыДанных=БЗ_TSDRU.ПараметрыДанныхФреймаТекста();
	
	АктивныйДокумент=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.АктивныйДокумент;
	
	// Заполнение Шапки
	Шапка.Вставить(РядШапка.hr1,БЗ_TSDAPI.РядАвторизацииПользователя());	
	
	ШРяд2=Новый Структура(); // Документ
	ТПоле=Новый Структура();
	ТПоле.Вставить(ТП.tx,"ДОКУМЕНТ "+АктивныйДокумент.Номер+" ("+Формат(АктивныйДокумент.Дата,"ДФ=dd.MM.yyyy")+")");
	ТПоле.Вставить(ТП.al,"cc");
	ТПоле.Вставить(ТП.fs,"17");
	ТПоле.Вставить(ТП.tf,"b");
	ТПоле.Вставить(ТП.pd,"2 2 2 2");
	ТПоле.Вставить(ТП.tc,"#993300");
	ТПоле.Вставить(ТП.bc,"#BCEBEB");
	ШРяд2.Вставить(Колонки.c1,ТПоле);	
	Шапка.Вставить(РядШапка.hr2,ШРяд2);
	
	ШРяд3=Новый Структура();
	ТПоле=Новый Структура();
	ТПоле=Новый Структура();	
	ТПоле.Вставить(ТП.tx,"ВВОД КОЛИЧЕСТВА");
	ТПоле.Вставить(ТП.al,"cc");
	ТПоле.Вставить(ТП.fs,"22");
	ТПоле.Вставить(ТП.tf,"b");
	ТПоле.Вставить(ТП.pd,"2 2 4 4");
	ТПоле.Вставить(ТП.tc,"#FFFFFF");
	ТПоле.Вставить(ТП.bc,"#000080");
	ШРяд3.Вставить(Колонки.c1,ТПоле);
	Шапка.Вставить(РядШапка.hr3,ШРяд3);
	
	ШРяд4=Новый Структура();
	ТПоле=Новый Структура();
	ТПоле=Новый Структура();	
	ТПоле.Вставить(ТП.tx,БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.ВыбранныйТовар.Наименование);
	ТПоле.Вставить(ТП.al,"cc");
	ТПоле.Вставить(ТП.tc,"#0000FF");
	ТПоле.Вставить(ТП.fs,"20");
	ТПоле.Вставить(ТП.ff,"roboto_medium");
	ТПоле.Вставить(ТП.sw,1);
	ТПоле.Вставить(ТП.sc,"#0000FF");
	ТПоле.Вставить(ТП.pd,"10 10 10 10");
	ТПоле.Вставить(ТП.mr,"0 0 2 2");
	ШРяд4.Вставить(Колонки.c1,ТПоле);
	Шапка.Вставить(РядШапка.hr4,ШРяд4);
	
	// Основная область
	ПоляВвода=БЗ_TSDRU.ПараметрыПолейВвода();
	ПВ=БЗ_TSDRU.ПараметрыПолеВвода();
	ОбластьПолейВвода=Новый Структура();		
	ТПолеВвода=Новый Структура();		
	ТПолеВвода.Вставить(ПВ.al,"сс");
	ТПолеВвода.Вставить(ПВ.tp,"number");
	ТПолеВвода.Вставить(ПВ.ff,"roboto_medium");
	ТПолеВвода.Вставить(ПВ.fs,"40");      
	ТПолеВвода.Вставить(ПВ.tx,БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка.ВыбранныйТовар.количество);	
	ТПолеВвода.Вставить(ПВ.mx,"6");
	ТПолеВвода.Вставить(ПВ.pd,"5 5 8 8");
	РядПоляВвода=Новый Структура();
	РядПоляВвода.Вставить(ПоляВвода.edt,ТПолеВвода);
	РядПоляВвода.Вставить(ТП.pd,"35 35 0 0");
	РядПоляВвода.Вставить(ТП.mr,"0 0 10 0");
	ОбластьПолейВвода.Вставить(ПоляВвода.re1,РядПоляВвода);
	
	Данные.Вставить(ПараметрыДанных.hd,Шапка);
	Данные.Вставить(ПараметрыДанных.ct,ОбластьПолейВвода);
	
	БЗ_TSDRU.Ответ().payload=Данные;	
КонецПроцедуры

Процедура ВводКоличества_ОбработчикСобытий()
	Перем Шапка,Данные,Подвал,РядШапка,РядПодвал,Колонки,ТП;
	
	СТЗапрос=БЗ_TSDRU.Запрос();
	Если СТЗапрос.action="key" Тогда
		Данные=Лев(СТЗапрос.data,4);
		Если Данные=БЗ_TSDRU.ПеречислениеКнопок().КН_ESC Тогда // Назад
			АктивироватьРежим("ВводДанных");
			Возврат;
		ИначеЕсли Данные=БЗ_TSDRU.ПеречислениеКнопок().КН_ENT Тогда // Ввод данных
			Введено=СокрЛП(БЗ_TSDAPI.ПолучитьДанныеПоляВвода(СТЗапрос.data,1));
			Если Введено="" Тогда
				БЗ_TSDAPI.ПустойОтветНаЗапрос();
			КонецЕсли;
			Попытка
				ВведеноЧисло=Число(Введено);
			Исключение
				БЗ_TSDAPI.ПустойОтветНаЗапрос();
				Возврат;
			КонецПопытки;
			Параметры=БЗ_TSDRU.Сессия().ПараметрыСессии.Приемка;
			ДобавитьВведенныеДанные(Параметры.ВыбранныйТовар,ВведеноЧисло,Параметры.СканированиеШК);			
		Иначе
			БЗ_TSDAPI.ПустойОтветНаЗапрос();
		КонецЕсли;		
	Иначе
		БЗ_TSDAPI.ПустойОтветНаЗапрос();
	КонецЕсли;	
КонецПроцедуры
 #КонецОбласти
