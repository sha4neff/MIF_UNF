Функция СравнитьХранилища(Хранилище1, Хранилище2)

    Если ТипЗнч(Хранилище1)=Тип("ХранилищеЗначения") Тогда
        ДвоичныеДанные1 = Хранилище1.Получить();
    ИначеЕсли ТипЗнч(Хранилище1)=Тип("ДвоичныеДанные") Тогда
        ДвоичныеДанные1 = Хранилище1;
    Иначе
        Возврат Неопределено;
    КонецЕсли;

    Если ТипЗнч(Хранилище2)=Тип("ХранилищеЗначения") Тогда
        ДвоичныеДанные2 = Хранилище2.Получить();
    ИначеЕсли ТипЗнч(Хранилище2)=Тип("ДвоичныеДанные") Тогда
        ДвоичныеДанные2 = Хранилище2;
    Иначе
        Возврат Неопределено;
    КонецЕсли;

	Если (ДвоичныеДанные1 = Неопределено ИЛИ ДвоичныеДанные2 = Неопределено)
		И НЕ (ДвоичныеДанные1 = Неопределено И ДвоичныеДанные2 = Неопределено)
        Тогда
        Возврат Ложь;
	ИначеЕсли   (ДвоичныеДанные1 = Неопределено И ДвоичныеДанные2 = Неопределено)
        Тогда
        Возврат Истина;
    КонецЕсли;

    Base64Строка1 = Base64Строка(ДвоичныеДанные1);
    Base64Строка2 = Base64Строка(ДвоичныеДанные2);

    Возврат Base64Строка1 = Base64Строка2;

КонецФункции

Функция ПолучитьПутьКонвертера(ВидПрограммы) Экспорт
	
	Если ВидПрограммы = Перечисления.БЗ_ВидыПрограмм.Xilog Тогда //Другие не делаем пока
		Возврат "C:\Program Files (x86)\Scm Group\Xilog Plus\Bin\WinXiso.exe";
	Иначе
		Возврат "";
	КонецЕсли
	
КонецФункции



Функция ДобавитьФайл(ФайлПрограммы, Наименование = "", Стандартный = Ложь, Отказ, ОписаниеОшибки) Экспорт
		ИмяФайла = ФайлПрограммы.Имя;
		ПутьФайла = ФайлПрограммы.Путь;                   
	    ПолноеИмяФайла = ФайлПрограммы.ПолноеИмя;
		
		ДанныеФайла = Новый ДвоичныеДанные(ПолноеИмяФайла);
		
		ПараметрыФайла = Новый Структура;
		ПараметрыФайла.Вставить("ИмяФайла", ИмяФайла);	
		ПараметрыФайла.Вставить("ПутьФайла", ПутьФайла);	
		ПараметрыФайла.Вставить("Наименование", Наименование);	
		ПараметрыФайла.Вставить("Стандартный", Стандартный);	
		
		Возврат ДобавитьДанные(ДанныеФайла, ПараметрыФайла, Отказ, ОписаниеОшибки);
		
КонецФункции
	                     
Функция ДобавитьФайлИзВХ(АдресЗагруженногоФайла, ПараметрыФайла, Отказ, ОписаниеОшибки) Экспорт    
	//Параметры = Новый Структура;
	//Параметры.Вставить("ИмяФайла", ИмяФайла);	
	//Параметры.Вставить("ПутьФайла", ПутьФайла);	
	//Параметры.Вставить("Наименование", Наименование);	
	//Параметры.Вставить("Стандартный", Стандартный);	
    Если ЭтоАдресВременногоХранилища(АдресЗагруженногоФайла) Тогда
		
        ДанныеФайла = ПолучитьИзВременногоХранилища(АдресЗагруженногоФайла);
		Возврат ДобавитьДанные(ДанныеФайла, ПараметрыФайла, Отказ, ОписаниеОшибки);
		
    КонецЕсли;
		
КонецФункции
	
	

Функция ДобавитьДанные(ДанныеФайла, ПараметрыФайла, Отказ, ОписаниеОшибки) Экспорт
	
		ПолноеИмяФайла = ПолучитьИмяФайла(ПараметрыФайла.ПутьФайла,  ПараметрыФайла.ИмяФайла);
		Хеш = Новый ХешированиеДанных(ХешФункция.SHA256);
		ХешФункцияИмя = "SHA256";
		Хеш.Добавить(ДанныеФайла);
 
        ХешСтрока = НРег(СтрЗаменить(Строка(Хеш.ХешСумма), " ", ""));
		
		СпрФайлы = Справочники.БЗ_MES_ФайлыПрограммСтанков;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БЗ_MES_ФайлыПрограммСтанков.Ссылка,
		|	БЗ_MES_ФайлыПрограммСтанков.Вариант
		|ИЗ
		|	Справочник.БЗ_MES_ФайлыПрограммСтанков КАК БЗ_MES_ФайлыПрограммСтанков
		|ГДЕ
		|	БЗ_MES_ФайлыПрограммСтанков.ХешСтрока = &ХешСтрока
		|	И НЕ БЗ_MES_ФайлыПрограммСтанков.Архив";
		
		Запрос.УстановитьПараметр("ХешСтрока", ХешСтрока);
		
		НайденыФайлы = Запрос.Выполнить().Выгрузить();
		
		Вариант = 0;
		Если НайденыФайлы.Количество() > 0 Тогда
			Для Каждого ВариантФайл из НайденыФайлы Цикл // Сравниваем все файлы.
				Если СравнитьХранилища(ВариантФайл.Ссылка.ФайлПрограммы, ДанныеФайла) Тогда 
					ОписаниеОшибки = "";
					ВариантФайлОбъект = ВариантФайл.Ссылка.ПолучитьОбъект(); 
					ЗаполнитьЗначенияСвойств(ВариантФайлОбъект, ПараметрыФайла);
					ВариантФайлОбъект.Наименование = ?(ЗначениеЗаполнено(ВариантФайлОбъект.Наименование),ВариантФайлОбъект.Наименование, ПараметрыФайла.ИмяФайла);
					ВариантФайлОбъект.ДатаОбновления = ТекущаяДата();
					ВариантФайлОбъект.Записать();
					Возврат ВариантФайлОбъект.Ссылка;                                               //Нашли такой же
				Иначе
					Вариант = Макс(Вариант, ВариантФайл.Вариант);  //не совпал
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		//нет файла, или ничего не совпало - добавим новый
		
		Попытка
			ВариантФайлОбъект = СпрФайлы.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(ВариантФайлОбъект, ПараметрыФайла);
			ВариантФайлОбъект.Наименование = ?(ЗначениеЗаполнено(ВариантФайлОбъект.Наименование),ВариантФайлОбъект.Наименование, ПараметрыФайла.ИмяФайла);
			ВариантФайлОбъект.ФайлПрограммы = Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных(9));
			ВариантФайлОбъект.ХешСтрока = ХешСтрока;
			ВариантФайлОбъект.ХешФункция = ХешФункцияИмя;
			ВариантФайлОбъект.Вариант = Вариант + 1;
			ВариантФайлОбъект.ДатаОбновления = ТекущаяДата();
			ВариантФайлОбъект.Записать();
			ОписаниеОшибки = "";
			Возврат ВариантФайлОбъект.Ссылка;
		Исключение
			ОписаниеОшибки="Файл: " + ПолноеИмяФайла + Символы.ПС + ОписаниеОшибки() + Символы.ПС + "Файл не добавлен.";
			БЗ_MES_ПроизводствоОперации.Лог("MES.ПрограммыСтанков.Файлы", УровеньЖурналаРегистрации.Ошибка,,ОписаниеОшибки);
			Отказ = Истина;
			Возврат СпрФайлы.ПустаяСсылка();
		КонецПопытки;
КонецФункции
	
Функция ПолучитьДанныеСКоррекцией(СсылкаНаПрограмму, РабочееМесто, Отказ, ОписаниеОщибки) Экспорт
	Если ТипЗнч(СсылкаНаПрограмму) <> Тип("СправочникСсылка.БЗ_ФайлыСхемРезки") Тогда
		Отказ  = Истина;
		ОписаниеОшибки = "Неправильный тип данных";
	КонецЕсли;
	ТипРабочегоМеста = РабочееМесто.ТипРабочегоМеста;
	ВидПрограммы = ТипРабочегоМеста.ВидПрограммы;
	Если ВидПрограммы = Перечисления.БЗ_ВидыПрограмм.Xilog Тогда //Другие не делаем пока
		Если ЗначениеЗаполнено(ТипРабочегоМеста.КодКорректировкиПриВыгрузке) Тогда
			WinXiso = ПолучитьПутьКонвертера(ВидПрограммы);
			ИмяВременногоФайлаPgm = ПолучитьИмяВременногоФайла(".pgm");	
			ИмяВременногоФайлаXxl = Лев(ИмяВременногоФайлаPgm, СтрДлина(ИмяВременногоФайлаPgm)-4)+".xxl";	
			ИмяВременногоФайлаBmp = Лев(ИмяВременногоФайлаPgm, СтрДлина(ИмяВременногоФайлаPgm)-4)+".bmp";	
			ДанныеФайлаPgm = СсылкаНаПрограмму.ФайлСхемыРезки.Получить();
			ДанныеФайлаPgm.Записать(ИмяВременногоФайлаPgm);
			Попытка 
				КодВозврата = 0;
				ЗапуститьПриложение(WinXiso+" "+ИмяВременногоФайлаPgm+" -s -x"+ИмяВременногоФайлаXxl, ,Истина, КодВозврата);
				Отказ = НЕ (КодВозврата = 0);
			
				ДанныеФайлаXxl = Новый ДвоичныеДанные(ИмяВременногоФайлаXxl);
			Исключение
				Отказ = Истина;
				ДанныеФайлаXxl = Ложь;
				ОписаниеОшибки = ОписаниеОшибки();
			КонецПопытки;
			Возврат ДанныеФайлаXxl;	
		КонецЕсли;
	КонецЕсли;	
КонецФункции
	

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА РАБОТЫ С ФАЙЛАМИ (ХРАНИМЫМИ В КОНФИГУРАЦИИ)
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// Составляет полное имя файла из имени каталога и имени файла.
//
// Параметры
//  ИмяКаталога  – Строка, содержащая путь к каталогу файла на диске.
//  ИмяФайла     – Строка, содержащая имя файла, без имени каталога.
//
// Возвращаемое значение:
//   Строка – полное имя файла с учетом каталога.
//
Функция ПолучитьИмяФайла(ИмяКаталога, ИмяФайла) Экспорт

	Если Не ПустаяСтрока(ИмяФайла) Тогда
		
		Возврат ИмяКаталога + ?(Прав(ИмяКаталога, 1) = "\", "", "\") + ИмяФайла;	
		
	Иначе
		
		Возврат ИмяКаталога;
		
	КонецЕсли;

КонецФункции // ПолучитьИмяФайла()

// Процедура полное имя файла разбивает на путь в файлу и имя самого файла
//
// Параметры
//  ПолноеИмяФайла  – Строка, содержащая полное имя файла на диске.
//  ИмяКаталога  – Строка, содержащая путь к каталогу файла на диске.
//  ИмяФайла     – Строка, содержащая имя файла, без имени каталога.
//
Процедура ПолучитьКаталогИИмяФайла(Знач ПолноеИмяФайла, ИмяКаталога, ИмяФайла) Экспорт
	
	// находим последний с конца "\" все что до него - это путь, после - имя
	НомерПозиции = СтрДлина(ПолноеИмяФайла);
	Пока НомерПозиции <> 0 Цикл
		
		Если Сред(ПолноеИмяФайла, НомерПозиции, 1) = "\" Тогда
			
			ИмяКаталога = Сред(ПолноеИмяФайла, 1, НомерПозиции - 1);
			ИмяФайла = Сред(ПолноеИмяФайла, НомерПозиции + 1);
			Возврат;
			
		КонецЕсли;
		
		НомерПозиции = НомерПозиции - 1;
		
	КонецЦикла;
	
	// так и не нашли слешей, значит все- это имя файла
	ИмяФайла = ПолноеИмяФайла;
	ИмяКаталога = "";
	
КонецПроцедуры

