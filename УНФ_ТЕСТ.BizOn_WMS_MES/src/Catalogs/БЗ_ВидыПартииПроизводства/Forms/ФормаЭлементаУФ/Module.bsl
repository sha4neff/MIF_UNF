Функция ПолучитьГрадиент(НачальныйЦвет, КонечныйЦвет, КоличествоГрадаций)	
	МассивЦветов = Новый Массив;
	МассивЦветов.Добавить(НачальныйЦвет);	
	Если КоличествоГрадаций > 2 И НачальныйЦвет.Вид = ВидЦвета.Абсолютный И КонечныйЦвет.Вид = ВидЦвета.Абсолютный Тогда
		ШагКрасного = (КонечныйЦвет.Красный - НачальныйЦвет.Красный) / КоличествоГрадаций;
		ШагЗеленого = (КонечныйЦвет.Зеленый - НачальныйЦвет.Зеленый) / КоличествоГрадаций;
		ШагСинего = (КонечныйЦвет.Синий - НачальныйЦвет.Синий) / КоличествоГрадаций;		
		ТекКрасный = НачальныйЦвет.Красный;
		ТекЗеленый = НачальныйЦвет.Зеленый;
		ТекСиний = НачальныйЦвет.Синий;		
		Для Сч = 2 По КоличествоГрадаций Цикл
			ТекКрасный = ТекКрасный + ШагКрасного;
			ТекЗеленый = ТекЗеленый + ШагЗеленого;
			ТекСиний = ТекСиний + ШагСинего;			
			МассивЦветов.Добавить(Новый Цвет(Окр(ТекКрасный,0), Окр(ТекЗеленый,0), Окр(ТекСиний,0)));
		КонецЦикла;		
		МассивЦветов[МассивЦветов.ВГраница()] = КонечныйЦвет;		
		Возврат МассивЦветов;		
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции

Функция итКонвертироватьHexВDec(Знач ЧислоСтрокой)
    Результат = 0;
    Шаблон = "0123456789ABCDEF";
    ЧислоСтрокой = ВРег(Строка(ЧислоСтрокой));
    Для ТекущийСимвол = 1 По СтрДлина(ЧислоСтрокой) Цикл
        ПозицияВШаблоне = Найти(Шаблон, Сред(ЧислоСтрокой, ТекущийСимвол, 1))-1;
        Результат = Результат * СтрДлина(Шаблон) + ПозицияВШаблоне;
    КонецЦикла;    
    Возврат Результат;
КонецФункции

Функция итЗагрузитьТаблицуИзМакета(ИмяМакета, ИмяОбласти) Экспорт
	Элемент = РеквизитФормыВЗначение("Объект");
    Макет = Элемент.ПолучитьМакет(ИмяМакета);
    ПостроительЗапроса = Новый ПостроительЗапроса;
    ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(Макет.Область(ИмяОбласти));    
    ПостроительЗапроса.Выполнить();        
    Возврат ПостроительЗапроса.Результат.Выгрузить();    
КонецФункции

Функция итПолучитьАбсолютныйRGBЦвет(Знач Цвет)    
    // Приводим цвет стиля к простому RGB, Абсолютному, Windows-цвету
	Если Цвет.Вид = ВидЦвета.ЭлементСтиля Тогда  
		Для Каждого ОбъектМетаданныхСтиля из Метаданные.ЭлементыСтиля Цикл
		//ОбъектМетаданныхСтиля = Метаданные.ЭлементыСтиля.Найти(Сред(Строка(Цвет), 8));
	        Если ОбъектМетаданныхСтиля = Сред(Строка(Цвет), 8) Тогда 
	            Цвет = ОбъектМетаданныхСтиля.Значение;
			КонецЕсли;    
		КонецЦикла
    КонецЕсли;    
    //Получаем RGB цвет из макета
    Если Цвет.Вид = ВидЦвета.Абсолютный Тогда
        Возврат Цвет;
    ИначеЕсли Цвет.Вид = ВидЦвета.WebЦвет Тогда
        ТаблицаСоответствияЦветов = итЗагрузитьТаблицуИзМакета("СоответствиеЦветовWebИRGB", "ДанныеСоответствияЦветов");        
        ЦветИмяПриведеное = Строка(Цвет);
        ЦветИмяПриведеное = Сред(ЦветИмяПриведеное, Найти(ЦветИмяПриведеное, "(") + 1);
        ЦветИмяПриведеное = Сред(ЦветИмяПриведеное, 1, Найти(ЦветИмяПриведеное, ")") - 1);        
        НайденнаяСтрока = ТаблицаСоответствияЦветов.Найти(ЦветИмяПриведеное, "ИмяЦвета");
        Если НайденнаяСтрока <> Неопределено Тогда
            Возврат Новый Цвет(Число(НайденнаяСтрока.R), Число(НайденнаяСтрока.G), Число(НайденнаяСтрока.B));
        Иначе
            Возврат Новый Цвет(0, 0, 0);
        КонецЕсли;
	ИначеЕсли Цвет.Вид = ВидЦвета.WindowsЦвет ИЛИ Цвет.Вид = ВидЦвета.ЭлементСтиля Тогда
		// не поддерживается
		Возврат Истина; 
    ИначеЕсли Цвет.Вид = ВидЦвета.АвтоЦвет Тогда
        // Пустой цвет (определяется элементом владельцем, не содержит сам цвет)
        Возврат Новый Цвет(0, 0, 0);
    КонецЕсли;
КонецФункции
 
&НаСервере
Процедура ПриОткрытииНаСервере()
	Если Объект.Ссылка.TSDЦветВыделения.Получить()=Неопределено Тогда
		TSDЦветВыделения=Новый ХранилищеЗначения(Новый Цвет(255,255,255));
		//Если НЕ ЭтоНовый() Тогда Записать(); КонецЕсли;
	КонецЕсли;
	Если Объект.Ссылка.TSDЦветВыделенияВыбрано.Получить()=Неопределено Тогда
		TSDЦветВыделенияВыбрано=Новый ХранилищеЗначения(Новый Цвет(149, 169, 200));
		//Если НЕ ЭтоНовый() Тогда Записать(); КонецЕсли;
	КонецЕсли;
	ЦветВыделения=TSDЦветВыделения.Получить();
	ЦветВыделенияВыбрано=TSDЦветВыделенияВыбрано.Получить();
	//ЭлементыФормы.Выделение.ЦветФона=ЦветВыделения;
	//ЭлементыФормы.ВыделениеВыбрано.ЦветФона=ЦветВыделенияВыбрано;	
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры


&НаСервере
Процедура TSDЦветВыделенияПриИзмененииНаСервере(Отказ) 
	Элемент =  РеквизитФормыВЗначение("Объект");

	ЦветВыделения=итПолучитьАбсолютныйRGBЦвет(ЭтаФорма.ЦветВыделения);    
	Если ТипЗНЧ(ЦветВыделения) = Тип("Булево") И ЦветВыделения = Ложь Тогда
		ЦветВыделения = Новый Цвет(255,255,255);
		Отказ = Истина;
	КонецЕсли;
	КонечныйЦвет=Новый Цвет(0,0,0);
	МассивЦ=ПолучитьГрадиент(ЦветВыделения,КонечныйЦвет,5);
	ЭтаФорма.ЦветВыделения = ЦветВыделения;	   
	ЦветВыделенияВыбрано = МассивЦ.Получить(1);
	ЭтаФорма.ЦветВыделенияВыбрано=ЦветВыделенияВыбрано; 
	
	//ЭлементыФормы.Выделение.ЦветФона=ЦветВыделения;
	//ЭлементыФормы.ВыделениеВыбрано.ЦветФона=ЦветВыделенияВыбрано;
	Элемент.TSDЦветВыделения=Новый ХранилищеЗначения(ЦветВыделения);	
	Элемент.TSDЦветВыделенияВыбрано=Новый ХранилищеЗначения(ЦветВыделенияВыбрано);
	Элемент.Записать();
КонецПроцедуры


&НаКлиенте
Процедура TSDЦветВыделенияПриИзменении1(Элемент)    
	Отказ = Ложь;
	TSDЦветВыделенияПриИзмененииНаСервере(Отказ);
	Если Отказ Тогда
		Оповещение = Новый ОписаниеОповещения();
		ПоказатьПредупреждение(Оповещение, "Выбор цвета из палитры стилей и windows цвета недоступны"); 		
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура TSDЦветВыделенияВыбраноПриИзмененииНаСервере()
	ЦветВыделенияВыбрано=итПолучитьАбсолютныйRGBЦвет(ЦветВыделенияВыбрано);
	//ЭлементыФормы.ВыделениеВыбрано.ЦветФона=ЦветВыделенияВыбрано;
	TSDЦветВыделенияВыбрано=Новый ХранилищеЗначения(ЦветВыделенияВыбрано);
КонецПроцедуры


&НаКлиенте
Процедура TSDЦветВыделенияВыбраноПриИзменении1(Элемент)
	TSDЦветВыделенияВыбраноПриИзмененииНаСервере();
КонецПроцедуры

