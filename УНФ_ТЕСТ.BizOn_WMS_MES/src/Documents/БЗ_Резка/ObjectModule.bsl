
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Перем Заголовок;
	// Вставить содержимое обработчика.
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("Организация, Ответственный, Подразделение, ВидПартии, Материал, Операция, Участок");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ИмяТабличнойЧасти = "ВыходныеИзделия";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("КлючИзделия, КлючСхемы, Номенклатура, Коэффициент, ЕдиницаИзмерения");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ИмяТабличнойЧасти = "СхемаРезкиИзделий";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("КлючСхемы, ПорядковыйНомерСхемы, Кратность");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Для идентификации маршрутной карты по Номенлкатуре
	ПровестиПоРегистру_ОперацияРезка_Материалы(Отказ);   
	ПровестиПоРегистру_ОперацияРезка_Изделия(Отказ);   
	Рассчитать_ПартииПроизводства_Параметры(Отказ);
	ПровестиПоРегистру_СменныеЗадания(Отказ);   
	Движения.Записать();	
КонецПроцедуры

Процедура ПровестиПоРегистру_ОперацияРезка_Материалы(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ОперацияРезка_Материалы = Движения.БЗ_ОперацияРезка_Материалы;
	БЗ_ОперацияРезка_Материалы.Записывать = Истина;
	ТЗСхемы = СхемаРезкиИзделий.Выгрузить();
	ТЗСхемы.Свернуть("КлючСхемы, ФайлСхемыРезки, Кратность", "КоличествоШтук"); 
	Для Каждого СТСхема Из ТЗСхемы Цикл
		Движение=БЗ_ОперацияРезка_Материалы.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.КлючСхемы=СТСхема.КлючСхемы;	
		Движение.Номенклатура= Материал;
		Движение.ХарактеристикаНоменклатуры= ХарактеристикаМатериала;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Движение.ФайлСхемыРезки=СТСхема.ФайлСхемыРезки;
		Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.План;
		Движение.Количество=СТСхема.Кратность; //Сколько листов в пачке
	КонецЦикла;		
КонецПроцедуры

Процедура ПровестиПоРегистру_ОперацияРезка_Изделия(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ОперацияРезка_Изделия = Движения.БЗ_ОперацияРезка_Изделия;
	БЗ_ОперацияРезка_Изделия.Записывать = Истина;
	Для Каждого СТИзделие Из ВыходныеИзделия Цикл
		Движение=БЗ_ОперацияРезка_Изделия.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.КлючИзделия=СТИзделие.КлючИзделия;	
		Движение.КлючСхемы=СТИзделие.КлючСхемы;	
		Движение.Номенклатура= СТИзделие.Номенклатура;
		Движение.ХарактеристикаНоменклатуры= СТИзделие.ХарактеристикаНоменклатуры;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.План;
		Движение.Количество=СТИзделие.Количество; //Сколько листов в пачке
	КонецЦикла;		
КонецПроцедуры

Процедура ПровестиПоРегистру_СменныеЗадания(Отказ)
	// Вставить содержимое обработчика.
	БЗ_СменныеЗадания = Движения.БЗ_СменныеЗадания;
	БЗ_СменныеЗадания.Записывать = Истина;
	ТЗСхемы = СхемаРезкиИзделий.Выгрузить();
	ТЗСхемы.Свернуть("КлючСхемы, Кратность", "КоличествоШтук"); 
	Для Каждого СТСхема Из ТЗСхемы Цикл
		Движение=БЗ_СменныеЗадания.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.НачалоПериода=Дата;
		Движение.КлючПартии=СТСхема.КлючСхемы;	
		Движение.Номенклатура= Материал;
		Движение.ХарактеристикаНоменклатуры= ХарактеристикаМатериала;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.План;
		Движение.Количество=СТСхема.Кратность; //Сколько листов в пачке
	КонецЦикла;		
КонецПроцедуры


Процедура	Рассчитать_ПартииПроизводства_Параметры(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ПартииПроизводства_Параметры = Движения.БЗ_ПартииПроизводства_Параметры;
	БЗ_ПартииПроизводства_Параметры.Записывать = Истина;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	БЗ_РезкаСхемаРезкиИзделий.КлючСхемы КАК КлючПартии,
	|	МАКСИМУМ(БЗ_Резка.МаршрутныйЛист) КАК МаршрутныйЛист,
	|	МАКСИМУМ(БЗ_Резка.РасчетРезки) КАК РасчетРезки,
	|	МАКСИМУМ(БЗ_Резка.Ссылка) КАК Резка,
	|	МАКСИМУМ(БЗ_Резка.Материал) КАК Номенклатура,
	|	МАКСИМУМ(БЗ_Резка.ХарактеристикаМатериала) КАК ХарактеристикаНоменклатуры,
	|	СУММА(БЗ_РезкаСхемаРезкиИзделий.Кратность) КАК Количество,
	|	МАКСИМУМ(БЗ_Резка.КоэффициентШтук) КАК Коэффициент,
	|	МАКСИМУМ(БЗ_Резка.ЕдиницаИзмеренияШтук) КАК ЕдиницаИзмерения,
	|	СУММА(БЗ_РезкаСхемаРезкиИзделий.Кратность) КАК Кратность,
	|	МАКСИМУМ(БЗ_Резка.ВидПартии) КАК ВидПартии,
	|	МАКСИМУМ(БЗ_Резка.Организация) КАК Организация,
	|	МАКСИМУМ(БЗ_Резка.Подразделение) КАК Подразделение
	|ПОМЕСТИТЬ КлючиПартии
	|ИЗ
	|	Документ.БЗ_Резка КАК БЗ_Резка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_Резка.СхемаРезкиИзделий КАК БЗ_РезкаСхемаРезкиИзделий
	|		ПО БЗ_Резка.Ссылка = БЗ_РезкаСхемаРезкиИзделий.Ссылка
	|ГДЕ
	|	БЗ_Резка.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БЗ_РезкаСхемаРезкиИзделий.КлючСхемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлючиПартии.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Единицы
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.ЕдиницаИзмерения,
	|	КлючиПартии.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Единицы.Номенклатура КАК Номенклатура,
	|	Единицы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕдиницыИзмерения.Вес КАК Вес,
	|	ЕдиницыИзмерения.Объем КАК Объем,
	|	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	|	ЕдиницыИзмерения.Ширина КАК РазмерX,
	|	ЕдиницыИзмерения.Высота КАК РазмерY,
	|	ЕдиницыИзмерения.Глубина КАК РазмерZ,
	|	ЕдиницыИзмерения.Ширина * ЕдиницыИзмерения.Высота / 1000000 КАК Площадь
	|ПОМЕСТИТЬ ПараметрыЕдиниц
	|ИЗ
	|	Единицы КАК Единицы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Единицы.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ХарактеристикиНоменклатуры
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Характеристики.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗначенияСвойствОбъектовЦвет.Значение КАК Цвет
	|ПОМЕСТИТЬ ПараметрыЦвет
	|ИЗ
	|	ХарактеристикиНоменклатуры КАК Характеристики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовЦвет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектовЦвет
	|			ПО ЗначенияСвойствОбъектовЦвет.Свойство = СвойстваОбъектовЦвет.Ссылка
	|		ПО Характеристики.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектовЦвет.Объект
	|ГДЕ
	|	СвойстваОбъектовЦвет.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры)
	|	И СвойстваОбъектовЦвет.Наименование = ""Цвет""
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияСвойствОбъектовЦвет.Значение,
	|	Характеристики.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Характеристики.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗначенияСвойствОбъектовБренд.Значение КАК Бренд
	|ПОМЕСТИТЬ ПараметрыБренд
	|ИЗ
	|	ХарактеристикиНоменклатуры КАК Характеристики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовБренд
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектовБренд
	|			ПО ЗначенияСвойствОбъектовБренд.Свойство = СвойстваОбъектовБренд.Ссылка
	|		ПО Характеристики.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектовБренд.Объект
	|ГДЕ
	|	СвойстваОбъектовБренд.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры)
	|	И СвойстваОбъектовБренд.Наименование = ""Бренд""
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияСвойствОбъектовБренд.Значение,
	|	Характеристики.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии КАК КлючПартии,
	|	МАКСИМУМ(БЗ_РезкаВыходныеИзделия.ЗаказНаПроизводство) КАК ЗаказНаПроизводство,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БЗ_РезкаВыходныеИзделия.ЗаказНаПроизводство) КАК ЗаказНаПроизводствоРазличных
	|ПОМЕСТИТЬ ЗаказыНаПроизводство
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_Резка.ВыходныеИзделия КАК БЗ_РезкаВыходныеИзделия
	|		ПО КлючиПартии.Резка = БЗ_РезкаВыходныеИзделия.Ссылка
	|			И КлючиПартии.КлючПартии = БЗ_РезкаВыходныеИзделия.КлючСхемы
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии КАК КлючПартии,
	|	МАКСИМУМ(БЗ_РезкаВыходныеИзделия.Номенклатура.НоменклатурнаяГруппаТорговля) КАК НоменклатурнаяГруппа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БЗ_РезкаВыходныеИзделия.Номенклатура.НоменклатурнаяГруппаТорговля) КАК НоменклатурнаяГруппаРазличных
	|ПОМЕСТИТЬ НоменклатурныеГруппы
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_Резка.ВыходныеИзделия КАК БЗ_РезкаВыходныеИзделия
	|		ПО КлючиПартии.Резка = БЗ_РезкаВыходныеИзделия.Ссылка
	|			И КлючиПартии.КлючПартии = БЗ_РезкаВыходныеИзделия.КлючСхемы
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии КАК КлючПартии,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА БЗ_РезкаВыходныеИзделия.Номенклатура.ВидФрезеровки = ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|				ТОГДА БЗ_РезкаВыходныеИзделия.Номенклатура.НоменклатурнаяГруппаТорговля.ВидФрезеровки
	|			ИНАЧЕ БЗ_РезкаВыходныеИзделия.Номенклатура.ВидФрезеровки
	|		КОНЕЦ) КАК ВидФрезеровки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА БЗ_РезкаВыходныеИзделия.Номенклатура.ВидФрезеровки = ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|				ТОГДА БЗ_РезкаВыходныеИзделия.Номенклатура.НоменклатурнаяГруппаТорговля.ВидФрезеровки
	|			ИНАЧЕ БЗ_РезкаВыходныеИзделия.Номенклатура.ВидФрезеровки
	|		КОНЕЦ) КАК ВидФрезеровкиРазличных
	|ПОМЕСТИТЬ ВидыФрезеровки
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_Резка.ВыходныеИзделия КАК БЗ_РезкаВыходныеИзделия
	|		ПО КлючиПартии.Резка = БЗ_РезкаВыходныеИзделия.Ссылка
	|			И КлючиПартии.КлючПартии = БЗ_РезкаВыходныеИзделия.КлючСхемы
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии КАК КлючПартии,
	|	КлючиПартии.МаршрутныйЛист КАК МаршрутныйЛист,
	|	КлючиПартии.Резка КАК Резка,
	|	КлючиПартии.РасчетРезки КАК РасчетРезки,
	|	КлючиПартии.Организация КАК Организация,
	|	КлючиПартии.Подразделение КАК Подразделение,
	|	КлючиПартии.Номенклатура КАК Номенклатура,
	|	КлючиПартии.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	КлючиПартии.Количество КАК Количество,
	|	КлючиПартии.Коэффициент КАК Коэффициент,
	|	КлючиПартии.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлючиПартии.Кратность КАК Кратность,
	|	КлючиПартии.ВидПартии КАК ВидПартии,
	|	ПараметрыЦвет.Цвет КАК Цвет,
	|	ПараметрыБренд.Бренд КАК Бренд,
	|	ПараметрыЕдиниц.Вес КАК Вес,
	|	ПараметрыЕдиниц.Объем КАК Объем,
	|	ПараметрыЕдиниц.Площадь КАК Площадь,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказыНаПроизводство.ЗаказНаПроизводствоРазличных, 0) = 1
	|			ТОГДА ЗаказыНаПроизводство.ЗаказНаПроизводство
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказНаПроизводство,
	|	ПараметрыЕдиниц.РазмерX КАК РазмерX,
	|	ПараметрыЕдиниц.РазмерY КАК РазмерY,
	|	ПараметрыЕдиниц.РазмерZ КАК РазмерZ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыФрезеровки.ВидФрезеровкиРазличных, 0) = 1
	|			ТОГДА ВидыФрезеровки.ВидФрезеровки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|	КОНЕЦ КАК ВидФрезеровки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НоменклатурныеГруппы.НоменклатурнаяГруппаРазличных, 0) = 1
	|			ТОГДА НоменклатурныеГруппы.НоменклатурнаяГруппа
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	КОНЕЦ КАК НоменклатурнаяГруппа
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЕдиниц КАК ПараметрыЕдиниц
	|		ПО КлючиПартии.ЕдиницаИзмерения = ПараметрыЕдиниц.ЕдиницаИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦвет КАК ПараметрыЦвет
	|		ПО КлючиПартии.ХарактеристикаНоменклатуры = ПараметрыЦвет.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыБренд КАК ПараметрыБренд
	|		ПО КлючиПартии.ХарактеристикаНоменклатуры = ПараметрыБренд.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыНаПроизводство КАК ЗаказыНаПроизводство
	|		ПО КлючиПартии.КлючПартии = ЗаказыНаПроизводство.КлючПартии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыФрезеровки КАК ВидыФрезеровки
	|		ПО КлючиПартии.КлючПартии = ВидыФрезеровки.КлючПартии
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатурныеГруппы КАК НоменклатурныеГруппы
	|		ПО КлючиПартии.КлючПартии = НоменклатурныеГруппы.КлючПартии";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Параметры = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Параметр Из Параметры Цикл
		Движение=БЗ_ПартииПроизводства_Параметры.Добавить();
		Движение.Активность = Истина;
		Движение.Период=Дата;
		ЗаполнитьЗначенияСвойств(Движение, Параметр);
	КонецЦикла;		
КонецПроцедуры

