
&НаКлиенте
Процедура Печать(Команда)
 
	СтруктураВозврат = ПечатьНаСервере();
	
	КоллекцияПечатныхФорм = Новый Массив;
	КоллекцияПечатныхФорм.Добавить(СтруктураВозврат.ЭлементКоллекцииДляПечати);
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ПереопределитьПользовательскиеНастройкиКоличества", Истина);
	
	ПараметрыОткрытия = Новый Структура("КоллекцияПечатныхФорм,ИсточникДанных,ПараметрыПечати");
	ПараметрыОткрытия.КоллекцияПечатныхФорм = КоллекцияПечатныхФорм;
	ПараметрыОткрытия.ИсточникДанных = КоллекцияПечатныхФорм;
	ПараметрыОткрытия.ПараметрыПечати	 = ПараметрыПечати;
	
	ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, ЭтаФорма, Строка(Новый УникальныйИдентификатор));
КонецПроцедуры

&НаСервере
функция ПечатьНаСервере()
	 макет=Документы.БЗ_ПриемкаВЯчейки.ПолучитьМакет("Этикетки");
	 тб= Новый ТабличныйДокумент();  
	 	ширина=250;
		высота=100;

	 Для каждого стр из объект.запасы цикл
		новстр=макет.ПолучитьОбласть("Этикетка");
		новстр.Параметры.Наименование=стр.Номенклатура.наименование+ " " + стр.Характеристика + " " +стр.Ячейка;
		//новстр.Параметры.текдата=объект.Дата;	       
		шк=ПолучитьЕАН(стр.номенклатура, стр.характеристика, стр.Ячейка);
		новстр.Рисунки.ean.картинка=ПолучитьШтрихкод(Ширина,Высота,шк ,1,0 );	
		//ОбластьМакета.Параметры.ШКод=БЗ_Штрихкодирование.CODE128Строка(Объект.СканКод);
  		тб.Вывести(новстр);
	КонецЦикла;       
	
	ЭлементКоллекцииДляПечати = Новый Структура;
	Для Каждого ИмяКолонки Из УправлениеПечатьюКлиентСервер.ИменаПолейКоллекцииПечатныхФорм() Цикл
		ЭлементКоллекцииДляПечати.Вставить(ИмяКолонки);
	КонецЦикла;
	ЭлементКоллекцииДляПечати.ТабличныйДокумент = тб;
	ЭлементКоллекцииДляПечати.СинонимМакета = "Печать бейджа этикеток на приемку материалов";
	ЭлементКоллекцииДляПечати.ИмяМакета = "ПечатьЭтикетокПриемкаМатериалов";
	ЭлементКоллекцииДляПечати.ИмяВРЕГ = ЭлементКоллекцииДляПечати.ИмяМакета;
	ЭлементКоллекцииДляПечати.Экземпляров = 1;

	СтруктураВозврат = Новый Структура;
	СтруктураВозврат.Вставить("ЭлементКоллекцииДляПечати", ЭлементКоллекцииДляПечати);
	МассивОбъектов = Новый Массив;
	СтруктураВозврат.Вставить("ИсточникДанных", МассивОбъектов);	
	Возврат СтруктураВозврат;	

Конецфункции

Функция ПолучитьЕАН(номенклатура, Характеристика, партия)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика   
	|	И ШтрихкодыНоменклатуры.Ячейка = &Ячейка
	|	И ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &Штрихкод";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);     
	Запрос.УстановитьПараметр("Ячейка",Партия);
	Запрос.УстановитьПараметр("Штрихкод", "201587_______");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ШтрихКод;	
	КонецЦикла;
	
	менеджерЗаписи = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи(); 
	менеджерЗаписи.Активность=Истина;
	менеджерЗАписи.Номенклатура  =номенклатура;
	менеджерЗАписи.Характеристика=     Характеристика;   
	менеджерЗаписи.Партия=партия;
	менеджерЗаписи.Штрихкод=РегистрыСведений.ШтрихкодыНоменклатуры.СформироватьШтрихкодEAN13();
	МенеджерЗаписи.Записать();
	н=номенклатура.получитьОбъект();
	н.Записать();
	Возврат менеджерЗаписи.Штрихкод;
КонецФункции

Функция ПолучитьШтрихкод(ШиринаШтрихкода, ВысотаШтрихкода, ЗначШтрихкод, ЗначТипШтрихкода,УголПоворота)
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ВнешняяКомпонента = ГенерацияШтрихкодаСерверПовтИсп.ПодключитьКомпонентуГенерацииИзображенияШтрихкода(Строка(СистемнаяИнформация.ТипПлатформы));
	Если ВнешняяКомпонента = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Ошибка подключения внешней компоненты печати штрихкода.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	ВнешняяКомпонента.Ширина = ШиринаШтрихкода;
	ВнешняяКомпонента.Высота = ВысотаШтрихкода;
	ВнешняяКомпонента.АвтоТип = Ложь;
	ВнешняяКомпонента.ТипКода = ЗначТипШтрихкода;
	ВнешняяКомпонента.ПрозрачныйФон = ЛОЖЬ;
	ВнешняяКомпонента.ТипВходныхДанных = 0;
	ВнешняяКомпонента.GS1DatabarКоличествоСтрок = 1;
	ВнешняяКомпонента.УровеньКоррекцииQR = 2;
	ВнешняяКомпонента.УголПоворота =уголПоворота;
	ВнешняяКомпонента.ОтображатьТекст = Истина;
	ВнешняяКомпонента.ЗначениеКода = ЗначШтрихкод;
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода.
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода;
	КонецЕсли;
	// Если установленная нами высота меньше минимально допустимой для этого штрихкода.
	Если ВнешняяКомпонента.Высота < ВнешняяКомпонента.МинимальнаяВысотаКода Тогда
		ВнешняяКомпонента.Высота = ВнешняяКомпонента.МинимальнаяВысотаКода;
	КонецЕсли;
	
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	Если ДвоичныеДанныеКартинки = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось получить картинку штрихкода.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Возврат  Новый Картинка(ДвоичныеДанныеКартинки);
КонецФункции

