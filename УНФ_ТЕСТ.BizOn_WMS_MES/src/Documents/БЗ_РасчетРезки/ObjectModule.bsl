
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Перем Заголовок;
	// Вставить содержимое обработчика.
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("Организация, Ответственный, Подразделение, ВидПартии, Материал, Операция, Участок");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ИмяТабличнойЧасти = "ВыходныеИзделия";

	Если Статус = Перечисления.БЗ_СтатусыТехнологическихОпераций.Завершен Тогда
		// Укажем, что надо проверить:
		СтруктураОбязательныхПолей = 
		Новый Структура("КлючИзделия, КлючСхемы, Номенклатура, Коэффициент, ЕдиницаИзмерения");
	Иначе
		// Укажем, что надо проверить:
		СтруктураОбязательныхПолей = 
		Новый Структура("КлючИзделия, Номенклатура, Коэффициент, ЕдиницаИзмерения");
	КонецЕсли;	

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ИмяТабличнойЧасти = "СхемаРезкиИзделий";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("КлючСхемы, ПорядковыйНомерСхемы, Кратность");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Для идентификации маршрутной карты по Номенлкатуре
	//ПровестиПоРегистру_ОперацияРезка_Материалы(Отказ);   
	Если Статус <> Перечисления.БЗ_СтатусыРасчетаРезки.ВРасчете 
		И Статус <> Перечисления.БЗ_СтатусыРасчетаРезки.Рассчитан  Тогда
		БЗ_ОперацияРезка_Изделия = Движения.БЗ_ОперацияРезка_Изделия;
		БЗ_ОперацияРезка_Изделия.Очистить();
		БЗ_ОперацияРезка_Изделия.Записывать = Истина;
		БЗ_ОперацияРезка_Материалы = Движения.БЗ_ОперацияРезка_Материалы;
		БЗ_ОперацияРезка_Материалы.Очистить();
		БЗ_ОперацияРезка_Материалы.Записывать = Истина;
		БЗ_ОстаткиНаУчастках = Движения.БЗ_ОстаткиНаУчастках;
		БЗ_ОстаткиНаУчастках.Очистить();
		БЗ_ОстаткиНаУчастках.Записывать = Истина;	
		БЗ_ПартииПроизводства_Параметры = Движения.БЗ_ПартииПроизводства_Параметры;
		БЗ_ПартииПроизводства_Параметры.Очистить();
		БЗ_ПартииПроизводства_Параметры.Записывать = Истина;	
	Иначе
		ПровестиПоРегистру_ОперацияРезка_Изделия(Отказ);
		ПровестиПоРегистру_ОперацияРезка_Материалы(Отказ);
		ПровестиПоРегистру_ОстаткиНаУчастках(Отказ);   
		//Рассчитать_ПартииПроизводства_Параметры(Отказ)
	КонецЕсли;
	Движения.Записать();	
КонецПроцедуры

Процедура ПровестиПоРегистру_ОперацияРезка_Материалы(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ОперацияРезка_Материалы = Движения.БЗ_ОперацияРезка_Материалы;
	БЗ_ОперацияРезка_Материалы.Записывать = Истина;
	ТЗСхемы = СхемаРезкиИзделий.Выгрузить();
	ТЗСхемы.Свернуть("КлючСхемы, ФайлСхемыРезки, Кратность", "КоличествоШтук"); 
	Для Каждого СТСхема Из ТЗСхемы Цикл
		Движение=БЗ_ОперацияРезка_Материалы.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		//Движение.ДокументПлан=Ссылка;		
		//Движение.Организация=Организация;		
		//Движение.Подразделение=Подразделение;		
		Движение.Период=Дата;
		//Движение.КлючИзделия=СТИзделие.КлючИзделия;	
		Движение.КлючСхемы=СТСхема.КлючСхемы;	
		Движение.Номенклатура= Материал;
		Движение.ХарактеристикаНоменклатуры= ХарактеристикаМатериала;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Движение.ФайлСхемыРезки=СТСхема.ФайлСхемыРезки;
		Если Статус = Перечисления.БЗ_СтатусыРасчетаРезки.Рассчитан Тогда
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Рассчитан;
		Иначе
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Расчет;
		КонецЕсли;
		Движение.Количество=СТСхема.Кратность; //Сколько листов в пачке
		//Движение.КоличествоЗаготовок=СТСхема.КоличествоШтук*СТСхема.Кратность;  //Сколько заготовок на листе/пачке
		Движение.КоличествоОтходы=Количество/КоличествоШтук*СТСхема.Кратность;  //в м2 или погонных м. - метраж, относящийся на очередную пачку.
	КонецЦикла;		
КонецПроцедуры

Процедура ПровестиПоРегистру_ОперацияРезка_Изделия(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ОперацияРезка_Изделия = Движения.БЗ_ОперацияРезка_Изделия;
	БЗ_ОперацияРезка_Изделия.Записывать = Истина;
	Для Каждого СТИзделие Из ВыходныеИзделия Цикл
		Движение=БЗ_ОперацияРезка_Изделия.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.КлючИзделия=СТИзделие.КлючИзделия;	
		Движение.КлючСхемы=СТИзделие.КлючСхемы;	
		Движение.Номенклатура=СТИзделие.Номенклатура;
		Движение.ХарактеристикаНоменклатуры=СТИзделие.ХарактеристикаНоменклатуры;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Если Статус = Перечисления.БЗ_СтатусыРасчетаРезки.Рассчитан ИЛИ ЗначениеЗаполнено(СТИзделие.КлючСхемы) Тогда
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Рассчитан;
		Иначе
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Расчет;
		КонецЕсли;
		Движение.Количество=СТИзделие.Количество; //Сколько листов в пачке
		//Движение.КоличествоЗаготовок=СТСхема.КоличествоШтук*СТСхема.Кратность;  //Сколько заготовок на листе/пачке
		//Движение.КоличествоОтходы=Количество/КоличествоШтук*СТСхема.Кратность;  //в м2 или погонных м. - метраж, относящийся на очередную пачку.
	КонецЦикла;		
	
	Для Каждого СТИзделие Из ВыходныеИзделияВБуфер Цикл
		Движение=БЗ_ОперацияРезка_Изделия.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.КлючИзделия=СТИзделие.КлючИзделия;	
		Движение.КлючСхемы=СТИзделие.КлючСхемы;	
		Движение.Номенклатура=СТИзделие.Номенклатура;
		Движение.ХарактеристикаНоменклатуры=СТИзделие.ХарактеристикаНоменклатуры;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Если Статус = Перечисления.БЗ_СтатусыРасчетаРезки.Рассчитан ИЛИ ЗначениеЗаполнено(СТИзделие.КлючСхемы) Тогда
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Рассчитан;
		Иначе
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Расчет;
		КонецЕсли;
		Движение.Количество=СТИзделие.Количество; //Сколько листов в пачке
		//Движение.КоличествоЗаготовок=СТСхема.КоличествоШтук*СТСхема.Кратность;  //Сколько заготовок на листе/пачке
		//Движение.КоличествоОтходы=Количество/КоличествоШтук*СТСхема.Кратность;  //в м2 или погонных м. - метраж, относящийся на очередную пачку.
	КонецЦикла;		
	
	Для Каждого СТИзделие Из ВыходныеИзделияВРасчете Цикл
		Движение=БЗ_ОперацияРезка_Изделия.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.КлючИзделия=СТИзделие.КлючИзделия;	
		Движение.Номенклатура=СТИзделие.Номенклатура;
		Движение.ХарактеристикаНоменклатуры=СТИзделие.ХарактеристикаНоменклатуры;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Расчет;
		Движение.Количество=СТИзделие.Количество; //Сколько листов в пачке
		//Движение.КоличествоЗаготовок=СТСхема.КоличествоШтук*СТСхема.Кратность;  //Сколько заготовок на листе/пачке
		//Движение.КоличествоОтходы=Количество/КоличествоШтук*СТСхема.Кратность;  //в м2 или погонных м. - метраж, относящийся на очередную пачку.
	КонецЦикла;		
	
	Для Каждого СТИзделие Из ВыходныеИзделияИзБуфера Цикл
		Движение=БЗ_ОперацияРезка_Изделия.Добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Приход;		
		Движение.Активность=Истина;		
		Движение.Период=Дата;
		Движение.КлючИзделия=СТИзделие.КлючИзделия;	
		Движение.Номенклатура=СТИзделие.Номенклатура;
		Движение.ХарактеристикаНоменклатуры=СТИзделие.ХарактеристикаНоменклатуры;
		Движение.Участок=Участок;
		Движение.Операция=Операция;
		Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Рассчитан;
		Движение.Количество=СТИзделие.Количество; //Сколько листов в пачке
		//Движение.КоличествоЗаготовок=СТСхема.КоличествоШтук*СТСхема.Кратность;  //Сколько заготовок на листе/пачке
		//Движение.КоличествоОтходы=Количество/КоличествоШтук*СТСхема.Кратность;  //в м2 или погонных м. - метраж, относящийся на очередную пачку.
	КонецЦикла;		
КонецПроцедуры

Процедура	ПровестиПоРегистру_ОстаткиНаУчастках(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ОстаткиНаУчастках = Движения.БЗ_ОстаткиНаУчастках;
	БЗ_ОстаткиНаУчастках.Записывать = Истина;	
	Для Каждого СТВИИзБуфера Из ВыходныеИзделияИзБуфера Цикл
		Если ЗначениеЗаполнено(СТВИИзБуфера.НоменклатураИзБуфера) Тогда
			Движение=БЗ_ОстаткиНаУчастках.Добавить();
			Движение.Активность = Истина;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период=Дата;		
			Движение.КлючИзделия=СТВИИзБуфера.КлючИзделияИзБуфера;	
			Движение.Номенклатура=СТВИИзБуфера.НоменклатураИзБуфера;
			Движение.ХарактеристикаНоменклатуры=СТВИИзБуфера.ХарактеристикаНоменклатурыИзБуфера;
			Движение.РабочееМесто=СТВИИзБуфера.РабочееМесто;
			Движение.ТЕ=СТВИИзБуфера.ТЕ;
			Движение.Участок=СТВИИзБуфера.УчастокНачальный;
			Движение.Операция=СТВИИзБуфера.ОперацияНачальная;
			Движение.Статус=Перечисления.БЗ_СтатусыОстатковНаУчастке.Хранение;
			Движение.Резерв=СТВИИзБуфера.Количество;
		КонецЕсли;
	КонецЦикла;		
КонецПроцедуры


Процедура	Рассчитать_ПартииПроизводства_Параметры(Отказ)
	// Вставить содержимое обработчика.
	БЗ_ПартииПроизводства_Параметры = Движения.БЗ_ПартииПроизводства_Параметры;
	БЗ_ПартииПроизводства_Параметры.Записывать = Истина;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	БЗ_РасчетРезкиСхемаРезкиИзделий.КлючСхемы КАК КлючПартии,
	|	МАКСИМУМ(БЗ_РасчетРезки.Материал) КАК Номенклатура,
	|	МАКСИМУМ(БЗ_РасчетРезки.ХарактеристикаМатериала) КАК ХарактеристикаНоменклатуры,
	|	СУММА(БЗ_РасчетРезкиСхемаРезкиИзделий.Кратность) КАК Количество,
	|	МАКСИМУМ(БЗ_РасчетРезки.КоэффициентШтук) КАК Коэффициент,
	|	МАКСИМУМ(БЗ_РасчетРезки.ЕдиницаИзмеренияШтук) КАК ЕдиницаИзмерения,
	|	СУММА(БЗ_РасчетРезкиСхемаРезкиИзделий.Кратность) КАК Кратность,
	|	МАКСИМУМ(БЗ_РасчетРезки.ВидПартии) КАК ВидПартии,
	|	МАКСИМУМ(БЗ_РасчетРезки.Организация) КАК Организация,
	|	МАКСИМУМ(БЗ_РасчетРезки.Подразделение) КАК Подразделение,
	|	БЗ_РасчетРезки.Ссылка КАК РасчетРезки,
	|	ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка) КАК ЗаказНаПроизводство
	|ПОМЕСТИТЬ КлючиПартии
	|ИЗ
	|	Документ.БЗ_РасчетРезки КАК БЗ_РасчетРезки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_РасчетРезки.СхемаРезкиИзделий КАК БЗ_РасчетРезкиСхемаРезкиИзделий
	|		ПО БЗ_РасчетРезки.Ссылка = БЗ_РасчетРезкиСхемаРезкиИзделий.Ссылка
	|ГДЕ
	|	БЗ_РасчетРезки.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БЗ_РасчетРезкиСхемаРезкиИзделий.КлючСхемы,
	|	БЗ_РасчетРезки.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_РасчетРезкиВыходныеИзделия.КлючИзделия,
	|	БЗ_РасчетРезкиВыходныеИзделия.Номенклатура,
	|	БЗ_РасчетРезкиВыходныеИзделия.ХарактеристикаНоменклатуры,
	|	БЗ_РасчетРезкиВыходныеИзделия.Количество,
	|	БЗ_РасчетРезкиВыходныеИзделия.Коэффициент,
	|	БЗ_РасчетРезкиВыходныеИзделия.ЕдиницаИзмерения,
	|	1,
	|	БЗ_РасчетРезкиВыходныеИзделия.Ссылка.ВидПартии,
	|	БЗ_РасчетРезкиВыходныеИзделия.Ссылка.Организация,
	|	БЗ_РасчетРезкиВыходныеИзделия.Ссылка.Подразделение,
	|	БЗ_РасчетРезкиВыходныеИзделия.Ссылка.Ссылка,
	|	БЗ_РасчетРезкиВыходныеИзделия.ЗаказНаПроизводство
	|ИЗ
	|	Документ.БЗ_РасчетРезки.ВыходныеИзделия КАК БЗ_РасчетРезкиВыходныеИзделия
	|ГДЕ
	|	БЗ_РасчетРезкиВыходныеИзделия.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.КлючИзделия,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Номенклатура,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.ХарактеристикаНоменклатуры,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Количество,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Коэффициент,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.ЕдиницаИзмерения,
	|	1,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.ВидПартии,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.Организация,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.Подразделение,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.Ссылка,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.ЗаказНаПроизводство
	|ИЗ
	|	Документ.БЗ_РасчетРезки.ВыходныеИзделияИзБуфера КАК БЗ_РасчетРезкиВыходныеИзделияИзБуфера
	|ГДЕ
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.КлючИзделия,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Номенклатура,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.ХарактеристикаНоменклатуры,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Количество,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Коэффициент,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.ЕдиницаИзмерения,
	|	1,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Ссылка.ВидПартии,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Ссылка.Организация,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Ссылка.Подразделение,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Ссылка.Ссылка,
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.ЗаказНаПроизводство
	|ИЗ
	|	Документ.БЗ_РасчетРезки.ВыходныеИзделияВБуфер КАК БЗ_РасчетРезкиВыходныеИзделияВБуфер
	|ГДЕ
	|	БЗ_РасчетРезкиВыходныеИзделияВБуфер.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.КлючИзделия,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Номенклатура,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.ХарактеристикаНоменклатуры,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Количество,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Коэффициент,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.ЕдиницаИзмерения,
	|	1,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.ВидПартии,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.Организация,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.Подразделение,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка.Ссылка,
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.ЗаказНаПроизводство
	|ИЗ
	|	Документ.БЗ_РасчетРезки.ВыходныеИзделияИзБуфера КАК БЗ_РасчетРезкиВыходныеИзделияИзБуфера
	|ГДЕ
	|	БЗ_РасчетРезкиВыходныеИзделияИзБуфера.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлючиПартии.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Единицы
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.ЕдиницаИзмерения,
	|	КлючиПартии.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Единицы.Номенклатура КАК Номенклатура,
	|	Единицы.ЕдиницаИзмерения,
	|	ЕдиницыИзмерения.Вес,
	|	ЕдиницыИзмерения.Объем,
	|	ЕдиницыИзмерения.Коэффициент,
	|	ЕдиницыИзмерения.Ширина КАК РазмерX,
	|	ЕдиницыИзмерения.Высота КАК РазмерY,
	|	ЕдиницыИзмерения.Глубина КАК РазмерZ,
	|	ЕдиницыИзмерения.Ширина * ЕдиницыИзмерения.Высота / 1000000 КАК Площадь
	|ПОМЕСТИТЬ ПараметрыЕдиниц
	|ИЗ
	|	Единицы КАК Единицы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО Единицы.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ХарактеристикиНоменклатуры
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Характеристики.ХарактеристикаНоменклатуры,
	|	ЗначенияСвойствОбъектовЦвет.Значение КАК Цвет
	|ПОМЕСТИТЬ ПараметрыЦвет
	|ИЗ
	|	ХарактеристикиНоменклатуры КАК Характеристики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовЦвет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектовЦвет
	|			ПО ЗначенияСвойствОбъектовЦвет.Свойство = СвойстваОбъектовЦвет.Ссылка
	|		ПО Характеристики.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектовЦвет.Объект
	|ГДЕ
	|	СвойстваОбъектовЦвет.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры)
	|	И СвойстваОбъектовЦвет.Наименование = ""Цвет""
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияСвойствОбъектовЦвет.Значение,
	|	Характеристики.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Характеристики.ХарактеристикаНоменклатуры,
	|	ЗначенияСвойствОбъектовБренд.Значение КАК Бренд
	|ПОМЕСТИТЬ ПараметрыБренд
	|ИЗ
	|	ХарактеристикиНоменклатуры КАК Характеристики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовБренд
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектовБренд
	|			ПО ЗначенияСвойствОбъектовБренд.Свойство = СвойстваОбъектовБренд.Ссылка
	|		ПО Характеристики.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектовБренд.Объект
	|ГДЕ
	|	СвойстваОбъектовБренд.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры)
	|	И СвойстваОбъектовБренд.Наименование = ""Бренд""
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияСвойствОбъектовБренд.Значение,
	|	Характеристики.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии,
	|	МАКСИМУМ(БЗ_РасчетРезкиВыходныеИзделия.ЗаказНаПроизводство) КАК ЗаказНаПроизводство,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БЗ_РасчетРезкиВыходныеИзделия.ЗаказНаПроизводство) КАК ЗаказНаПроизводствоРазличных
	|ПОМЕСТИТЬ ЗаказыНаПроизводство
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_РасчетРезки.ВыходныеИзделия КАК БЗ_РасчетРезкиВыходныеИзделия
	|		ПО КлючиПартии.КлючПартии = БЗ_РасчетРезкиВыходныеИзделия.КлючСхемы
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА БЗ_РасчетРезкиВыходныеИзделия.Номенклатура.ВидФрезеровки = ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|				ТОГДА БЗ_РасчетРезкиВыходныеИзделия.Номенклатура.НоменклатурнаяГруппаТорговля.ВидФрезеровки
	|			ИНАЧЕ БЗ_РасчетРезкиВыходныеИзделия.Номенклатура.ВидФрезеровки
	|		КОНЕЦ) КАК ВидФрезеровки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА БЗ_РасчетРезкиВыходныеИзделия.Номенклатура.ВидФрезеровки = ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|				ТОГДА БЗ_РасчетРезкиВыходныеИзделия.Номенклатура.НоменклатурнаяГруппаТорговля.ВидФрезеровки
	|			ИНАЧЕ БЗ_РасчетРезкиВыходныеИзделия.Номенклатура.ВидФрезеровки
	|		КОНЕЦ) КАК ВидФрезеровкиРазличных
	|ПОМЕСТИТЬ ВидыФрезеровки
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_РасчетРезки.ВыходныеИзделия КАК БЗ_РасчетРезкиВыходныеИзделия
	|		ПО КлючиПартии.КлючПартии = БЗ_РасчетРезкиВыходныеИзделия.КлючСхемы
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиПартии.КлючПартии,
	|	КлючиПартии.Организация,
	|	КлючиПартии.Подразделение,
	|	КлючиПартии.Номенклатура,
	|	КлючиПартии.ХарактеристикаНоменклатуры,
	|	СУММА(КлючиПартии.Количество) КАК Количество,
	|	МАКСИМУМ(КлючиПартии.Коэффициент) КАК Коэффициент,
	|	КлючиПартии.ЕдиницаИзмерения,
	|	МАКСИМУМ(КлючиПартии.Кратность) КАК Кратность,
	|	КлючиПартии.ВидПартии,
	|	ПараметрыЦвет.Цвет,
	|	ПараметрыБренд.Бренд,
	|	МАКСИМУМ(ПараметрыЕдиниц.Вес) КАК Вес,
	|	МАКСИМУМ(ПараметрыЕдиниц.Объем) КАК Объем,
	|	МАКСИМУМ(ПараметрыЕдиниц.Площадь) КАК Площадь,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказыНаПроизводство.ЗаказНаПроизводствоРазличных, 0) = 1
	|			ТОГДА ЗаказыНаПроизводство.ЗаказНаПроизводство
	|		ИНАЧЕ КлючиПартии.ЗаказНаПроизводство
	|	КОНЕЦ КАК ЗаказНаПроизводство,
	|	МАКСИМУМ(ПараметрыЕдиниц.РазмерX) КАК РазмерX,
	|	МАКСИМУМ(ПараметрыЕдиниц.РазмерY) КАК РазмерY,
	|	МАКСИМУМ(ПараметрыЕдиниц.РазмерZ) КАК РазмерZ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыФрезеровки.ВидФрезеровкиРазличных, 0) = 1
	|			ТОГДА ВидыФрезеровки.ВидФрезеровки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|	КОНЕЦ КАК ВидФрезеровки,
	|	&Ссылка КАК Регистратор,
	|	КлючиПартии.РасчетРезки КАК РасчетРезки
	|ИЗ
	|	КлючиПартии КАК КлючиПартии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЕдиниц КАК ПараметрыЕдиниц
	|		ПО КлючиПартии.ЕдиницаИзмерения = ПараметрыЕдиниц.ЕдиницаИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦвет КАК ПараметрыЦвет
	|		ПО КлючиПартии.ХарактеристикаНоменклатуры = ПараметрыЦвет.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыБренд КАК ПараметрыБренд
	|		ПО КлючиПартии.ХарактеристикаНоменклатуры = ПараметрыБренд.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыНаПроизводство КАК ЗаказыНаПроизводство
	|		ПО КлючиПартии.КлючПартии = ЗаказыНаПроизводство.КлючПартии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыФрезеровки КАК ВидыФрезеровки
	|		ПО КлючиПартии.КлючПартии = ВидыФрезеровки.КлючПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	КлючиПартии.КлючПартии,
	|	КлючиПартии.Организация,
	|	КлючиПартии.Подразделение,
	|	КлючиПартии.Номенклатура,
	|	КлючиПартии.ХарактеристикаНоменклатуры,
	|	КлючиПартии.ЕдиницаИзмерения,
	|	КлючиПартии.ВидПартии,
	|	ПараметрыЦвет.Цвет,
	|	ПараметрыБренд.Бренд,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказыНаПроизводство.ЗаказНаПроизводствоРазличных, 0) = 1
	|			ТОГДА ЗаказыНаПроизводство.ЗаказНаПроизводство
	|		ИНАЧЕ КлючиПартии.ЗаказНаПроизводство
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыФрезеровки.ВидФрезеровкиРазличных, 0) = 1
	|			ТОГДА ВидыФрезеровки.ВидФрезеровки
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НП_ВидыФрезеровки.ПустаяСсылка)
	|	КОНЕЦ,
	|	КлючиПартии.РасчетРезки";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Параметры = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Параметр Из Параметры Цикл
		Движение=БЗ_ПартииПроизводства_Параметры.Добавить();
		Движение.Активность = Истина;
		Движение.Период=Дата;
		ЗаполнитьЗначенияСвойств(Движение, Параметр);
	КонецЦикла;		
КонецПроцедуры

