

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Перем Заголовок;
	// Вставить содержимое обработчика.
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("ДатаВступления, Ответственный, Подразделение, ВидПартии, Номенклатура, ХарактеристикаНоменклатуры");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ИмяТабличнойЧасти = "ВыходныеИзделия";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("Номенклатура, Коэффициент, ЕдиницаИзмерения");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ИмяТабличнойЧасти = "Операции";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = 
	Новый Структура("ОперацияНомер, Операция, Участок");

	// Вызовем общую процедуру для проверки проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Для идентификации маршрутной карты по Номенлкатуре
	ПровестиПоРегиструМаршрутныеКартыИзделия(Отказ);   
	//Для идентификации маршрутной карты по Заготовкам
	ПровестиПоРегиструМаршрутныеКартыЗаготовки(Отказ);
	//Для идентификации маршрутной карты по Операциям
	ПровестиПоРегиструМаршрутныеКартыОперации(Отказ);
	Движения.Записать();	
КонецПроцедуры

Процедура ПровестиПоРегиструМаршрутныеКартыИзделия(Отказ)
	НаборДвижений = Движения.БЗ_МаршрутныеКартыИзделия;
	НаборДвижений.Записывать = Истина;
	НаборДвижений.Очистить();
	
	// В одном документе не может быть 2 строки с одинаковой номенклатурой и характеристикой. Это вызовет исключение при записи в регистр.
	Для Каждого текИзделия из ВыходныеИзделия Цикл
		Движение = НаборДвижений.Добавить();
		Движение.Регистратор = Ссылка;
		Движение.Номенклатура = текИзделия.Номенклатура;
		Движение.ХарактеристикаНоменклатуры = текИзделия.ХарактеристикаНоменклатуры;
		Движение.ВидПартии = ВидПартии;
		Движение.МаршрутнаяКарта = Ссылка;
		Движение.Активность = Истина;
		Движение.Период = ДатаВступления; // из шапки
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ПровестиПоРегиструМаршрутныеКартыЗаготовки(Отказ)
	НаборДвижений = Движения.БЗ_МаршрутныеКартыЗаготовки;
	НаборДвижений.Записывать = Истина;
	НаборДвижений.Очистить();
	
	//Пакеты могут быть записаны отдельными строками с разным номером пакета.
	//В одном документе не может быть 2 строки  пакетов с одинаковым пакетами, характеристиками пакетов, и номенклатурой с характеристикой, но разным ключем строки (ссылкой на номенклатуру). Это вызовет исключение при записи в регистр.
	ТЗЗаготовки = ВыходныеИзделия.Выгрузить();
	//ТЗПакеты используются в запросе далее
	ТЗКлючи  = ТЗЗаготовки.Скопировать(,"Номенклатура, ХарактеристикаНоменклатуры, ИзделиеНомер");
	ТЗКлючи.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, ИзделиеНомер");
	ТЗКлючи.Колонки.Добавить("Счетчик");
	ТЗКлючи.ЗаполнитьЗначения(1,"Счетчик");
	ТЗКлючи.Свернуть("Номенклатура, ХарактеристикаНоменклатуры", "Счетчик");
	//Проверяем что нет дублей номеклатуры с одной ном и хар, но разными ключами
	Для Каждого текНоменклатура из ТЗКлючи Цикл
		Если ТекНоменклатура.Счетчик<>1 Тогда
			Сообщить ("Дубли номенклатуры или ошибка формата, позиция: " + ТекНоменклатура.Номенклатура + " "+ ТекНоменклатура.ХарактеристикаНоменклатуры);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	 
	
	//Делаем запрос по номенклатуре пакетов. Ищем все пакеты номенклатуры. И если нашли, но в доке нет - обнуляем.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходнаяТаблица.ИзделиеНомер,
	|	ИсходнаяТаблица.ИзделиеНомерСледующий,
	|	ИсходнаяТаблица.Номенклатура КАК Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.Номенклатура КАК Заготовка,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры КАК ХарактеристикаЗаготовки,
	|	&ВидПартии КАК ВидПартии,
	|	ИсходнаяТаблица.Количество КАК Количество,
	|	1 КАК НомерТаблицы
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.Номенклатура,
	|	БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.ХарактеристикаНоменклатуры,
	|	БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.Заготовка,
	|	БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.ХарактеристикаЗаготовки,
	|	БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.ВидПартии,
	|	0 КАК ИзделиеНомер,
	|	0 КАК ИзделиеНомерСледующий,
	|	2 КАК НомерТаблицы,
	|	0 КАК Количество
	|ПОМЕСТИТЬ СписокЗаготовок
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_МаршрутныеКартыЗаготовки.СрезПоследних(&вхДатаЗапроса, ВидПартии = &ВидПартии) КАК БЗ_МаршрутныеКартыЗаготовкиСрезПоследних
	|		ПО СписокНоменклатуры.Номенклатура = БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.Номенклатура
	|			И СписокНоменклатуры.ХарактеристикаНоменклатуры = БЗ_МаршрутныеКартыЗаготовкиСрезПоследних.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.ИзделиеНомер,
	|	ИсходнаяТаблица.ИзделиеНомерСледующий,
	|	ИсходнаяТаблица.Заготовка,
	|	ИсходнаяТаблица.ХарактеристикаЗаготовки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.ВидПартии,
	|	ИсходнаяТаблица.Количество,
	|	ИсходнаяТаблица.НомерТаблицы
	|ПОМЕСТИТЬ Сводная
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокЗаготовок.ИзделиеНомер,
	|	СписокЗаготовок.ИзделиеНомерСледующий,
	|	СписокЗаготовок.Заготовка,
	|	СписокЗаготовок.ХарактеристикаЗаготовки,
	|	СписокЗаготовок.Номенклатура,
	|	СписокЗаготовок.ХарактеристикаНоменклатуры,
	|	СписокЗаготовок.ВидПартии,
	|	СписокЗаготовок.Количество,
	|	СписокЗаготовок.НомерТаблицы
	|ИЗ
	|	СписокЗаготовок КАК СписокЗаготовок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Сводная.ИзделиеНомер) КАК ИзделиеНомер,
	|	МАКСИМУМ(Сводная.ИзделиеНомерСледующий) КАК ИзделиеНомерСледующий,
	|	Сводная.Заготовка,
	|	Сводная.ХарактеристикаЗаготовки,
	|	Сводная.Номенклатура,
	|	Сводная.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	Сводная.ВидПартии,
	|	СУММА(Сводная.Количество) КАК Количество,
	|	МИНИМУМ(Сводная.НомерТаблицы) КАК НомерТаблицы
	|ИЗ
	|	Сводная КАК Сводная
	|
	|СГРУППИРОВАТЬ ПО
	|	Сводная.ВидПартии,
	|	Сводная.Заготовка,
	|	Сводная.ХарактеристикаЗаготовки,
	|	Сводная.Номенклатура,
	|	Сводная.ХарактеристикаНоменклатуры";

	Запрос.УстановитьПараметр("ИсходнаяТаблица", ТЗЗаготовки);
	Запрос.УстановитьПараметр("вхДатаЗапроса", ДатаВступления);
	Запрос.УстановитьПараметр("ВидПартии", ВидПартии);
	
	ТЗСводная = Запрос.Выполнить().Выгрузить();
	
	Для Каждого текЗаготовка из ТЗСводная Цикл
		Движение = НаборДвижений.Добавить();
		Движение.Регистратор = Ссылка;
		Движение.Заготовка = текЗаготовка.Заготовка;
		Движение.ХарактеристикаЗаготовки = текЗаготовка.ХарактеристикаЗаготовки;
		Движение.Номенклатура = текЗаготовка.Номенклатура;
		Движение.ХарактеристикаНоменклатуры = текЗаготовка.ХарактеристикаНоменклатуры;
		Движение.ИзделиеНомер = текЗаготовка.ИзделиеНомер;
		Движение.ИзделиеНомерСледующий = текЗаготовка.ИзделиеНомерСледующий;
		Движение.МаршрутнаяКарта = Ссылка;
		Движение.Количество = текЗаготовка.Количество;
		Движение.Активность = Истина;
		Движение.Период = ДатаВступления; // из шапки
	КонецЦикла;
	
КонецПроцедуры

Процедура ПровестиПоРегиструМаршрутныеКартыОперации(Отказ)
	НаборДвижений = Движения.БЗ_МаршрутныеКартыОперации;
	НаборДвижений.Записывать = Истина;
	НаборДвижений.Очистить();
	
	//Пакеты могут быть записаны отдельными строками с разным номером пакета.
	//В одном документе не может быть 2 строки  пакетов с одинаковым пакетами, характеристиками пакетов, и номенклатурой с характеристикой, но разным ключем строки (ссылкой на номенклатуру). Это вызовет исключение при записи в регистр.
	ТЗОперации = Операции.Выгрузить();
	ТЗЗаготовки = ВыходныеИзделия.Выгрузить();
	//ТЗПакеты используются в запросе далее
	ТЗКлючи  = ТЗОперации.Скопировать(,"Операция,ИзделиеНомер");
	ТЗКлючи.Свернуть("Операция, ИзделиеНомер");
	ТЗКлючи.Колонки.Добавить("Счетчик");
	ТЗКлючи.ЗаполнитьЗначения(1,"Счетчик");
	ТЗКлючи.Свернуть("Операция", "Счетчик");
	//Проверяем что нет дублей номеклатуры с одной ном и хар, но разными ключами
	Для Каждого текОперация из ТЗКлючи Цикл
		Если текОперация.Счетчик<>1 Тогда
			Сообщить ("Дубли номенклатуры или ошибка формата, позиция: " + текОперация.Номенклатура + " "+ текОперация.ХарактеристикаНоменклатуры);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	 
	
	//Делаем запрос по номенклатуре пакетов. Ищем все пакеты номенклатуры. И если нашли, но в доке нет - обнуляем.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходнаяТаблица.ИзделиеНомер,
	|	ИсходнаяТаблица.ОперацияНомер,
	|	ИсходнаяТаблица.ОперацияНомерСледующий,
	|	ИсходнаяТаблица.Операция КАК Операция,
	|	ИсходнаяТаблица.Участок КАК Участок,
	|	&ВидПартии КАК ВидПартии,
	|	ИсходнаяТаблица.Количество КАК Количество,
	|	1 КАК НомерТаблицы
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаготовок.ИзделиеНомер,
	|	ТаблицаЗаготовок.ИзделиеНомерСледующий,
	|	ТаблицаЗаготовок.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаготовок.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаЗаготовок.Количество КАК Количество,
	|	ТаблицаЗаготовок.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаЗаготовок.Коэффициент КАК Коэффициент,
	|	1 КАК НомерТаблицы
	|ПОМЕСТИТЬ ТаблицаЗаготовок
	|ИЗ
	|	&ТаблицаЗаготовок КАК ТаблицаЗаготовок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаготовок.Номенклатура,
	|	ТаблицаЗаготовок.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ТаблицаЗаготовок.ИзделиеНомер) КАК ИзделиеНомер
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	ТаблицаЗаготовок КАК ТаблицаЗаготовок
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаготовок.ХарактеристикаНоменклатуры,
	|	ТаблицаЗаготовок.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.Номенклатура,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.ХарактеристикаНоменклатуры,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.Операция,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.Участок,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.ВидПартии,
	|	0 КАК ИзделиеНомер,
	|	0 КАК ОперацияНомер,
	|	0 КАК ОперацияНомерСледующий,
	|	2 КАК НомерТаблицы,
	|	0 КАК Количество
	|ПОМЕСТИТЬ СписокОпераций
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_МаршрутныеКартыОперации.СрезПоследних(&вхДатаЗапроса, ВидПартии = &ВидПартии) КАК БЗ_МаршрутныеКартыОперацииСрезПоследних
	|		ПО СписокНоменклатуры.Номенклатура = БЗ_МаршрутныеКартыОперацииСрезПоследних.Номенклатура
	|			И СписокНоменклатуры.ХарактеристикаНоменклатуры = БЗ_МаршрутныеКартыОперацииСрезПоследних.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.ИзделиеНомер,
	|	ИсходнаяТаблица.ОперацияНомер,
	|	ИсходнаяТаблица.ОперацияНомерСледующий,
	|	ИсходнаяТаблица.Операция,
	|	ИсходнаяТаблица.Участок,
	|	СписокНоменклатуры.Номенклатура,
	|	СписокНоменклатуры.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.ВидПартии,
	|	ИсходнаяТаблица.Количество,
	|	ИсходнаяТаблица.НомерТаблицы
	|ПОМЕСТИТЬ Сводная
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокНоменклатуры КАК СписокНоменклатуры
	|		ПО ИсходнаяТаблица.ИзделиеНомер = СписокНоменклатуры.ИзделиеНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокОпераций.ИзделиеНомер,
	|	СписокОпераций.ОперацияНомер,
	|	СписокОпераций.ОперацияНомерСледующий,
	|	СписокОпераций.Операция,
	|	СписокОпераций.Участок,
	|	СписокОпераций.Номенклатура,
	|	СписокОпераций.ХарактеристикаНоменклатуры,
	|	СписокОпераций.ВидПартии,
	|	СписокОпераций.Количество,
	|	СписокОпераций.НомерТаблицы
	|ИЗ
	|	СписокОпераций КАК СписокОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Сводная.ИзделиеНомер) КАК ИзделиеНомер,
	|	МАКСИМУМ(Сводная.ОперацияНомер) КАК ОперацияНомер,
	|	МАКСИМУМ(Сводная.ОперацияНомерСледующий) КАК ОперацияНомерСледующий,
	|	Сводная.Операция,
	|	Сводная.Участок,
	|	Сводная.Номенклатура,
	|	Сводная.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	Сводная.ВидПартии,
	|	СУММА(Сводная.Количество) КАК Количество,
	|	МИНИМУМ(Сводная.НомерТаблицы) КАК НомерТаблицы
	|ИЗ
	|	Сводная КАК Сводная
	|
	|СГРУППИРОВАТЬ ПО
	|	Сводная.ВидПартии,
	|	Сводная.Операция,
	|	Сводная.Участок,
	|	Сводная.Номенклатура,
	|	Сводная.ХарактеристикаНоменклатуры";

	Запрос.УстановитьПараметр("ИсходнаяТаблица", ТЗОперации);
	Запрос.УстановитьПараметр("ТаблицаЗаготовок", ТЗЗаготовки);
	Запрос.УстановитьПараметр("вхДатаЗапроса", ДатаВступления);
	Запрос.УстановитьПараметр("ВидПартии", ВидПартии);
	
	ТЗСводная = Запрос.Выполнить().Выгрузить();
	
	Для Каждого текОперация из ТЗСводная Цикл
		Движение = НаборДвижений.Добавить();
		Движение.Регистратор = Ссылка;
		Движение.Операция = текОперация.Операция;
		Движение.Участок = текОперация.Участок;
		Движение.ВидПартии = ВидПартии;
		Движение.Номенклатура = текОперация.Номенклатура;
		Движение.ХарактеристикаНоменклатуры = текОперация.ХарактеристикаНоменклатуры;
		Движение.ИзделиеНомер = текОперация.ИзделиеНомер;
		Движение.ОперацияНомер = текОперация.ОперацияНомер;
		Движение.ОперацияНомерСледующий = текОперация.ОперацияНомерСледующий;
		Движение.МаршрутнаяКарта = Ссылка;
		Движение.Количество = текОперация.Количество;
		Движение.Активность = Истина;
		Движение.Период = ДатаВступления; // из шапки
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	// Вставить содержимое обработчика.    
	ДатаВступления = НачалоДня(ТекущаяДата());
	#Если Клиент Или ВнешнееСоединение Тогда
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , , ОбъектКопирования, ОбъектКопирования);
	#КонецЕсли
	Комментарий = "";
КонецПроцедуры
