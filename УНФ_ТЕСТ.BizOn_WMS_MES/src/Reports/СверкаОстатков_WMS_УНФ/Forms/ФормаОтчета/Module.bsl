

#Область ОписаниеПеременных

&НаКлиенте
Перем ИдентификаторЗадания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Функция ЭтоГруппаНоменклатуры(Ссылка)
	Возврат Ссылка.ЭтоГруппа;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтаФорма.КлючУникальности = Новый УникальныйИдентификатор;    
	
	Если НЕ ЗначениеЗаполнено(Период.ДатаНачала) И НЕ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		Период.ДатаНачала=НачалоМесяца(ТекущаяДата());
		Период.ДатаОкончания=ТекущаяДата();				
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Номенклатура) Тогда
		Если ЭтоГруппаНоменклатуры(Отчет.Номенклатура) Тогда
			Элемент = Элементы.ТипВыбора;
			ЭлементПоле = Элементы.Номенклатура;
			ЭлементПоле.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
			ЭлементПоле.ПодсказкаВвода = НСтр("ru = 'Номенклатура (группа)'");
			Элемент.Подсказка = НСтр("ru = 'Используется выбор групп. Нажмите для выбора элементов.'");
			Элемент.Картинка = БиблиотекаКартинок.РежимВыбораГрупп;
			Отчет.Характеристика=ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
			Элементы.Характеристика.Видимость=Ложь;			
		КонецЕсли;
	КонецЕсли;
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость = Истина;
	#Если МобильныйКлиент Тогда
		ОтображениеСостояния.Текст = НСтр("ru = 'Отчет не сформирован. Нажмите ""Сформировать"" в заголовке формы для получения отчета.'");
	#Иначе
		ОтображениеСостояния.Текст = НСтр("ru = 'Отчет не сформирован. Нажмите ""Сформировать"" (F5) для получения отчета.'");
	#КонецЕсли
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОбновитьПредставлениеПериода();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		Возврат;
	КонецЕсли;
	
	ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	ЗаполнитьЗначениямиПоУмолчанию(Настройки);		
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)	
	Если НЕ ЗначениеЗаполнено(Период.ДатаНачала) ИЛИ
		 НЕ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		 Параметры.СформироватьПриОткрытии = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОтчет(Команда=Неопределено) Экспорт
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость = Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	ОтображениеСостояния.Текст = НСтр("ru = 'Отчет формируется...'");
	
	ПодключитьОбработчикОжидания("НачатьФормированиеОтчета", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НачатьФормированиеОтчета()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОтобразитьПрогресс", ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	КонецЕсли;
	
	Задание = ЗаданиеСформироватьОтчет();
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторЗадания = Задание.ИдентификаторЗадания;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание,	Новый ОписаниеОповещения("ОбработатьЗавершениеФормированияОтчета", ЭтотОбъект),	ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗаданиеСформироватьОтчет()
	
	Если ПараметрыНекорректны() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ДатаНачала", Период.ДатаНачала);
	ПараметрыПроцедуры.Вставить("ДатаОкончания", Период.ДатаОкончания);
	ПараметрыПроцедуры.Вставить("Номенклатура", Отчет.Номенклатура);
	ПараметрыПроцедуры.Вставить("Характеристика", Отчет.Характеристика);
	ПараметрыПроцедуры.Вставить("ДетализацияПоДокументам", Отчет.ДетализацияПоДокументам);
	ПараметрыПроцедуры.Вставить("ТолькоРасхожденияОстатков", Отчет.ТолькоРасхожденияОстатков);
	ПараметрыПроцедуры.Вставить("ИгнорироватьНеЗавершеннуюОтгрузку", Отчет.ИгнорироватьНеЗавершеннуюОтгрузку);	

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Отчеты.СверкаОстатков_WMS_УНФ.СформироватьОтчет",ПараметрыПроцедуры,ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьПредставлениеПериода()
	
	Если НЕ Элементы.ПредставлениеПериода.Видимость Тогда
		Возврат;
	КонецЕсли; 
	
	Попытка
		Если НЕ ЗначениеЗаполнено(Период.ДатаНачала) И НЕ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
			ПредставлениеПериода = НСтр("ru = 'за все время'");
		ИначеЕсли Элементы.ПредставлениеПериода.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет Тогда
			ПредставлениеПериода = НСтр("ru = 'за '")+НРег(ПредставлениеПериода(Отчет.Период.ДатаНачала, КонецДня(Период.ДатаОкончания)));
		Иначе
			ПредставлениеПериода = НРег(ПредставлениеПериода(НачалоДня(Период.ДатаНачала), ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания), Период.ДатаОкончания)));
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыНекорректны()
	
	Результат = Ложь;
	Если Период.ДатаНачала > Период.ДатаОкончания Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Дата начала периода не должна превышать дату окончания.'"),, "Период.ДатаНачала");
		Результат = Истина;
	КонецЕсли;
	Возврат Результат;	
	
КонецФункции

&НаКлиенте
Процедура ОтобразитьПрогресс(СостояниеЗадания, Параметры) Экспорт
	
	Если ТипЗнч(СостояниеЗадания.Прогресс) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СостояниеЗадания.Прогресс.Свойство("Текст") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния.Текст = СостояниеЗадания.Прогресс.Текст;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеФормированияОтчета(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Результат.Свойство("Статус") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ИдентификаторЗадания = Неопределено;
		ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
		ОтображениеСостояния.Видимость = Истина;
		ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
		ОтображениеСостояния.Картинка = Новый Картинка;
		ОтображениеСостояния.Текст = Результат.ПодробноеПредставлениеОшибки;
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		ОтчетТабличныйДокумент  = ТабличныйДокументИзРезультатаВыполненияЗадания(Результат.АдресРезультата);
		ИдентификаторЗадания = Неопределено;
		ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
		ОтображениеСостояния.Видимость = Ложь;
		ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
		ОтображениеСостояния.Картинка = Новый Картинка;
		ОтображениеСостояния.Текст = "";
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТабличныйДокументИзРезультатаВыполненияЗадания(АдресХранилища)
	
	Если Не ЭтоАдресВременногоХранилища(АдресХранилища)  Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РезультатВыполненияЗадания = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(РезультатВыполненияЗадания) = Тип("ХранилищеЗначения") Тогда
		Возврат РезультатВыполненияЗадания.Получить();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Процедура заполняет поля отчета значениями по умолчанию если они не заполнены.
//
&НаСервере
Процедура ЗаполнитьЗначениямиПоУмолчанию(Настройки)
КонецПроцедуры



// Процедура обрабатывает результаты открытия дополнительной формы "Расшифровка резерва"
&НаКлиенте
Процедура ПослеОткрытияРасшифровкиРезерва(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия<>Неопределено Тогда
		ПоказатьЗначение(,РезультатЗакрытия); 
	КонецЕсли;
КонецПроцедуры // ПослеОткрытияРасшифровкиРезерва()

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоРежимРасшифровки()
	
	Возврат Элементы.ГруппаПараметры.Видимость = Ложь;
	
КонецФункции

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ПредставлениеПериодаНажатиеЗавершение", ЭтотОбъект);
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = Период;
	Диалог.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНажатиеЗавершение(НовыйПериод, ДополнительныеДанные) Экспорт
	
	Если НовыйПериод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(НовыйПериод)=Тип("СтандартныйПериод") Тогда
		Период = НовыйПериод;
	Иначе
		Период.ДатаОкончания=НовыйПериод;
	КонецЕсли;	
	ОбновитьПредставлениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельНастроек(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.СтраницыНастройки.Видимость;
	
	Элементы.СтраницыНастройки.Видимость	= НовоеЗначениеВидимость;
	Элементы.ГруппаРазделитель.Видимость = Не НовоеЗначениеВидимость;
	Элементы.ПанельНастроек.Ширина = ?(НовоеЗначениеВидимость, 35, 0);

КонецПроцедуры

&НаКлиенте
Процедура ТипВыбораНажатие(Элемент)
	СтандартнаяОбработка = Ложь;
	ЭлементПоле = Элементы.Номенклатура;
	Если ЭлементПоле.ВыборГруппИЭлементов=ГруппыИЭлементы.Элементы Тогда
		ЭлементПоле.ВыборГруппИЭлементов = ГруппыИЭлементы.Группы;
		ЭлементПоле.ПодсказкаВвода = НСтр("ru = 'Номенклатура (группа)'");
		Элемент.Подсказка = НСтр("ru = 'Используется выбор групп. Нажмите для выбора элементов.'");
		Элемент.Картинка = БиблиотекаКартинок.РежимВыбораГрупп;
		Отчет.Номенклатура=ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		Отчет.Характеристика=ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
		Элементы.Характеристика.Видимость=Ложь;
	Иначе
		ЭлементПоле.ВыборГруппИЭлементов = ГруппыИЭлементы.Элементы;
		ЭлементПоле.ПодсказкаВвода = НСтр("ru = 'Номенклатура'");
		Элемент.Подсказка = НСтр("ru = 'Используется выбор элементов. Нажмите для выбора групп.'");
		Элемент.Картинка = БиблиотекаКартинок.РежимВыбораЭлементов;
		Отчет.Номенклатура=ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		Отчет.Характеристика=ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
		Элементы.Характеристика.Видимость=Истина;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНапрямуюНаСервере() 
		
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ДатаНачала", Период.ДатаНачала);
	ПараметрыПроцедуры.Вставить("ДатаОкончания", Период.ДатаОкончания);
	ПараметрыПроцедуры.Вставить("Номенклатура", Отчет.Номенклатура);
	ПараметрыПроцедуры.Вставить("Характеристика", Отчет.Характеристика);
	ПараметрыПроцедуры.Вставить("ДетализацияПоДокументам", Отчет.ДетализацияПоДокументам);
	ПараметрыПроцедуры.Вставить("ТолькоРасхожденияОстатков", Отчет.ТолькоРасхожденияОстатков);
	ПараметрыПроцедуры.Вставить("ИгнорироватьНеЗавершеннуюОтгрузку", Отчет.ИгнорироватьНеЗавершеннуюОтгрузку);	

	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	ОтчетТабличныйДокумент = ОбъектОтчет.СформироватьТаблицуОтчета(ПараметрыПроцедуры);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетНапрямую(Команда)
	СформироватьОтчетНапрямуюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если РольДоступна("ПолныеПрава") Тогда
		Элементы.ФормаСформироватьОтчетНапрямую.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
