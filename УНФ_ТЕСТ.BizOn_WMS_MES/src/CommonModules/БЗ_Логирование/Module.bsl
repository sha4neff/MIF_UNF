Функция Лог(Событие,Данные,Комментарий="") Экспорт
	// Для замера производительности расчета
	ЗаписьЖурналаРегистрации(Событие,,,Данные,Комментарий,РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
КонецФункции

Функция ЛогОшибок(Склад,Данные,Тип, ВидОшибки = Неопределено, ОбластьОтбораРазмещения = Неопределено,  ОбластьПодпитки = Неопределено, Палета = Неопределено, ПоДокументам = Неопределено, Номенклатура = Неопределено,ХарактеристикаНоменклатуры = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ОшибкиРасчета.НСтроки) + 1, 1) КАК НСтроки
	|ИЗ
	|	РегистрСведений.ОшибкиРасчета КАК ОшибкиРасчета
	|ГДЕ
	|	ОшибкиРасчета.Тип = &Тип
	|	И ОшибкиРасчета.Склад = &Склад
	|	И НЕ ОшибкиРасчета.Текущие";	
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Тип",Тип);
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Выборка.Следующий();
	НСтроки=Выборка.НСтроки;
	МенеджерЗаписи=РегистрыСведений.ОшибкиРасчета.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Склад=Склад;
	МенеджерЗаписи.Тип=Тип;
	МенеджерЗаписи.НСтроки=Выборка.НСтроки;
	МенеджерЗаписи.Текущие=Ложь;
	МенеджерЗаписи.Ошибка=Данные;
	МенеджерЗаписи.ВидОшибки=ВидОшибки;
	МенеджерЗаписи.ОбластьОтбораРазмещения=ОбластьОтбораРазмещения;
	МенеджерЗаписи.ОбластьПодпитки=ОбластьПодпитки;
	МенеджерЗаписи.Палета=Палета;
	МенеджерЗаписи.ПоДокументам=Новый ХранилищеЗначения(ПоДокументам);
	МенеджерЗаписи.Номенклатура=Номенклатура;
	МенеджерЗаписи.ХарактеристикаНоменклатуры=ХарактеристикаНоменклатуры;
	МенеджерЗаписи.Записать(Истина);
КонецФункции

Функция ЛогОшибокОчиститьПредрасчет(Склад,Тип) Экспорт
	НаборЗаписей=РегистрыСведений.ОшибкиРасчета.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Склад.Установить(Склад);
	НаборЗаписей.Отбор.Тип.Установить(Тип);
	НаборЗаписей.Отбор.Текущие.Установить(Ложь);
	НаборЗаписей.Записать(Истина);
КонецФункции

Функция ЛогОшибокАктуализировать(Склад,Тип) Экспорт
	ТНаборЗаписей=РегистрыСведений.ОшибкиРасчета.СоздатьНаборЗаписей();
	ТНаборЗаписей.Отбор.Склад.Установить(Склад);
	ТНаборЗаписей.Отбор.Текущие.Установить(Истина);
	ТНаборЗаписей.Отбор.Тип.Установить(Тип);
	ТНаборЗаписей.Очистить();
	НаборЗаписей=РегистрыСведений.ОшибкиРасчета.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Склад.Установить(Склад);
	НаборЗаписей.Отбор.Тип.Установить(Тип);
	НаборЗаписей.Отбор.Текущие.Установить(Ложь);
	НаборЗаписей.Прочитать();
	Для Каждого Запись Из НаборЗаписей Цикл
		ТЗапись=ТНаборЗаписей.Добавить();
		ТЗапись.Склад=Запись.Склад;
		ТЗапись.Тип=Запись.Тип;
		ТЗапись.НСтроки=Запись.НСтроки;
		ТЗапись.Текущие=Истина;
		ТЗапись.Ошибка=Запись.Ошибка;
		ТЗапись.ВидОшибки=Запись.ВидОшибки;
		ТЗапись.ОбластьОтбораРазмещения=Запись.ОбластьОтбораРазмещения;
		ТЗапись.ОбластьПодпитки=Запись.ОбластьПодпитки;
		ТЗапись.Палета=Запись.Палета;
		ТЗапись.ПоДокументам=Новый ХранилищеЗначения(Запись.ПоДокументам.Получить());
		ТЗапись.ХарактеристикаНоменклатуры=Запись.ХарактеристикаНоменклатуры;
		ТЗапись.Номенклатура=Запись.Номенклатура;
	КонецЦикла;
	ТНаборЗаписей.Записать(Истина);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
КонецФункции
