Функция Лог(Событие,Уровень, Данные,Комментарий="") Экспорт
	Возврат БЗ_MES_Обмен.Лог(Событие,Уровень, Данные,Комментарий="");
КонецФункции
Функция ПолучитьОперацииИзделий(вхИсходнаяТаблица, вхДатаЗапроса = Неопределено, вхТекстИтогов = Неопределено, ВариантВывода = "Таблица") Экспорт
	
	ЭтоСтрока= Ложь;
	//++++++++++++++
	КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Любой);
	КвалификаторыУИД = Новый КвалификаторыСтроки(36);
	Если ТипЗнч(вхИсходнаяТаблица) = Тип("СтрокаТаблицыЗначений") 
		ИЛИ Найти(Строка(ТипЗнч(вхИсходнаяТаблица)),"Документ табличная часть строка")>0 Тогда
		ТЗ = Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		ТЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТЗ.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		ТЗ.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		ТЗ.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		ТЗ.Колонки.Добавить("КлючИзделия", Новый ОписаниеТипов("Строка",, КвалификаторыУИД));
		ТЗ.Колонки.Добавить("ОперацияНачальная", Новый ОписаниеТипов("СправочникСсылка.БЗ_ТехнологическиеОперации"));
		ТЗ.Колонки.Добавить("УчастокНачальный", Новый ОписаниеТипов("СправочникСсылка.БЗ_Участки"));
		ТЗ.Колонки.Добавить("ОперацияКонечная", Новый ОписаниеТипов("СправочникСсылка.БЗ_ТехнологическиеОперации"));
		ТЗ.Колонки.Добавить("УчастокКонечный", Новый ОписаниеТипов("СправочникСсылка.БЗ_Участки"));
		
		НСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НСтрока, вхИсходнаяТаблица);
		ЭтоСтрока = Истина;
	Иначе
		Если  ТипЗнч(вхИсходнаяТаблица) = Тип("ТаблицаЗначений") Тогда
 			ТЗ = вхИсходнаяТаблица.Скопировать();
		Иначе
 			ТЗ = вхИсходнаяТаблица.Выгрузить();
		КонецЕсли;
		Если ТЗ.Колонки.Найти("НомерСтроки") = Неопределено Тогда
			ТЗ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("ХарактеристикаНоменклатуры") = Неопределено Тогда
			ТЗ.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("Количество") = Неопределено Тогда
			ТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("ЕдиницаИзмерения") = Неопределено Тогда
			ТЗ.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("Коэффициент") = Неопределено Тогда
			ТЗ.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("КлючИзделия") = Неопределено Тогда
			ТЗ.Колонки.Добавить("КлючИзделия", Новый ОписаниеТипов("Строка",,КвалификаторыУИД));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("ОперацияНачальная") = Неопределено Тогда
			ТЗ.Колонки.Добавить("ОперацияНачальная", Новый ОписаниеТипов("СправочникСсылка.БЗ_ТехнологическиеОперации"));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("УчастокНачальный") = Неопределено Тогда
			ТЗ.Колонки.Добавить("УчастокНачальный", Новый ОписаниеТипов("СправочникСсылка.БЗ_Участки"));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("ОперацияКонечная") = Неопределено Тогда
			ТЗ.Колонки.Добавить("ОперацияКонечная", Новый ОписаниеТипов("СправочникСсылка.БЗ_ТехнологическиеОперации"));
		КонецЕсли;
		Если ТЗ.Колонки.Найти("УчастокКонечный") = Неопределено Тогда
			ТЗ.Колонки.Добавить("УчастокКонечный", Новый ОписаниеТипов("СправочникСсылка.БЗ_Участки"));
		КонецЕсли;
	КонецЕсли;
	//--------------
	
	Если вхДатаЗапроса = Неопределено Тогда
		вхДатаЗапроса = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	

	"ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.Количество КАК Количество,
	|	ИсходнаяТаблица.Коэффициент КАК Коэффициент,
	|	ИсходнаяТаблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИсходнаяТаблица.ОперацияНачальная КАК ОперацияНачальная,
	|	ИсходнаяТаблица.УчастокНачальный КАК УчастокНачальный,
	|	ИсходнаяТаблица.ОперацияКонечная КАК ОперацияКонечная,
	|	ИсходнаяТаблица.УчастокКонечный КАК УчастокКонечный,
	|	ИсходнаяТаблица.КлючИзделия
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ИсходнаяТаблица.Количество) КАК КоличествоИзделий,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.МаршрутнаяКарта,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.ИзделиеНомер,
	|	ИсходнаяТаблица.КлючИзделия
	|ПОМЕСТИТЬ СписокМаршрутныхКарт
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_МаршрутныеКартыОперации.СрезПоследних(&вхДатаЗапроса, ) КАК БЗ_МаршрутныеКартыОперацииСрезПоследних
	|		ПО ИсходнаяТаблица.Номенклатура = БЗ_МаршрутныеКартыОперацииСрезПоследних.Номенклатура
	|			И ИсходнаяТаблица.ХарактеристикаНоменклатуры = БЗ_МаршрутныеКартыОперацииСрезПоследних.ХарактеристикаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.НомерСтроки,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.МаршрутнаяКарта,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.ИзделиеНомер,
	|	ИсходнаяТаблица.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокМаршрутныхКарт.НомерСтроки,
	|	СписокМаршрутныхКарт.Номенклатура,
	|	СписокМаршрутныхКарт.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.ИзделиеНомер) КАК ИзделиеНомер,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.ОперацияНомер) КАК ОперацияНомер,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.ОперацияНомерСледующий) КАК ОперацияНомерСледующий,
	|	БЗ_МаршрутнаяКартаОперации.Операция,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.Количество) КАК Количество,
	|	БЗ_МаршрутнаяКартаОперации.Участок,
	|	БЗ_МаршрутнаяКартаОперации.ВариантНаладки,
	|	БЗ_МаршрутнаяКартаОперации.МожноПропустить,
	|	1 КАК ПриоритетТЗ,
	|	СписокМаршрутныхКарт.КлючИзделия
	|ПОМЕСТИТЬ СписокОпераций
	|ИЗ
	|	Документ.БЗ_МаршрутнаяКарта.Операции КАК БЗ_МаршрутнаяКартаОперации,
	|	СписокМаршрутныхКарт КАК СписокМаршрутныхКарт
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокМаршрутныхКарт.Номенклатура,
	|	СписокМаршрутныхКарт.ХарактеристикаНоменклатуры,
	|	СписокМаршрутныхКарт.НомерСтроки,
	|	БЗ_МаршрутнаяКартаОперации.Участок,
	|	БЗ_МаршрутнаяКартаОперации.МожноПропустить,
	|	БЗ_МаршрутнаяКартаОперации.Операция,
	|	БЗ_МаршрутнаяКартаОперации.ВариантНаладки,
	|	СписокМаршрутныхКарт.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.КлючИзделия,
	|	ВЫБОР
	|		КОГДА БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 3
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ПриоритетТЗ,
	|	БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ШаблонТехнологическогоПроцесса КАК ШаблонТехнологическогоПроцесса
	|ПОМЕСТИТЬ ВыборШаблонаТП
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ШаблоныТехнологическихПроцессов.СрезПоследних(&вхДатаЗапроса, ) КАК БЗ_ШаблоныТехнологическихПроцессовСрезПоследних
	|		ПО ИсходнаяТаблица.Номенклатура = БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.Номенклатура
	|			И (ВЫБОР
	|				КОГДА БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.пустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ХарактеристикаНоменклатуры = ИсходнаяТаблица.ХарактеристикаНоменклатуры
	|			КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.КлючИзделия,
	|	4,
	|	БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ШаблонТехнологическогоПроцесса
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСсылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ШаблоныТехнологическихПроцессов.СрезПоследних(&вхДатаЗапроса, ) КАК БЗ_ШаблоныТехнологическихПроцессовСрезПоследних
	|			ПО НоменклатураСсылка.НоменклатурнаяГруппаПроизводство = БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.НоменклатурнаяГруппаПроизводство
	|		ПО ИсходнаяТаблица.Номенклатура = НоменклатураСсылка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборШаблонаТП.НомерСтроки,
	|	ВыборШаблонаТП.Номенклатура,
	|	ВыборШаблонаТП.ХарактеристикаНоменклатуры,
	|	ВыборШаблонаТП.КлючИзделия,
	|	МИНИМУМ(ВыборШаблонаТП.ПриоритетТЗ) КАК ПриоритетТЗ
	|ПОМЕСТИТЬ ВыборШаблонаТПИтог
	|ИЗ
	|	ВыборШаблонаТП КАК ВыборШаблонаТП
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборШаблонаТП.ХарактеристикаНоменклатуры,
	|	ВыборШаблонаТП.КлючИзделия,
	|	ВыборШаблонаТП.НомерСтроки,
	|	ВыборШаблонаТП.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборШаблонаТПИтог.НомерСтроки,
	|	ВыборШаблонаТПИтог.Номенклатура,
	|	ВыборШаблонаТПИтог.ХарактеристикаНоменклатуры,
	|	ВыборШаблонаТПИтог.КлючИзделия,
	|	ВыборШаблонаТПИтог.ПриоритетТЗ,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.ОперацияНомер,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.ОперацияНомерСледующий,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.Операция,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.Участок,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.ВариантНаладки,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.МожноПропустить,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.Количество
	|ПОМЕСТИТЬ ВыборСписокОпераций
	|ИЗ
	|	ВыборШаблонаТПИтог КАК ВыборШаблонаТПИтог
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборШаблонаТП КАК ВыборШаблонаТП
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_ШаблонТехнологическогоПроцесса.Операции КАК БЗ_ШаблонТехнологическогоПроцессаОперации
	|			ПО ВыборШаблонаТП.ШаблонТехнологическогоПроцесса = БЗ_ШаблонТехнологическогоПроцессаОперации.Ссылка
	|		ПО ВыборШаблонаТПИтог.НомерСтроки = ВыборШаблонаТП.НомерСтроки
	|			И ВыборШаблонаТПИтог.ПриоритетТЗ = ВыборШаблонаТП.ПриоритетТЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокОпераций.НомерСтроки,
	|	СписокОпераций.Номенклатура,
	|	СписокОпераций.ХарактеристикаНоменклатуры,
	|	СписокОпераций.КлючИзделия,
	|	СписокОпераций.ПриоритетТЗ,
	|	СписокОпераций.ОперацияНомер,
	|	СписокОпераций.ОперацияНомерСледующий,
	|	СписокОпераций.Операция,
	|	СписокОпераций.Участок,
	|	СписокОпераций.ВариантНаладки,
	|	СписокОпераций.МожноПропустить,
	|	СписокОпераций.Количество
	|ИЗ
	|	СписокОпераций КАК СписокОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборСписокОпераций.НомерСтроки,
	|	ВыборСписокОпераций.Номенклатура,
	|	ВыборСписокОпераций.ХарактеристикаНоменклатуры,
	|	ВыборСписокОпераций.КлючИзделия,
	|	МИНИМУМ(ВыборСписокОпераций.ПриоритетТЗ) КАК ПриоритетТЗ
	|ПОМЕСТИТЬ ВыборСпискаОперацийИтог
	|ИЗ
	|	ВыборСписокОпераций КАК ВыборСписокОпераций
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборСписокОпераций.НомерСтроки,
	|	ВыборСписокОпераций.Номенклатура,
	|	ВыборСписокОпераций.ХарактеристикаНоменклатуры,
	|	ВыборСписокОпераций.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.Количество КАК КоличествоИзделий,
	|	ВыборСписокОпераций.ОперацияНомер,
	|	ВыборСписокОпераций.ОперацияНомерСледующий,
	|	ВыборСписокОпераций.Операция,
	|	ВыборСписокОпераций.Количество КАК КоличествоОпераций,
	|	ВыборСписокОпераций.Участок,
	|	ВыборСписокОпераций.ВариантНаладки,
	|	ВыборСписокОпераций.МожноПропустить,
	|	ИсходнаяТаблица.Количество,
	|	ИсходнаяТаблица.Количество * ВыборСписокОпераций.Количество КАК КоличествоОперацийВсего,
	|	ИсходнаяТаблица.КлючИзделия,
	|	ИсходнаяТаблица.ЕдиницаИзмерения,
	|	ИсходнаяТаблица.Коэффициент,
	|	ЕСТЬNULL(ВыборСписокОперацийСледующая.Операция, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)) КАК ОперацияСледующая,
	|	ИсходнаяТаблица.ОперацияНачальная,
	|	ИсходнаяТаблица.УчастокНачальный,
	|	ИсходнаяТаблица.ОперацияКонечная,
	|	ИсходнаяТаблица.УчастокКонечный,
	|	ВЫБОР
	|		КОГДА ИсходнаяТаблица.ОперацияНачальная <> ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	|				И ИсходнаяТаблица.ОперацияНачальная = ВыборСписокОпераций.Операция
	|			ТОГДА ВыборСписокОпераций.ОперацияНомер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОперацияНомерНачальный,
	|	ВЫБОР
	|		КОГДА ИсходнаяТаблица.ОперацияКонечная <> ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	|				И ИсходнаяТаблица.ОперацияКонечная = ВыборСписокОпераций.Операция
	|			ТОГДА ВыборСписокОпераций.ОперацияНомер
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОперацияНомерКонечный,
	|	ЕСТЬNULL(ВыборСписокОперацийСледующая.Участок, ЗНАЧЕНИЕ(Справочник.БЗ_Участки.ПустаяСсылка)) КАК УчастокСледующий
	|ПОМЕСТИТЬ РезультатПодготовка
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборСписокОпераций КАК ВыборСписокОпераций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборСпискаОперацийИтог КАК ВыборСпискаОперацийИтог
	|			ПО ВыборСписокОпераций.НомерСтроки = ВыборСпискаОперацийИтог.НомерСтроки
	|				И ВыборСписокОпераций.ПриоритетТЗ = ВыборСпискаОперацийИтог.ПриоритетТЗ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВыборСписокОпераций КАК ВыборСписокОперацийСледующая
	|			ПО ВыборСписокОпераций.НомерСтроки = ВыборСписокОперацийСледующая.НомерСтроки
	|				И ВыборСписокОпераций.ПриоритетТЗ = ВыборСписокОперацийСледующая.ПриоритетТЗ
	|				И ВыборСписокОпераций.ОперацияНомерСледующий = ВыборСписокОперацийСледующая.ОперацияНомер
	|		ПО ИсходнаяТаблица.НомерСтроки = ВыборСписокОпераций.НомерСтроки
	|			И ИсходнаяТаблица.НомерСтроки = ВыборСписокОпераций.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.НомерСтроки,
	|	ВыборСписокОпераций.Участок,
	|	ВыборСписокОпераций.Операция,
	|	ВыборСписокОпераций.ВариантНаладки,
	|	ВыборСписокОпераций.МожноПропустить,
	|	ИсходнаяТаблица.Количество,
	|	ВыборСписокОпераций.ОперацияНомер,
	|	ВыборСписокОпераций.ОперацияНомерСледующий,
	|	ИсходнаяТаблица.КлючИзделия,
	|	ВыборСписокОпераций.Количество,
	|	ИсходнаяТаблица.ЕдиницаИзмерения,
	|	ИсходнаяТаблица.Коэффициент,
	|	ЕСТЬNULL(ВыборСписокОперацийСледующая.Операция, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)),
	|	ИсходнаяТаблица.ОперацияНачальная,
	|	ИсходнаяТаблица.УчастокНачальный,
	|	ИсходнаяТаблица.ОперацияКонечная,
	|	ИсходнаяТаблица.УчастокКонечный,
	|	ЕСТЬNULL(ВыборСписокОперацийСледующая.Участок, ЗНАЧЕНИЕ(Справочник.БЗ_Участки.ПустаяСсылка)),
	|	ИсходнаяТаблица.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатПодготовка.НомерСтроки,
	|	РезультатПодготовка.КлючИзделия,
	|	МАКСИМУМ(РезультатПодготовка.ОперацияНомерНачальный) КАК ОперацияНомерНачальный,
	|	МАКСИМУМ(РезультатПодготовка.ОперацияНомерКонечный) КАК ОперацияНомерКонечный
	|ПОМЕСТИТЬ НачальныеКонечныеОперации
	|ИЗ
	|	РезультатПодготовка КАК РезультатПодготовка
	|
	|СГРУППИРОВАТЬ ПО
	|	РезультатПодготовка.НомерСтроки,
	|	РезультатПодготовка.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатПодготовка.НомерСтроки КАК НомерСтроки,
	|	РезультатПодготовка.Номенклатура,
	|	РезультатПодготовка.ХарактеристикаНоменклатуры,
	|	СУММА(РезультатПодготовка.КоличествоИзделий) КАК КоличествоИзделий,
	|	РезультатПодготовка.ОперацияНомер,
	|	ВЫБОР
	|		КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|				И РезультатПодготовка.ОперацияНомер = НачальныеКонечныеОперации.ОперацияНомерКонечный
	|			ТОГДА 0
	|		ИНАЧЕ РезультатПодготовка.ОперацияНомерСледующий
	|	КОНЕЦ КАК ОперацияНомерСледующий,
	|	РезультатПодготовка.Операция,
	|	РезультатПодготовка.КоличествоОпераций,
	|	РезультатПодготовка.Участок,
	|	РезультатПодготовка.ВариантНаладки,
	|	РезультатПодготовка.МожноПропустить,
	|	СУММА(РезультатПодготовка.Количество) КАК Количество,
	|	РезультатПодготовка.КоличествоОперацийВсего,
	|	РезультатПодготовка.КлючИзделия,
	|	РезультатПодготовка.ЕдиницаИзмерения,
	|	РезультатПодготовка.Коэффициент,
	|	ВЫБОР
	|		КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|				И РезультатПодготовка.ОперацияНомер = НачальныеКонечныеОперации.ОперацияНомерКонечный
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	|		ИНАЧЕ РезультатПодготовка.ОперацияСледующая
	|	КОНЕЦ КАК ОперацияСледующая,
	|	РезультатПодготовка.ОперацияНачальная,
	|	РезультатПодготовка.УчастокНачальный,
	|	РезультатПодготовка.ОперацияКонечная,
	|	РезультатПодготовка.УчастокКонечный,
	|	НачальныеКонечныеОперации.ОперацияНомерНачальный,
	|	НачальныеКонечныеОперации.ОперацияНомерКонечный,
	|	ВЫБОР
	|		КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|				И РезультатПодготовка.ОперацияНомер = НачальныеКонечныеОперации.ОперацияНомерКонечный
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_Участки.ПустаяСсылка)
	|		ИНАЧЕ РезультатПодготовка.УчастокСледующий
	|	КОНЕЦ КАК УчастокСледующий
	|ИЗ
	|	РезультатПодготовка КАК РезультатПодготовка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачальныеКонечныеОперации КАК НачальныеКонечныеОперации
	|		ПО РезультатПодготовка.НомерСтроки = НачальныеКонечныеОперации.НомерСтроки
	|			И (ВЫБОР
	|				КОГДА НачальныеКонечныеОперации.ОперацияНомерНачальный > 0
	|					ТОГДА РезультатПодготовка.ОперацияНомер >= НачальныеКонечныеОперации.ОперацияНомерНачальный
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|					ТОГДА РезультатПодготовка.ОперацияНомер <= НачальныеКонечныеОперации.ОперацияНомерКонечный
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РезультатПодготовка.НомерСтроки,
	|	РезультатПодготовка.ЕдиницаИзмерения,
	|	РезультатПодготовка.Операция,
	|	РезультатПодготовка.Коэффициент,
	|	РезультатПодготовка.МожноПропустить,
	|	РезультатПодготовка.ОперацияНачальная,
	|	РезультатПодготовка.ОперацияКонечная,
	|	РезультатПодготовка.Номенклатура,
	|	РезультатПодготовка.ВариантНаладки,
	|	РезультатПодготовка.УчастокКонечный,
	|	РезультатПодготовка.УчастокНачальный,
	|	РезультатПодготовка.КлючИзделия,
	|	РезультатПодготовка.ХарактеристикаНоменклатуры,
	|	РезультатПодготовка.Участок,
	|	РезультатПодготовка.ОперацияНомер,
	|	РезультатПодготовка.КоличествоОпераций,
	|	РезультатПодготовка.КоличествоОперацийВсего,
	|	НачальныеКонечныеОперации.ОперацияНомерНачальный,
	|	НачальныеКонечныеОперации.ОперацияНомерКонечный,
	|	ВЫБОР
	|		КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|				И РезультатПодготовка.ОперацияНомер = НачальныеКонечныеОперации.ОперацияНомерКонечный
	|			ТОГДА 0
	|		ИНАЧЕ РезультатПодготовка.ОперацияНомерСледующий
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|				И РезультатПодготовка.ОперацияНомер = НачальныеКонечныеОперации.ОперацияНомерКонечный
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	|		ИНАЧЕ РезультатПодготовка.ОперацияСледующая
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачальныеКонечныеОперации.ОперацияНомерКонечный > 0
	|				И РезультатПодготовка.ОперацияНомер = НачальныеКонечныеОперации.ОперацияНомерКонечный
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_Участки.ПустаяСсылка)
	|		ИНАЧЕ РезультатПодготовка.УчастокСледующий
	|	КОНЕЦ";
		
	Запрос.Параметры.Вставить("ИсходнаяТаблица", ТЗ);
	Запрос.Параметры.Вставить("вхДатаЗапроса", вхДатаЗапроса);

	
	Если вхТекстИтогов = Неопределено Тогда
		Если ВариантВывода = "Таблица" или ВариантВывода = "Выборка" Тогда
		// Таблица
			вхТекстИтогов = "
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки,
			|	ОперацияНомер";
		ИначеЕсли ВариантВывода = "Дерево" Тогда
		//	////Дерево
			вхТекстИтогов = "
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки
			|ИТОГИ
			|	СУММА(КоличествоОпераций)

			|ПО
			|	НомерСтроки,
			|	ОперацияНомер";
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + вхТекстИтогов;
	
	
	
	Если ВариантВывода = "Таблица" Тогда	
		РезультатЗапроса = Запрос.Выполнить().Выгрузить(); 
	ИначеЕсли ВариантВывода = "Дерево" Тогда
		РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ИначеЕсли ВариантВывода = "ДеревоИерархия" Тогда
	//	РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//ИначеЕсли ВариантВывода = "ДеревоВыборкаИерархия" Тогда
	//	РезультатЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ИначеЕсли ВариантВывода = "Выборка" Тогда
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	//	
	Возврат РезультатЗапроса;
	
КонецФункции	

Функция ПолучитьПервыеОперацииИзделий(вхИсходнаяТаблица, вхДатаЗапроса = Неопределено, вхТекстИтогов = Неопределено, ВариантВывода = "Таблица") Экспорт
	
	ЭтоСтрока= Ложь;
	//++++++++++++++
	Если ТипЗнч(вхИсходнаяТаблица) = Тип("СтрокаТаблицыЗначений") 
		ИЛИ Найти(Строка(ТипЗнч(вхИсходнаяТаблица)),"Документ табличная часть строка")>0 Тогда
		ТЗ = Новый ТаблицаЗначений;
		КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Любой);
		ТЗ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		ТЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТЗ.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		ТЗ.Колонки.Добавить("КлючИзделия", Новый ОписаниеТипов("УникальныйИдентификатор"));
		
		НСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НСтрока, вхИсходнаяТаблица);
		ЭтоСтрока = Истина;
	КонецЕсли;
	//--------------
	
	Если вхДатаЗапроса = Неопределено Тогда
		вхДатаЗапроса = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	




	"ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ЗаказНаПроизводство,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.Количество КАК Количество,
	|	ИсходнаяТаблица.КлючИзделия
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ИсходнаяТаблица.Количество) КАК КоличествоИзделий,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.МаршрутнаяКарта,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.ИзделиеНомер,
	|	ИсходнаяТаблица.КлючИзделия
	|ПОМЕСТИТЬ СписокМаршрутныхКарт
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_МаршрутныеКартыОперации.СрезПоследних(&вхДатаЗапроса, ) КАК БЗ_МаршрутныеКартыОперацииСрезПоследних
	|		ПО ИсходнаяТаблица.Номенклатура = БЗ_МаршрутныеКартыОперацииСрезПоследних.Номенклатура
	|			И ИсходнаяТаблица.ХарактеристикаНоменклатуры = БЗ_МаршрутныеКартыОперацииСрезПоследних.ХарактеристикаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.НомерСтроки,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.МаршрутнаяКарта,
	|	БЗ_МаршрутныеКартыОперацииСрезПоследних.ИзделиеНомер,
	|	ИсходнаяТаблица.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокМаршрутныхКарт.НомерСтроки,
	|	СписокМаршрутныхКарт.Номенклатура,
	|	СписокМаршрутныхКарт.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.ИзделиеНомер) КАК ИзделиеНомер,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.ОперацияНомер) КАК ОперацияНомер,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.ОперацияНомерСледующий) КАК ОперацияНомерСледующий,
	|	БЗ_МаршрутнаяКартаОперации.Операция,
	|	МАКСИМУМ(БЗ_МаршрутнаяКартаОперации.Количество) КАК Количество,
	|	БЗ_МаршрутнаяКартаОперации.Участок,
	|	БЗ_МаршрутнаяКартаОперации.ВариантНаладки,
	|	БЗ_МаршрутнаяКартаОперации.МожноПропустить,
	|	1 КАК ПриоритетТЗ,
	|	СписокМаршрутныхКарт.КлючИзделия
	|ПОМЕСТИТЬ СписокОпераций
	|ИЗ
	|	Документ.БЗ_МаршрутнаяКарта.Операции КАК БЗ_МаршрутнаяКартаОперации,
	|	СписокМаршрутныхКарт КАК СписокМаршрутныхКарт
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокМаршрутныхКарт.Номенклатура,
	|	СписокМаршрутныхКарт.ХарактеристикаНоменклатуры,
	|	СписокМаршрутныхКарт.НомерСтроки,
	|	БЗ_МаршрутнаяКартаОперации.Участок,
	|	БЗ_МаршрутнаяКартаОперации.МожноПропустить,
	|	БЗ_МаршрутнаяКартаОперации.Операция,
	|	БЗ_МаршрутнаяКартаОперации.ВариантНаладки,
	|	СписокМаршрутныхКарт.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.КлючИзделия,
	|	2 КАК ПриоритетТЗ,
	|	БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ШаблонТехнологическогоПроцесса КАК ШаблонТехнологическогоПроцесса
	|ПОМЕСТИТЬ ВыборШаблонаТП
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ШаблоныТехнологическихПроцессов.СрезПоследних(&вхДатаЗапроса, ) КАК БЗ_ШаблоныТехнологическихПроцессовСрезПоследних
	|		ПО ИсходнаяТаблица.Номенклатура = БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.Номенклатура
	|			И (ВЫБОР
	|				КОГДА БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.пустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ХарактеристикаНоменклатуры = ИсходнаяТаблица.ХарактеристикаНоменклатуры
	|			КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.КлючИзделия,
	|	3,
	|	БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.ШаблонТехнологическогоПроцесса
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСсылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ШаблоныТехнологическихПроцессов.СрезПоследних(&вхДатаЗапроса, ) КАК БЗ_ШаблоныТехнологическихПроцессовСрезПоследних
	|			ПО НоменклатураСсылка.НоменклатурнаяГруппаПроизводство = БЗ_ШаблоныТехнологическихПроцессовСрезПоследних.НоменклатурнаяГруппаПроизводство
	|		ПО ИсходнаяТаблица.Номенклатура = НоменклатураСсылка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборШаблонаТП.НомерСтроки,
	|	ВыборШаблонаТП.Номенклатура,
	|	ВыборШаблонаТП.ХарактеристикаНоменклатуры,
	|	ВыборШаблонаТП.КлючИзделия,
	|	МИНИМУМ(ВыборШаблонаТП.ПриоритетТЗ) КАК ПриоритетТЗ
	|ПОМЕСТИТЬ ВыборШаблонаТПИтог
	|ИЗ
	|	ВыборШаблонаТП КАК ВыборШаблонаТП
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборШаблонаТП.ХарактеристикаНоменклатуры,
	|	ВыборШаблонаТП.КлючИзделия,
	|	ВыборШаблонаТП.НомерСтроки,
	|	ВыборШаблонаТП.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборШаблонаТПИтог.НомерСтроки,
	|	ВыборШаблонаТПИтог.Номенклатура,
	|	ВыборШаблонаТПИтог.ХарактеристикаНоменклатуры,
	|	ВыборШаблонаТПИтог.КлючИзделия,
	|	ВыборШаблонаТПИтог.ПриоритетТЗ,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.ОперацияНомер,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.ОперацияНомерСледующий,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.Операция,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.Участок,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.ВариантНаладки,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.МожноПропустить,
	|	БЗ_ШаблонТехнологическогоПроцессаОперации.Количество
	|ПОМЕСТИТЬ ВыборСписокОпераций
	|ИЗ
	|	ВыборШаблонаТПИтог КАК ВыборШаблонаТПИтог
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборШаблонаТП КАК ВыборШаблонаТП
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БЗ_ШаблонТехнологическогоПроцесса.Операции КАК БЗ_ШаблонТехнологическогоПроцессаОперации
	|			ПО ВыборШаблонаТП.ШаблонТехнологическогоПроцесса = БЗ_ШаблонТехнологическогоПроцессаОперации.Ссылка
	|		ПО ВыборШаблонаТПИтог.НомерСтроки = ВыборШаблонаТП.НомерСтроки
	|			И ВыборШаблонаТПИтог.ПриоритетТЗ = ВыборШаблонаТП.ПриоритетТЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокОпераций.НомерСтроки,
	|	СписокОпераций.Номенклатура,
	|	СписокОпераций.ХарактеристикаНоменклатуры,
	|	СписокОпераций.КлючИзделия,
	|	СписокОпераций.ПриоритетТЗ,
	|	СписокОпераций.ОперацияНомер,
	|	СписокОпераций.ОперацияНомерСледующий,
	|	СписокОпераций.Операция,
	|	СписокОпераций.Участок,
	|	СписокОпераций.ВариантНаладки,
	|	СписокОпераций.МожноПропустить,
	|	СписокОпераций.Количество
	|ИЗ
	|	СписокОпераций КАК СписокОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборСписокОпераций.НомерСтроки,
	|	ВыборСписокОпераций.Номенклатура,
	|	ВыборСписокОпераций.ХарактеристикаНоменклатуры,
	|	ВыборСписокОпераций.КлючИзделия,
	|	МИНИМУМ(ВыборСписокОпераций.ПриоритетТЗ) КАК ПриоритетТЗ
	|ПОМЕСТИТЬ ВыборСпискаОперацийИтог
	|ИЗ
	|	ВыборСписокОпераций КАК ВыборСписокОпераций
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборСписокОпераций.НомерСтроки,
	|	ВыборСписокОпераций.Номенклатура,
	|	ВыборСписокОпераций.ХарактеристикаНоменклатуры,
	|	ВыборСписокОпераций.КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.Количество КАК КоличествоИзделий,
	|	ВыборСписокОпераций.ОперацияНомер,
	|	ВыборСписокОпераций.ОперацияНомерСледующий,
	|	ВыборСписокОпераций.Операция,
	|	ВыборСписокОпераций.Количество КАК КоличествоОпераций,
	|	ВыборСписокОпераций.Участок,
	|	ВыборСписокОпераций.ВариантНаладки,
	|	ВыборСписокОпераций.МожноПропустить,
	|	ИсходнаяТаблица.Количество,
	|	ИсходнаяТаблица.Количество * ВыборСписокОпераций.Количество КАК КоличествоОперацийВсего,
	|	ИсходнаяТаблица.КлючИзделия,
	|	ИсходнаяТаблица.ЗаказНаПроизводство
	|ПОМЕСТИТЬ РезультатПодготовка
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборСписокОпераций КАК ВыборСписокОпераций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыборСпискаОперацийИтог КАК ВыборСпискаОперацийИтог
	|			ПО (ВыборСпискаОперацийИтог.НомерСтроки = ВыборСписокОпераций.НомерСтроки)
	|				И (ВыборСпискаОперацийИтог.ПриоритетТЗ = ВыборСписокОпераций.ПриоритетТЗ)
	|		ПО (ИсходнаяТаблица.НомерСтроки = ВыборСпискаОперацийИтог.НомерСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходнаяТаблица.Номенклатура,
	|	ИсходнаяТаблица.ХарактеристикаНоменклатуры,
	|	ИсходнаяТаблица.НомерСтроки,
	|	ВыборСписокОпераций.Участок,
	|	ВыборСписокОпераций.Операция,
	|	ВыборСписокОпераций.ВариантНаладки,
	|	ВыборСписокОпераций.МожноПропустить,
	|	ИсходнаяТаблица.Количество,
	|	ВыборСписокОпераций.ОперацияНомер,
	|	ВыборСписокОпераций.ОперацияНомерСледующий,
	|	ИсходнаяТаблица.КлючИзделия,
	|	ВыборСписокОпераций.Количество,
	|	ИсходнаяТаблица.ЗаказНаПроизводство,
	|	ИсходнаяТаблица.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатПодготовка.Номенклатура,
	|	РезультатПодготовка.ХарактеристикаНоменклатуры,
	|	МИНИМУМ(РезультатПодготовка.ОперацияНомер) КАК ОперацияНомер,
	|	РезультатПодготовка.ВариантНаладки
	|ПОМЕСТИТЬ ОтборПервойОперации
	|ИЗ
	|	РезультатПодготовка КАК РезультатПодготовка
	|
	|СГРУППИРОВАТЬ ПО
	|	РезультатПодготовка.Номенклатура,
	|	РезультатПодготовка.ХарактеристикаНоменклатуры,
	|	РезультатПодготовка.ВариантНаладки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатПодготовка.НомерСтроки КАК НомерСтрокиТаблицы,
	|	РезультатПодготовка.Номенклатура,
	|	РезультатПодготовка.ХарактеристикаНоменклатуры,
	|	РезультатПодготовка.КоличествоИзделий,
	|	РезультатПодготовка.ОперацияНомер,
	|	РезультатПодготовка.ОперацияНомерСледующий,
	|	РезультатПодготовка.Операция КАК ОперацияНачальная,
	|	РезультатПодготовка.КоличествоОпераций,
	|	РезультатПодготовка.Участок КАК УчастокНачальный,
	|	РезультатПодготовка.ВариантНаладки,
	|	РезультатПодготовка.МожноПропустить,
	|	РезультатПодготовка.Количество,
	|	РезультатПодготовка.КоличествоОперацийВсего,
	|	РезультатПодготовка.КлючИзделия,
	|	РезультатПодготовка.ЗаказНаПроизводство
	|ИЗ
	|	РезультатПодготовка КАК РезультатПодготовка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПервойОперации КАК ОтборПервойОперации
	|		ПО РезультатПодготовка.ВариантНаладки = ОтборПервойОперации.ВариантНаладки
	|			И РезультатПодготовка.Номенклатура = ОтборПервойОперации.Номенклатура
	|			И РезультатПодготовка.ХарактеристикаНоменклатуры = ОтборПервойОперации.ХарактеристикаНоменклатуры
	|			И РезультатПодготовка.ОперацияНомер = ОтборПервойОперации.ОперацияНомер";
	
	Запрос.Параметры.Вставить("ИсходнаяТаблица",		 ?(ЭтоСтрока, ТЗ, вхИсходнаяТаблица));
	Запрос.Параметры.Вставить("вхДатаЗапроса", 				 вхДатаЗапроса);

	
	
	
	Если вхТекстИтогов = Неопределено Тогда
		Если ВариантВывода = "Таблица" или ВариантВывода = "Выборка" Тогда
		// Таблица
			вхТекстИтогов = "
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтрокиТаблицы";
		//ИначеЕсли ВариантВывода = "Дерево" Тогда
		//	////Дерево
		//	вхТекстИтогов = "
		//	|УПОРЯДОЧИТЬ ПО
		//	|	НомерСтроки
		//	|ИТОГИ
		//	|	СУММА(Количество),
		//	|	СУММА(КоличествоИзделий),
		//	|	СУММА(КоличествоОпераций)

		//	|ПО
		//	|	НомерСтроки,
		//	|	Номенклатура,
		//	|	ХарактеристикаНоменклатуры";
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + вхТекстИтогов;
//ВнешниеОбработки.Создать("C:\Users\admin1c\Desktop\!Служебные\запросник2_0.epf").ОтладитьЗапрос(Запрос);	
//	ВнешниеОбработки.Создать("D:\1CBases\!Служебные\запросник2_0.epf").ОтладитьЗапрос(Запрос);
	
	
	Если ВариантВывода = "Таблица" Тогда	
		РезультатЗапроса = Запрос.Выполнить().Выгрузить(); 
	//ИначеЕсли ВариантВывода = "Дерево" Тогда
	//	РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ИначеЕсли ВариантВывода = "ДеревоИерархия" Тогда
	//	РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//ИначеЕсли ВариантВывода = "ДеревоВыборкаИерархия" Тогда
	//	РезультатЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ИначеЕсли ВариантВывода = "Выборка" Тогда
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	//	
	Возврат РезультатЗапроса;
	
КонецФункции	

Функция ПолучитьСвойстваВыходныхИзделий(вхИсходнаяТаблица) Экспорт
	ЭтоСтрока= Ложь;
	//++++++++++++++
	Если ТипЗнч(вхИсходнаяТаблица) = Тип("СтрокаТаблицыЗначений") 
		ИЛИ Найти(Строка(ТипЗнч(вхИсходнаяТаблица)),"табличная часть строка")>0 Тогда
		ТЗ = Новый ТаблицаЗначений;
		КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Любой);
		КвалификаторыЧислаЦел = Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Любой);
		КвалификаторыСтроки = Новый КвалификаторыСтроки(36);
		ТЗ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		ТЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТЗ.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		//ТЗ.Колонки.Добавить("ОперацияНомер", Новый ОписаниеТипов("Число",КвалификаторыЧислаЦел));
		//ТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
		//ТЗ.Колонки.Добавить("КлючИзделия", Новый ОписаниеТипов("Строка",КвалификаторыСтроки));
		
		НСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НСтрока, вхИсходнаяТаблица);
		ЭтоСтрока = Истина;
	КонецЕсли;
	//--------------
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	


	"ВЫБРАТЬ
	|	вхВыходныеИзделия.НомерСтроки,
	|	ВЫРАЗИТЬ(вхВыходныеИзделия.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(вхВыходныеИзделия.ХарактеристикаНоменклатуры КАК Справочник.ХарактеристикиНоменклатуры) КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВыходныеИзделия
	|ИЗ
	|	&вхВыходныеИзделия КАК вхВыходныеИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВыходныеИзделия.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВыходныеИзделияСводно
	|ИЗ
	|	ВыходныеИзделия КАК ВыходныеИзделия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходныеИзделия.Номенклатура,
	|	ВыходныеИзделия.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.ЕдиницаХраненияОстатков.Ширина) КАК РазмерX,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.ЕдиницаХраненияОстатков.Глубина) КАК РазмерZ,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.ЕдиницаХраненияОстатков.Высота) КАК РазмерY,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.ЕдиницаХраненияОстатков.ВидПоддона) КАК ВидПоддона,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.ЕдиницаХраненияОстатков.Укладка) КАК Укладка,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.КомплектуетсяСтеклом) КАК Хрупкое,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.Комплект) КАК Сборка,
	|	ВыходныеИзделияСводно.Номенклатура,
	|	ВыходныеИзделияСводно.ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.ВидФасада) КАК ВидФасада,
	|	МАКСИМУМ(ВыходныеИзделияСводно.Номенклатура.НоменклатурнаяГруппаТорговля) КАК НоменклатурнаяГруппаТорговля
	|ПОМЕСТИТЬ ВыходныеИзделияСоСвойствами
	|ИЗ
	|	ВыходныеИзделияСводно КАК ВыходныеИзделияСводно
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходныеИзделияСводно.Номенклатура,
	|	ВыходныеИзделияСводно.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЗначенияСвойствОбъектовЦвет.Значение) КАК Цвет,
	|	ВыходныеИзделияСводно.ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВыходныеИзделияЦвет
	|ИЗ
	|	ВыходныеИзделияСводно КАК ВыходныеИзделияСводно
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовЦвет
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектовЦвет
	|			ПО ЗначенияСвойствОбъектовЦвет.Свойство = СвойстваОбъектовЦвет.Ссылка
	|		ПО ВыходныеИзделияСводно.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектовЦвет.Объект
	|ГДЕ
	|	СвойстваОбъектовЦвет.НазначениеСвойства = ЗНАЧЕНИЕ(планвидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры)
	|	И СвойстваОбъектовЦвет.Наименование = ""Цвет""
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходныеИзделияСводно.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходныеИзделия.НомерСтроки КАК НомерСтроки,
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВыходныеИзделия.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВыходныеИзделияСоСвойствами.РазмерX,
	|	ВыходныеИзделияСоСвойствами.РазмерZ,
	|	ВыходныеИзделияСоСвойствами.РазмерY,
	|	ВыходныеИзделияСоСвойствами.ВидПоддона,
	|	ВыходныеИзделияСоСвойствами.Хрупкое,
	|	ВыходныеИзделияСоСвойствами.Сборка,
	|	ВыходныеИзделияСоСвойствами.ВидФасада,
	|	ВыходныеИзделияСоСвойствами.НоменклатурнаяГруппаТорговля,
	|	ВыходныеИзделияЦвет.Цвет
	|ИЗ
	|	ВыходныеИзделия КАК ВыходныеИзделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделияСоСвойствами КАК ВыходныеИзделияСоСвойствами
	|		ПО ВыходныеИзделия.Номенклатура = ВыходныеИзделияСоСвойствами.Номенклатура
	|			И ВыходныеИзделия.ХарактеристикаНоменклатуры = ВыходныеИзделияСоСвойствами.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделияЦвет КАК ВыходныеИзделияЦвет
	|		ПО ВыходныеИзделия.ХарактеристикаНоменклатуры = ВыходныеИзделияЦвет.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Запрос.Параметры.Вставить("вхВыходныеИзделия",		 ?(ЭтоСтрока, ТЗ, вхИсходнаяТаблица));
	РезультатЗапроса = Запрос.Выполнить().Выгрузить(); 
	РезультатЗапроса.Индексы.Добавить("НомерСтроки");
	Возврат РезультатЗапроса;
	
	
КонецФункции

Функция ПолучитьВыходныеТипыТЕОпераций(КлючиИзделий, Операция=Неопределено, ВсеОперации = Ложь,ТипТЕ = Неопределено , ОперацияРМ=Неопределено) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	БЗ_ПартииПроизводства_Порядок.КлючПорядка КАК КлючИзделия,
	//|	БЗ_ПартииПроизводства_Порядок.ТипТЕ.Наименование КАК НТипТЕ,
	//|	БЗ_ПартииПроизводства_Порядок.ТипТЕ КАК ТипТЕ,
	//|	БЗ_ПартииПроизводства_Порядок.ПорядокТипТЕ КАК Приоритет,
	//|	БЗ_ПартииПроизводства_Порядок.Операция КАК Операция
	//|ИЗ
	//|	РегистрСведений.БЗ_ПартииПроизводства_Порядок КАК БЗ_ПартииПроизводства_Порядок
	//|ГДЕ
	//|	БЗ_ПартииПроизводства_Порядок.ВидПорядка = ЗНАЧЕНИЕ(Перечисление.БЗ_ВидыПорядкаПартии.ПорядокТипыТЕ)
	//|	И БЗ_ПартииПроизводства_Порядок.КлючПорядка В(&КлючиИзделий)
	//|	И &Операция
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	БЗ_ПартииПроизводства_Порядок.ПорядокТипТЕ";
	

"ВЫБРАТЬ
|	БЗ_ПартииПроизводства_Параметры.КлючПартии КАК КлючИзделия,
|	БЗ_ПартииПроизводства_Параметры.Номенклатура КАК Номенклатура,
|	БЗ_ПартииПроизводства_Параметры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
|	БЗ_ПартииПроизводства_Параметры.ВидПартии КАК ВидПартии
|ПОМЕСТИТЬ КлючиИзделий
|ИЗ
|	РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
|ГДЕ
|	БЗ_ПартииПроизводства_Параметры.КлючПартии В(&КлючиИзделий)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	КлючиИзделий.Номенклатура КАК Номенклатура,
|	КлючиИзделий.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
|	КлючиИзделий.ВидПартии КАК ВидПартии
|ПОМЕСТИТЬ СписокНоменклатуры
|ИЗ
|	КлючиИзделий КАК КлючиИзделий
|
|СГРУППИРОВАТЬ ПО
|	КлючиИзделий.Номенклатура,
|	КлючиИзделий.ХарактеристикаНоменклатуры,
|	КлючиИзделий.ВидПартии
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
|	СписокНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
|	ВЫБОР
|		КОГДА &ВсеОперации = ЛОЖЬ
|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
|		ИНАЧЕ БЗ_ВыходныеТипыТЕСрезПоследних.Операция
|	КОНЕЦ КАК Операция,
|	БЗ_ВыходныеТипыТЕСрезПоследних.ТипТЕ КАК ТипТЕ,
|	СРЕДНЕЕ(БЗ_ВыходныеТипыТЕСрезПоследних.Приоритет) КАК Приоритет,
|	БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии КАК ВидПартии,
|	ВЫБОР
|		КОГДА БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии = ЗНАЧЕНИЕ(Справочник.БЗ_ВидыПартииПроизводства.ПустаяСсылка)
|			ТОГДА 2
|		ИНАЧЕ 1
|	КОНЕЦ КАК ПриоритетВидаПартии
|ПОМЕСТИТЬ СписокТЕ
|ИЗ
|	РегистрСведений.БЗ_ВыходныеТипыТЕ.СрезПоследних(
|			,
|			&ТипТЕ
|				И Номенклатура В
|					(ВЫБРАТЬ
|						СписокНоменклатуры.Номенклатура
|					ИЗ
|						СписокНоменклатуры КАК СписокНоменклатуры)
|				И ВЫБОР
|					КОГДА &КонтрольОперация
|						ТОГДА ВЫБОР
|								КОГДА &Операция = ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
|									ТОГДА &ФильтрОперацияРМ
|											И (ТипТЕ.ВариантКонтроляОперации = ЗНАЧЕНИЕ(Перечисление.БЗ_ТипыТЕ_ВариантыКонтроляОперации.ТолькоПустаяОперация)
|												ИЛИ ТипТЕ.ВариантКонтроляОперации = ЗНАЧЕНИЕ(Перечисление.БЗ_ТипыТЕ_ВариантыКонтроляОперации.БезКонтроляОперации))
|								ИНАЧЕ &ФильтрОперация
|										И (ТипТЕ.ВариантКонтроляОперации = ЗНАЧЕНИЕ(Перечисление.БЗ_ТипыТЕ_ВариантыКонтроляОперации.ТолькоНеПустаяОперация)
|											ИЛИ ТипТЕ.ВариантКонтроляОперации = ЗНАЧЕНИЕ(Перечисление.БЗ_ТипыТЕ_ВариантыКонтроляОперации.БезКонтроляОперации))
|							КОНЕЦ
|					ИНАЧЕ ИСТИНА
|				КОНЕЦ) КАК БЗ_ВыходныеТипыТЕСрезПоследних
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокНоменклатуры КАК СписокНоменклатуры
|		ПО БЗ_ВыходныеТипыТЕСрезПоследних.Номенклатура = СписокНоменклатуры.Номенклатура
|			И (БЗ_ВыходныеТипыТЕСрезПоследних.ВсеХарактеристики
|				ИЛИ БЗ_ВыходныеТипыТЕСрезПоследних.ХарактеристикаНоменклатуры = СписокНоменклатуры.ХарактеристикаНоменклатуры)
|			И (ВЫБОР
|				КОГДА БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии = ЗНАЧЕНИЕ(Справочник.БЗ_ВидыПартииПроизводства.ПустаяСсылка)
|					ТОГДА ИСТИНА
|				ИНАЧЕ БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии = СписокНоменклатуры.ВидПартии
|			КОНЕЦ)
|ГДЕ
|	БЗ_ВыходныеТипыТЕСрезПоследних.Используется
|
|СГРУППИРОВАТЬ ПО
|	БЗ_ВыходныеТипыТЕСрезПоследних.ТипТЕ,
|	СписокНоменклатуры.Номенклатура,
|	СписокНоменклатуры.ХарактеристикаНоменклатуры,
|	БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии,
|	ВЫБОР
|		КОГДА &ВсеОперации = ЛОЖЬ
|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
|		ИНАЧЕ БЗ_ВыходныеТипыТЕСрезПоследних.Операция
|	КОНЕЦ
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СписокТЕ.Номенклатура КАК Номенклатура,
|	СписокТЕ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
|	ВЫБОР
|		КОГДА &ВсеОперации = ЛОЖЬ
|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
|		ИНАЧЕ СписокТЕ.Операция
|	КОНЕЦ КАК Операция,
|	МИНИМУМ(СписокТЕ.ПриоритетВидаПартии) КАК ПриоритетВидаПартии
|ПОМЕСТИТЬ СписокТЕВыбор
|ИЗ
|	СписокТЕ КАК СписокТЕ
|
|СГРУППИРОВАТЬ ПО
|	СписокТЕ.Номенклатура,
|	СписокТЕ.ХарактеристикаНоменклатуры,
|	ВЫБОР
|		КОГДА &ВсеОперации = ЛОЖЬ
|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
|		ИНАЧЕ СписокТЕ.Операция
|	КОНЕЦ
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	КлючиИзделий.КлючИзделия КАК КлючИзделия,
|	СписокТЕ.Операция КАК Операция,
|	СписокТЕ.ТипТЕ КАК ТипТЕ,
|	МАКСИМУМ(СписокТЕ.Приоритет) КАК Приоритет,
|	СписокТЕ.ТипТЕ.Наименование КАК НТипТЕ
|ИЗ
|	КлючиИзделий КАК КлючиИзделий
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокТЕ КАК СписокТЕ
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокТЕВыбор КАК СписокТЕВыбор
|			ПО СписокТЕ.Номенклатура = СписокТЕВыбор.Номенклатура
|				И СписокТЕ.ХарактеристикаНоменклатуры = СписокТЕВыбор.ХарактеристикаНоменклатуры
|				И СписокТЕ.ПриоритетВидаПартии = СписокТЕВыбор.ПриоритетВидаПартии
|		ПО КлючиИзделий.Номенклатура = СписокТЕ.Номенклатура
|			И КлючиИзделий.ХарактеристикаНоменклатуры = СписокТЕ.ХарактеристикаНоменклатуры
|
|СГРУППИРОВАТЬ ПО
|	СписокТЕ.ТипТЕ,
|	КлючиИзделий.КлючИзделия,
|	СписокТЕ.Операция,
|	СписокТЕ.ТипТЕ.Наименование";

	//"ВЫБРАТЬ
	//|	БЗ_ПартииПроизводства_Параметры.КлючПартии КАК КлючИзделия,
	//|	БЗ_ПартииПроизводства_Параметры.Номенклатура КАК Номенклатура,
	//|	БЗ_ПартииПроизводства_Параметры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	БЗ_ПартииПроизводства_Параметры.ВидПартии КАК ВидПартии
	//|ПОМЕСТИТЬ КлючиИзделий
	//|ИЗ
	//|	РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	//|ГДЕ
	//|	БЗ_ПартииПроизводства_Параметры.КлючПартии В(&КлючиИзделий)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	КлючиИзделий.Номенклатура КАК Номенклатура,
	//|	КлючиИзделий.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	КлючиИзделий.ВидПартии КАК ВидПартии
	//|ПОМЕСТИТЬ СписокНоменклатуры
	//|ИЗ
	//|	КлючиИзделий КАК КлючиИзделий
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	КлючиИзделий.Номенклатура,
	//|	КлючиИзделий.ХарактеристикаНоменклатуры,
	//|	КлючиИзделий.ВидПартии
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
	//|	СписокНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВЫБОР
	//|		КОГДА &ВсеОперации = ЛОЖЬ
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	//|		ИНАЧЕ БЗ_ВыходныеТипыТЕСрезПоследних.Операция
	//|	КОНЕЦ КАК Операция,
	//|	БЗ_ВыходныеТипыТЕСрезПоследних.ТипТЕ КАК ТипТЕ,
	//|	СРЕДНЕЕ(БЗ_ВыходныеТипыТЕСрезПоследних.Приоритет) КАК Приоритет,
	//|	БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии КАК ВидПартии,
	//|	ВЫБОР
	//|		КОГДА БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии = ЗНАЧЕНИЕ(Справочник.БЗ_ВидыПартииПроизводства.ПустаяСсылка)
	//|			ТОГДА 2
	//|		ИНАЧЕ 1
	//|	КОНЕЦ КАК ПриоритетВидаПартии
	//|ПОМЕСТИТЬ СписокТЕ
	//|ИЗ
	//|	РегистрСведений.БЗ_ВыходныеТипыТЕ.СрезПоследних(
	//|			,
	//|			&Операция
	//|				И &ТипТЕ
	//|				И Номенклатура В
	//|					(ВЫБРАТЬ
	//|						СписокНоменклатуры.Номенклатура
	//|					ИЗ
	//|						СписокНоменклатуры КАК СписокНоменклатуры)) КАК БЗ_ВыходныеТипыТЕСрезПоследних
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокНоменклатуры КАК СписокНоменклатуры
	//|		ПО БЗ_ВыходныеТипыТЕСрезПоследних.Номенклатура = СписокНоменклатуры.Номенклатура
	//|			И (БЗ_ВыходныеТипыТЕСрезПоследних.ВсеХарактеристики
	//|				ИЛИ БЗ_ВыходныеТипыТЕСрезПоследних.ХарактеристикаНоменклатуры = СписокНоменклатуры.ХарактеристикаНоменклатуры)
	//|			И (ВЫБОР
	//|				КОГДА БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии = ЗНАЧЕНИЕ(Справочник.БЗ_ВидыПартииПроизводства.ПустаяСсылка)
	//|					ТОГДА ИСТИНА
	//|				ИНАЧЕ БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии = СписокНоменклатуры.ВидПартии
	//|			КОНЕЦ)
	//|ГДЕ
	//|	БЗ_ВыходныеТипыТЕСрезПоследних.Используется
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	БЗ_ВыходныеТипыТЕСрезПоследних.ТипТЕ,
	//|	СписокНоменклатуры.Номенклатура,
	//|	СписокНоменклатуры.ХарактеристикаНоменклатуры,
	//|	БЗ_ВыходныеТипыТЕСрезПоследних.ВидПартии,
	//|	ВЫБОР
	//|		КОГДА &ВсеОперации = ЛОЖЬ
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	//|		ИНАЧЕ БЗ_ВыходныеТипыТЕСрезПоследних.Операция
	//|	КОНЕЦ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СписокТЕ.Номенклатура КАК Номенклатура,
	//|	СписокТЕ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВЫБОР
	//|		КОГДА &ВсеОперации = ЛОЖЬ
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	//|		ИНАЧЕ СписокТЕ.Операция
	//|	КОНЕЦ КАК Операция,
	//|	МИНИМУМ(СписокТЕ.ПриоритетВидаПартии) КАК ПриоритетВидаПартии
	//|ПОМЕСТИТЬ СписокТЕВыбор
	//|ИЗ
	//|	СписокТЕ КАК СписокТЕ
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	СписокТЕ.Номенклатура,
	//|	СписокТЕ.ХарактеристикаНоменклатуры,
	//|	ВЫБОР
	//|		КОГДА &ВсеОперации = ЛОЖЬ
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)
	//|		ИНАЧЕ СписокТЕ.Операция
	//|	КОНЕЦ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	КлючиИзделий.КлючИзделия КАК КлючИзделия,
	//|	СписокТЕ.Операция КАК Операция,
	//|	СписокТЕ.ТипТЕ КАК ТипТЕ,
	//|	МАКСИМУМ(СписокТЕ.Приоритет) КАК Приоритет,
	//|	СписокТЕ.ТипТЕ.Наименование КАК НТипТЕ
	//|ИЗ
	//|	КлючиИзделий КАК КлючиИзделий
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокТЕ КАК СписокТЕ
	//|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокТЕВыбор КАК СписокТЕВыбор
	//|			ПО СписокТЕ.Номенклатура = СписокТЕВыбор.Номенклатура
	//|				И СписокТЕ.ХарактеристикаНоменклатуры = СписокТЕВыбор.ХарактеристикаНоменклатуры
	//|				И СписокТЕ.ПриоритетВидаПартии = СписокТЕВыбор.ПриоритетВидаПартии
	//|		ПО КлючиИзделий.Номенклатура = СписокТЕ.Номенклатура
	//|			И КлючиИзделий.ХарактеристикаНоменклатуры = СписокТЕ.ХарактеристикаНоменклатуры
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	СписокТЕ.ТипТЕ,
	//|	КлючиИзделий.КлючИзделия,
	//|	СписокТЕ.Операция,
	//|	СписокТЕ.ТипТЕ.Наименование";
							  
	Запрос.УстановитьПараметр("КлючиИзделий", КлючиИзделий);
	Если Операция <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ФильтрОперация","Операция = &Операция");
		Запрос.УстановитьПараметр("КонтрольОперация", Истина);
		Запрос.УстановитьПараметр("Операция", Операция);
	Иначе
		Запрос.УстановитьПараметр("Операция", Справочники.БЗ_MES_ТехнологическиеОперации.ПустаяСсылка());
		Запрос.УстановитьПараметр("КонтрольОперация", Ложь);
		Запрос.УстановитьПараметр("ФильтрОперация", Истина);
	КонецЕсли;	
	Если ОперацияРМ <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ФильтрОперацияРМ","Операция = &ОперацияРМ");
		Запрос.УстановитьПараметр("ОперацияРМ", ОперацияРМ);
	Иначе
		Запрос.УстановитьПараметр("ОперацияРМ", Справочники.БЗ_MES_ТехнологическиеОперации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ФильтрОперацияРМ", Истина);
	КонецЕсли;	
	Если ЗначениеЗаполнено(ТипТЕ) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ТипТЕ","ТипТЕ = &ТипТЕ");
		Запрос.УстановитьПараметр("ТипТЕ", ТипТЕ);
	Иначе
		Запрос.УстановитьПараметр("ТипТЕ", Истина);
	КонецЕсли;	
	Запрос.УстановитьПараметр("ВсеОперации", ВсеОперации);
	//Обработки.Запросник2_0.Создать().ДампВРегистр(Запрос, "ТипыТЕ");
	//БЗ_TSDAPI.ОтладкаЗапроса(Запрос, "ПолучитьВыходныеТипыТЕОпераций");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция СоздатьТЕ(Подразделение,ТипТЕ,Количество) Экспорт
	МассивТЕ=Новый Массив();
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.БЗ_ТЕ");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	ТЕПериод=Год(ТекущаяДата())-2000;
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	ЕСТЬNULL(МАКСИМУМ(БЗ_ТЕ.Номер), 0) КАК Номер
	                    |ИЗ
	                    |	Справочник.БЗ_ТЕ КАК БЗ_ТЕ
	                    |ГДЕ
	                    |	БЗ_ТЕ.Подразделение = &Подразделение
	                    |	И БЗ_ТЕ.Период = &ТЕПериод");
	Запрос.Параметры.Вставить("Подразделение",Подразделение);
	Запрос.Параметры.Вставить("ТЕПериод",ТЕПериод);
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Если Выборка.Следующий() Тогда
		ТЕНомер=Выборка.Номер;
		Если ТЕНомер=Неопределено Тогда
			ТЕНомер=0;
		КонецЕсли;
	КонецЕсли;
	ТЕДата=ТекущаяДата();
	Для А=1 По Количество Цикл
		ТЕНомер=ТЕНомер+1;
		ТЕ=Справочники.БЗ_ТЕ.СоздатьЭлемент();	
		ТЕ.Подразделение=Подразделение;
		ТЕ.Период=ТЕПериод;
		ТЕ.ТипТЕ=ТипТЕ;
		ТЕ.Номер=ТЕНомер;	
		ТЕ.ДатаСоздания=ТЕДата;
		ТЕ.Наименование="" + ТипТЕ.Серия+Прав(Формат(ТЕПериод,"ЧГ="),1)+" "+Формат(ТЕНомер,"ЧЦ=6; ЧВН=; ЧГ=3,0")+" "+ТипТЕ.Префикс;
		ТЕ.Записать();
		МассивТЕ.Добавить(ТЕ.Ссылка);
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	Возврат МассивТЕ;
КонецФункции

Функция ПолучитьДанныеТЕ(ТЕ) Экспорт
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	БЗ_ТЕ_НаУчастке.ТЕ КАК ТЕ,
	                    |	БЗ_ТЕ_НаУчастке.Участок КАК Участок,
	                    |	БЗ_ТЕ_НаУчастке.Статус КАК Статус,
	                    |	БЗ_ТЕ_НаУчастке.Операция КАК Операция,
	                    |	БЗ_ТЕ_НаУчастке.ОперацияСледующая КАК ОперацияСледующая,
	                    |	БЗ_ТЕ_НаУчастке.ЗакрылТЕ КАК ЗакрылТЕ,
	                    |	БЗ_ТЕ_НаУчастке.ОткрылТЕ КАК ОткрылТЕ,
	                    |	БЗ_ТЕ_НаУчастке.РабочееМесто КАК РабочееМесто,
	                    |	ЕСТЬNULL(БЗ_ТЕ_НаУчастке.РабочееМесто.ЭтоБуфер, ЛОЖЬ) КАК ЭтоБуфер
	                    |ИЗ
	                    |	РегистрСведений.БЗ_ТЕ_НаУчастке КАК БЗ_ТЕ_НаУчастке
	                    |ГДЕ
	                    |	БЗ_ТЕ_НаУчастке.ТЕ = &ТЕ");
	Запрос.УстановитьПараметр("ТЕ",ТЕ);
	Выборка=Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	Если Выборка.Количество()=0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат Выборка[0];
	КонецЕсли;
КонецФункции


Функция ПолучитьОстаткиТЕ(ТЕ,ДНоменклатура=Неопределено,ДХарактеристикаНоменклатуры=Неопределено, РежимПодробно = Неопределено) Экспорт
	РежимыПодробно = ПолучитьОстаткиТЕ_ПолучитьРежимыПодробно();
	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(ДНоменклатура) Тогда
		Если РежимПодробно = Истина ИЛИ РежимПодробно = РежимыПодробно.Свернуто Тогда
			ФильтрПоИзделиям="ОстаткиТЕ.Номенклатура=&ДНоменклатура ";
		Иначе
			ФильтрПоИзделиям="ОстаткиТЕ.Номенклатура=&ДНоменклатура И ОстаткиТЕ.ХарактеристикаНоменклатуры=&ДХарактеристикаНоменклатуры";
			Запрос.УстановитьПараметр("ДХарактеристикаНоменклатуры",ДХарактеристикаНоменклатуры);
		КонецЕсли;
		Запрос.УстановитьПараметр("ДНоменклатура",ДНоменклатура);
	Иначе
		ФильтрПоИзделиям="ИСТИНА";
	КонецЕсли;
	Если РежимПодробно = Неопределено или РежимПодробно = Ложь ИЛИ РежимПодробно = РежимыПодробно.СвернутоПоЗНП Тогда
		ЗапросТекст = 
		"ВЫБРАТЬ
		|	БЗ_ОстаткиНаУчастках.Номенклатура КАК Номенклатура,
		|	БЗ_ОстаткиНаУчастках.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	БЗ_ОстаткиНаУчастках.КоличествоОстаток КАК Количество,
		|	БЗ_ОстаткиНаУчастках.Операция КАК Операция,
		|	БЗ_ОстаткиНаУчастках.КлючИзделия КАК КлючИзделия
		|ПОМЕСТИТЬ ОстаткиТЕ
		|ИЗ
		|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(
		|			,
		|			ТЕ = &ТЕ
		|				И Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_ОстаткиНаУчастках
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
		|	-БЗ_ТСД_ТехнологическаяОперация.Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
		|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
		|	БЗ_ТСД_ТехнологическаяОперация.Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
		|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТЕ.Номенклатура КАК Номенклатура,
		|	ОстаткиТЕ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ОстаткиТЕ.Операция КАК Операция,
		|	СУММА(ОстаткиТЕ.Количество) КАК Количество,
		|	МАКСИМУМ(БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство) КАК ЗаказНаПроизводство,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство) КАК ЗаказНаПроизводствоКоличество
		|ПОМЕСТИТЬ ИтоговыеДанные
		|ИЗ
		|	ОстаткиТЕ КАК ОстаткиТЕ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
		|		ПО ОстаткиТЕ.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
		|ГДЕ
		|	&ФильтрПоИзделиям
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТЕ.Номенклатура,
		|	ОстаткиТЕ.ХарактеристикаНоменклатуры,
		|	ОстаткиТЕ.Операция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
		|	ИтоговыеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ИтоговыеДанные.Номенклатура.Наименование КАК ННоменклатура,
		|	ЕСТЬNULL(ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование, """") КАК НХарактеристикаНоменклатуры,
		|	ИтоговыеДанные.Операция КАК Операция,
		|	ИтоговыеДанные.Количество КАК Количество,
		|	ИтоговыеДанные.Количество КАК Остаток,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ИтоговыеДанные.ЗаказНаПроизводствоКоличество, 0) = 0
		|				ИЛИ НЕ ИтоговыеДанные.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
		|			ТОГДА ""---------""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ИтоговыеДанные.ЗаказНаПроизводствоКоличество, 0) = 1
		|					ТОГДА ИтоговыеДанные.ЗаказНаПроизводство.Номер
		|				ИНАЧЕ ""НЕСКОЛЬКО""
		|			КОНЕЦ
		|	КОНЕЦ КАК НЗаказНаПроизводство,
		|	ИтоговыеДанные.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	ИтоговыеДанные КАК ИтоговыеДанные
		|ГДЕ
		|	ИтоговыеДанные.Количество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИтоговыеДанные.Номенклатура.Наименование,
		|	ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование";
		
	ИначеЕсли РежимПодробно = Истина ИЛИ РежимПодробно = РежимыПодробно.Свернуто Тогда   // Без цвета и характеристик
		ЗапросТекст = 
		"ВЫБРАТЬ
		|	БЗ_ОстаткиНаУчастках.Номенклатура КАК Номенклатура,
		|	БЗ_ОстаткиНаУчастках.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	БЗ_ОстаткиНаУчастках.КоличествоОстаток КАК Количество,
		|	БЗ_ОстаткиНаУчастках.Операция КАК Операция,
		|	БЗ_ОстаткиНаУчастках.КлючИзделия КАК КлючИзделия
		|ПОМЕСТИТЬ ОстаткиТЕ
		|ИЗ
		|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(
		|			,
		|			ТЕ = &ТЕ
		|				И Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_ОстаткиНаУчастках
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
		|	-БЗ_ТСД_ТехнологическаяОперация.Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
		|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
		|	БЗ_ТСД_ТехнологическаяОперация.Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
		|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТЕ.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ОстаткиТЕ.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
		|	ОстаткиТЕ.Операция КАК Операция,
		|	СУММА(ОстаткиТЕ.Количество) КАК Количество,
		|	МАКСИМУМ(БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство) КАК ЗаказНаПроизводство,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство) КАК ЗаказНаПроизводствоКоличество,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОстаткиТЕ.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыКоличество
		|ПОМЕСТИТЬ ИтоговыеДанные
		|ИЗ
		|	ОстаткиТЕ КАК ОстаткиТЕ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
		|		ПО ОстаткиТЕ.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
		|ГДЕ
		|	&ФильтрПоИзделиям
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТЕ.Номенклатура,
		|	ОстаткиТЕ.Операция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ИтоговыеДанные.ХарактеристикаНоменклатурыКоличество > 1
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ ИтоговыеДанные.ХарактеристикаНоменклатуры
		|	КОНЕЦ КАК ХарактеристикаНоменклатуры,
		|	ИтоговыеДанные.Номенклатура.Наименование КАК ННоменклатура,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ИтоговыеДанные.ХарактеристикаНоменклатурыКоличество, 0) = 0
		|				ИЛИ НЕ ИтоговыеДанные.ХарактеристикаНоменклатуры ССЫЛКА Справочник.ХарактеристикиНоменклатуры
		|			ТОГДА ""---------""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ИтоговыеДанные.ХарактеристикаНоменклатурыКоличество, 0) = 1
		|					ТОГДА ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование
		|				ИНАЧЕ ""НЕСКОЛЬКО""
		|			КОНЕЦ
		|	КОНЕЦ КАК НХарактеристикаНоменклатуры,
		|	ИтоговыеДанные.Операция КАК Операция,
		|	ИтоговыеДанные.Количество КАК Количество,
		|	ИтоговыеДанные.Количество КАК Остаток,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ИтоговыеДанные.ЗаказНаПроизводствоКоличество, 0) = 0
		|				ИЛИ НЕ ИтоговыеДанные.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
		|			ТОГДА ""---------""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ИтоговыеДанные.ЗаказНаПроизводствоКоличество, 0) = 1
		|					ТОГДА ИтоговыеДанные.ЗаказНаПроизводство.Номер
		|				ИНАЧЕ ""НЕСКОЛЬКО""
		|			КОНЕЦ
		|	КОНЕЦ КАК НЗаказНаПроизводство,
		|	ИтоговыеДанные.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	ИтоговыеДанные КАК ИтоговыеДанные
		|ГДЕ
		|	ИтоговыеДанные.Количество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИтоговыеДанные.Номенклатура.Наименование,
		|	ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование";
	Иначе//Если  РежимПодробно = РежимыПодробно.Подробно Тогда
		ЗапросТекст = 
		"ВЫБРАТЬ
		|	БЗ_ОстаткиНаУчастках.Номенклатура КАК Номенклатура,
		|	БЗ_ОстаткиНаУчастках.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	БЗ_ОстаткиНаУчастках.КоличествоОстаток КАК Количество,
		|	БЗ_ОстаткиНаУчастках.Операция КАК Операция,
		|	БЗ_ОстаткиНаУчастках.КлючИзделия КАК КлючИзделия
		|ПОМЕСТИТЬ ОстаткиТЕ
		|ИЗ
		|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(
		|			,
		|			ТЕ = &ТЕ
		|				И Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_ОстаткиНаУчастках
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
		|	-БЗ_ТСД_ТехнологическаяОперация.Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
		|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
		|	БЗ_ТСД_ТехнологическаяОперация.Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
		|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТЕ.Номенклатура КАК Номенклатура,
		|	ОстаткиТЕ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ОстаткиТЕ.Операция КАК Операция,
		|	СУММА(ОстаткиТЕ.Количество) КАК Количество,
		|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ПОМЕСТИТЬ ИтоговыеДанные
		|ИЗ
		|	ОстаткиТЕ КАК ОстаткиТЕ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
		|		ПО ОстаткиТЕ.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
		|ГДЕ
		|	&ФильтрПоИзделиям
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиТЕ.Номенклатура,
		|	ОстаткиТЕ.ХарактеристикаНоменклатуры,
		|	ОстаткиТЕ.Операция,
		|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
		|	ИтоговыеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ИтоговыеДанные.Номенклатура.Наименование КАК ННоменклатура,
		|	ЕСТЬNULL(ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование, """") КАК НХарактеристикаНоменклатуры,
		|	ИтоговыеДанные.Операция КАК Операция,
		|	ИтоговыеДанные.Количество КАК Количество,
		|	ИтоговыеДанные.Количество КАК Остаток,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ИтоговыеДанные.ЗаказНаПроизводство, 0) = 0
		|				ИЛИ НЕ ИтоговыеДанные.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
		|				ИЛИ ИтоговыеДанные.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|			ТОГДА ""---------""
		|		ИНАЧЕ ИтоговыеДанные.ЗаказНаПроизводство.Номер
		|	КОНЕЦ КАК НЗаказНаПроизводство,
		|	ИтоговыеДанные.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	ИтоговыеДанные КАК ИтоговыеДанные
		|ГДЕ
		|	ИтоговыеДанные.Количество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИтоговыеДанные.Номенклатура.Наименование,
		|	ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование";
		
	КонецЕсли;	
	Запрос.УстановитьПараметр("ТЕ",ТЕ);
	ЗапросТекст = СтрЗаменить(ЗапросТекст,"&ФильтрПоИзделиям", ФильтрПоИзделиям);
	Запрос.Текст = ЗапросТекст;
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
КонецФункции

Функция ПолучитьОстатки_ДляДвижений(НаборФильтров, РежимПодробно = Неопределено) Экспорт
	РежимыПодробно = ПолучитьОстаткиТЕ_ПолучитьРежимыПодробно();
	ВозможныеФильтры = Новый Структура;
	ВозможныеФильтры.Вставить("Номенклатура","ИСТИНА");
	ВозможныеФильтры.Вставить("ДанныеНоменклатура","ИСТИНА");
	ВозможныеФильтры.Вставить("ТЕ","ИСТИНА");
	ВозможныеФильтры.Вставить("РабочееМесто","ИСТИНА");
	ВозможныеФильтры.Вставить("Операция","ИСТИНА");
	ВозможныеФильтры.Вставить("Участок","ИСТИНА");
	ВозможныеФильтры.Вставить("КлючСхемы","ИСТИНА");
	ВозможныеФильтры.Вставить("КлючИзделия","ИСТИНА");
	ВозможныеФильтры.Вставить("ЗаказНаПроизводство","ИСТИНА");
	ВозможныеФильтры.Вставить("Остаток","Остаток > 0");
	ВозможныеФильтры.Вставить("ТипТЕ","ИСТИНА");
	ВозможныеФильтры.Вставить("СтатусОстатков",Перечисления.БЗ_СтатусыОстатковНаУчастке.Завершен);
	ВозможныеФильтры.Вставить("ТипДвиженияТСД",Справочники.БЗ_ТипыДвижений_ТСД.Завершен);
	
	Запрос = Новый Запрос;
	Для Каждого ТекФильтр из ВозможныеФильтры Цикл 
		Если ТекФильтр.Ключ = "СтатусОстатков" Тогда 
			Запрос.УстановитьПараметр("СтатусОстатков",ТекФильтр.Значение);
		ИначеЕсли ТекФильтр.Ключ = "ТипДвиженияТСД" Тогда 
			Запрос.УстановитьПараметр("ТипДвиженияТСД",ТекФильтр.Значение);
		КонецЕсли;		
		Если НаборФильтров.Свойство(ТекФильтр.Ключ) Тогда
			Если ТекФильтр.Ключ = "Номенклатура" Тогда //Тут еще характеристику цепляем 
				Если РежимПодробно = Истина Или РежимПодробно = РежимыПодробно.Свернуто Тогда   //Проверка на булево ававизм - НеИспользоватьХарактеристику
					ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"Номенклатура=&ДНоменклатура");
					ВозможныеФильтры.Вставить("Данные"+ТекФильтр.Ключ,"Данные.Номенклатура=&ДНоменклатура");
					Запрос.УстановитьПараметр("ДНоменклатура",НаборФильтров.Номенклатура);
				Иначе
					ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"Номенклатура=&ДНоменклатура И ХарактеристикаНоменклатуры=&ДХарактеристикаНоменклатуры");
					ВозможныеФильтры.Вставить("Данные"+ТекФильтр.Ключ,"Данные.Номенклатура=&ДНоменклатура И Данные.ХарактеристикаНоменклатуры=&ДХарактеристикаНоменклатуры");
					Запрос.УстановитьПараметр("ДНоменклатура",НаборФильтров.Номенклатура);
					Запрос.УстановитьПараметр("ДХарактеристикаНоменклатуры",
						?(НаборФильтров.Свойство("ХарактеристикаНоменклатуры"), НаборФильтров.ХарактеристикаНоменклатуры,
																Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));
				КонецЕсли;									
			ИначеЕсли ТекФильтр.Ключ = "СтатусОстатков" Тогда 
				Запрос.УстановитьПараметр("СтатусОстатков",НаборФильтров[ТекФильтр.Ключ]);
			ИначеЕсли ТекФильтр.Ключ = "ТипДвиженияТСД" Тогда 
				Запрос.УстановитьПараметр("ТипДвиженияТСД",НаборФильтров[ТекФильтр.Ключ]);															
			Иначе
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,""+ТекФильтр.Ключ+"=&Д"+ТекФильтр.Ключ);
				Запрос.УстановитьПараметр("Д"+ТекФильтр.Ключ,НаборФильтров[ТекФильтр.Ключ]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗапросТекст = 
	"ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчастках.КлючСхемы КАК КлючСхемы,
	|	БЗ_ОстаткиНаУчастках.КлючИзделия КАК КлючИзделия,
	|	БЗ_ОстаткиНаУчастках.Номенклатура КАК Номенклатура,
	|	БЗ_ОстаткиНаУчастках.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	БЗ_ОстаткиНаУчастках.КоличествоОстаток КАК Остаток,
	|	БЗ_ОстаткиНаУчастках.Операция КАК Операция,
	|	БЗ_ОстаткиНаУчастках.Участок КАК Участок,
	|	БЗ_ОстаткиНаУчастках.ТЕ КАК ТЕ,
	|	БЗ_ОстаткиНаУчастках.РабочееМесто КАК РабочееМесто
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(
	|			,
	|			Статус = &СтатусОстатков
	|				И &ФильтрПоКлючИзделия
	|				И &ФильтрПоКлючСхемы
	|				И &ФильтрПоТЕ
	|				И &ФильтрПоУчасток
	|				И &ФильтрПоРабочееМесто
	|				И &ФильтрПоНоменклатура) КАК БЗ_ОстаткиНаУчастках
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_ОстаткиНаУчастках.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.КлючВзять,
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить,
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	-БЗ_ТСД_ТехнологическаяОперация.Количество,
	|	БЗ_ТСД_ТехнологическаяОперация.Операция,
	|	БЗ_ТСД_ТехнологическаяОперация.Участок,
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ,
	|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТипДвиженияТСД = &ТипДвиженияТСД
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
	|	И &ФильтрПоТЕ
	|	И &ФильтрПоРабочееМесто
	|	И &ФильтрПоНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.КлючВзять,
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить,
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	БЗ_ТСД_ТехнологическаяОперация.Количество,
	|	БЗ_ТСД_ТехнологическаяОперация.Операция,
	|	БЗ_ТСД_ТехнологическаяОперация.Участок,
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ,
	|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТипДвиженияТСД = &ТипДвиженияТСД
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
	|	И &ФильтрПоТЕ
	|	И &ФильтрПоРабочееМесто
	|	И &ФильтрПоНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_ПартииПроизводства_Параметры.МаршрутныйЛист КАК ДокументПлан,
	|	Данные.КлючСхемы КАК КлючСхемы,
	|	Данные.КлючИзделия КАК КлючИзделия,
	|	Данные.Номенклатура КАК Номенклатура,
	|	Данные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(Данные.Остаток) КАК Остаток,
	|	Данные.Операция КАК ОперацияОстаток,
	|	Данные.Участок КАК УчастокОстаток,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Данные.ТЕ КАК ТЕ,
	|	Данные.РабочееМесто КАК РабочееМесто,
	|	СУММА(Данные.Остаток) КАК Количество
	|ПОМЕСТИТЬ ПланФакт
	|ИЗ
	|	Данные КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО Данные.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|ГДЕ
	|	&ФильтрПоДанныеНоменклатура
	|	И &ФильтрПоОперация
	|	И &ФильтрПоЗаказНаПроизводство
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Номенклатура,
	|	Данные.ХарактеристикаНоменклатуры,
	|	Данные.КлючИзделия,
	|	Данные.КлючСхемы,
	|	Данные.Операция,
	|	Данные.Участок,
	|	БЗ_ПартииПроизводства_Параметры.МаршрутныйЛист,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	Данные.ТЕ,
	|	Данные.РабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланФакт.ДокументПлан КАК ДокументПлан,
	|	ПланФакт.КлючСхемы КАК КлючСхемы,
	|	ПланФакт.КлючИзделия КАК КлючИзделия,
	|	ПланФакт.Номенклатура КАК Номенклатура,
	|	ПланФакт.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПланФакт.Номенклатура.Наименование КАК ННоменклатура,
	|	ЕСТЬNULL(ПланФакт.ХарактеристикаНоменклатуры.Наименование, """") КАК НХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ПланФакт.Остаток) КАК Остаток,
	|	МАКСИМУМ(ПланФакт.Количество) КАК Количество,
	|	ПланФакт.УчастокОстаток КАК УчастокОстаток,
	|	ПланФакт.ОперацияОстаток КАК ОперацияОстаток,
	|	ЕСТЬNULL(БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)) КАК ОперацияСледующая,
	|	ЕСТЬNULL(БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.ОперацияСледующая, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)) КАК ОперацияСледующаяСледующая,
	|	ПланФакт.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПланФакт.ЗаказНаПроизводство, 0) = 0
	|				ИЛИ НЕ ПланФакт.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
	|				ИЛИ ПланФакт.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			ТОГДА ""---------""
	|		ИНАЧЕ ПланФакт.ЗаказНаПроизводство.Номер
	|	КОНЕЦ КАК НЗаказНаПроизводство,
	|	ПланФакт.ТЕ КАК ТЕ,
	|	ПланФакт.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	ПланФакт КАК ПланФакт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(
	|				,
	|				Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.План)
	|					ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_НезавершенноеПроизводство_ИзделияОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(
	|					,
	|					Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.План)
	|						ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий
	|			ПО БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия = БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.КлючИзделия
	|				И БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая = БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.Операция
	|		ПО ПланФакт.КлючИзделия = БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия
	|			И ПланФакт.ОперацияОстаток = БЗ_НезавершенноеПроизводство_ИзделияОстатки.Операция
	|ГДЕ
	|	&ФильтрПоОстаток
	|	И &ФильтрПоКлючСхемы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланФакт.ДокументПлан,
	|	ПланФакт.КлючСхемы,
	|	ПланФакт.КлючИзделия,
	|	ПланФакт.Номенклатура,
	|	ПланФакт.ХарактеристикаНоменклатуры,
	|	ПланФакт.ОперацияОстаток,
	|	ЕСТЬNULL(БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.ОперацияСледующая, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)),
	|	ПланФакт.Номенклатура.Наименование,
	|	ЕСТЬNULL(ПланФакт.ХарактеристикаНоменклатуры.Наименование, """"),
	|	ПланФакт.УчастокОстаток,
	|	ПланФакт.ЗаказНаПроизводство,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПланФакт.ЗаказНаПроизводство, 0) = 0
	|				ИЛИ НЕ ПланФакт.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
	|				ИЛИ ПланФакт.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			ТОГДА ""---------""
	|		ИНАЧЕ ПланФакт.ЗаказНаПроизводство.Номер
	|	КОНЕЦ,
	|	ПланФакт.ТЕ,
	|	ПланФакт.РабочееМесто,
	|	ЕСТЬNULL(БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ННоменклатура,
	|	НХарактеристикаНоменклатуры,
	|	НЗаказНаПроизводство";
	
	Для Каждого ТекФильтр из ВозможныеФильтры Цикл 
		ЗапросТекст = СтрЗаменить(ЗапросТекст,"&ФильтрПо"+ТекФильтр.Ключ, ТекФильтр.Значение);
	КонецЦикла;
	Запрос.Текст = ЗапросТекст;
	БЗ_TSDAPI.ОтладкаЗапроса(Запрос, "ПолучитьОстатки_ДляДвижений");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьКлючиИзделийТЕ(ТЕ) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчастках.КлючИзделия
	|ПОМЕСТИТЬ ОстаткиТЕ
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки КАК БЗ_ОстаткиНаУчастках
	|ГДЕ
	|	БЗ_ОстаткиНаУчастках.ТЕ = &ТЕ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТЕ.КлючИзделия
	|ИЗ
	|	ОстаткиТЕ КАК ОстаткиТЕ
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТЕ.КлючИзделия";
	Запрос.УстановитьПараметр("ТЕ",ТЕ);
	ТБ=Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	Возврат ТБ.ВыгрузитьКолонку("КлючИзделия");
КонецФункции

Функция ПолучитьНомерСтрокиТО(РМ) Экспорт
	Запрос=Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ВводДанных.НСтроки) + 1, 1) КАК НСтроки
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК ВводДанных
	|ГДЕ
	|	ВводДанных.РабочееМесто_Исполнитель = &РабочееМесто");
	Запрос.Параметры.Вставить("РабочееМесто",РМ);
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);	
	Выборка.Следующий();
	Возврат Выборка.НСтроки;
КонецФункции

Процедура УстановитьОперацииТЕ(ТЕ,Операция,ОперацияСледующая) Экспорт
	НаборЗаписей=РегистрыСведений.БЗ_ТЕ_НаУчастке.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТЕ.Установить(ТЕ);
	Запись=НаборЗаписей.Добавить();
	Запись.ТЕ=ТЕ;
	Запись.Участок=БЗ_TSDRU.Сессия().ПараметрыСессии.Участок;
	Запись.Операция=Операция;
	Запись.ОперацияСледующая=ОперацияСледующая;
	Запись.РабочееМесто=БЗ_TSDRU.Сессия().ПараметрыСессии.РабочееМесто;
	Запись.Статус=Перечисления.БЗ_ТЕ_СтатусыНаУчастке.ВРаботе;
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

Процедура УстановитьСтатусТЕ(ТЕ,ТЕДанные,Статус, РабочееМесто=Неопределено) Экспорт	
	НаборЗаписей=РегистрыСведений.БЗ_ТЕ_НаУчастке.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТЕ.Установить(ТЕ);
	Запись=НаборЗаписей.Добавить();
	Запись.ТЕ=ТЕ;
	Запись.Участок=БЗ_TSDRU.Сессия().ПараметрыСессии.Участок;	
	Запись.Операция=ТЕДанные.Операция;
	Запись.ОперацияСледующая=ТЕДанные.ОперацияСледующая;
	Запись.Статус=Статус;
	Если Статус = Перечисления.БЗ_ТЕ_СтатусыНаУчастке.ВРаботе
		ИЛИ Статус = Перечисления.БЗ_ТЕ_СтатусыНаУчастке.Открыта Тогда
		Если РабочееМесто = Неопределено Тогда
			Запись.РабочееМесто = БЗ_TSDRU.Сессия().ПараметрыСессии.РабочееМесто;
		Иначе
			Запись.РабочееМесто = РабочееМесто;
		КонецЕсли;
	Иначе
		Запись.РабочееМесто = Справочники.БЗ_РабочиеМеста.ПустаяСсылка();
	КонецЕсли;
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

Процедура СверткаДвижений(КлючиИзделий=Неопределено) Экспорт
	Если ЗначениеЗаполнено(КлючиИзделий) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель КАК РабочееМесто_Исполнитель,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки КАК НСтроки
		|ПОМЕСТИТЬ Движения
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить В(&КлючиИзделий)
		|
		|СГРУППИРОВАТЬ ПО
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель КАК РабочееМесто_Исполнитель,
		|	БЗ_ТСД_ТехнологическаяОперация.ВидДействия КАК ВидДействия,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки КАК НСтроки,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючВзять КАК КлючВзять,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить КАК КлючПоложить,
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура КАК Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ КАК ТЕ,
		|	БЗ_ТСД_ТехнологическаяОперация.Участок КАК Участок,
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто КАК РабочееМесто,
		|	БЗ_ТСД_ТехнологическаяОперация.Количество КАК Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Сотрудник КАК Сотрудник,
		|	БЗ_ТСД_ТехнологическаяОперация.ВремяОперации КАК ВремяОперации,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция КАК Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.ТипДвиженияТСД КАК ТипДвиженияТСД,
		|	БЗ_ПартииПроизводства_Параметры.Организация КАК Организация,
		|	БЗ_ПартииПроизводства_Параметры.Подразделение КАК Подразделение,
		|	БЗ_ТСД_ТехнологическаяОперация.ДокументПлан КАК ДокументПлан
		|ИЗ
		|	Движения КАК Движения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
		|			ПО БЗ_ТСД_ТехнологическаяОперация.КлючПоложить = БЗ_ПартииПроизводства_Параметры.КлючПартии
		|		ПО Движения.РабочееМесто_Исполнитель = БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель
		|			И Движения.НСтроки = БЗ_ТСД_ТехнологическаяОперация.НСтроки
		|
		|УПОРЯДОЧИТЬ ПО
		|	БЗ_ТСД_ТехнологическаяОперация.ВидДействия,
		|	БЗ_ТСД_ТехнологическаяОперация.ВремяОперации,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки";
		Запрос.УстановитьПараметр("КлючиИзделий", КлючиИзделий);
		Данные = Запрос.Выполнить().Выгрузить();
		Если Данные.Количество()=0 Тогда
			Возврат;
		КонецЕсли;
	Иначе		
		Запрос = Новый Запрос;	
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 50
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель КАК РабочееМесто_Исполнитель,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки КАК НСтроки
		|ПОМЕСТИТЬ Движения
		|ИЗ
		|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|ГДЕ
		|	БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
		|	И БЗ_ТСД_ТехнологическаяОперация.ВремяОперации < &ВремяОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель КАК РабочееМесто_Исполнитель,
		|	БЗ_ТСД_ТехнологическаяОперация.ВидДействия КАК ВидДействия,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки КАК НСтроки,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючВзять КАК КлючВзять,
		|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить КАК КлючПоложить,
		|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура КАК Номенклатура,
		|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	БЗ_ТСД_ТехнологическаяОперация.ТЕ КАК ТЕ,
		|	БЗ_ТСД_ТехнологическаяОперация.Участок КАК Участок,
		|	БЗ_ТСД_ТехнологическаяОперация.РабочееМесто КАК РабочееМесто,
		|	БЗ_ТСД_ТехнологическаяОперация.Количество КАК Количество,
		|	БЗ_ТСД_ТехнологическаяОперация.Сотрудник КАК Сотрудник,
		|	БЗ_ТСД_ТехнологическаяОперация.ВремяОперации КАК ВремяОперации,
		|	БЗ_ТСД_ТехнологическаяОперация.Операция КАК Операция,
		|	БЗ_ТСД_ТехнологическаяОперация.ТипДвиженияТСД КАК ТипДвиженияТСД,
		|	БЗ_ПартииПроизводства_Параметры.Организация КАК Организация,
		|	БЗ_ПартииПроизводства_Параметры.Подразделение КАК Подразделение,
		|	БЗ_ТСД_ТехнологическаяОперация.ДокументПлан КАК ДокументПлан
		|ИЗ
		|	Движения КАК Движения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
		|		ПО Движения.РабочееМесто_Исполнитель = БЗ_ТСД_ТехнологическаяОперация.РабочееМесто_Исполнитель
		|			И Движения.НСтроки = БЗ_ТСД_ТехнологическаяОперация.НСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
		|		ПО (БЗ_ТСД_ТехнологическаяОперация.КлючПоложить = БЗ_ПартииПроизводства_Параметры.КлючПартии)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидДействия,
		|	ВремяОперации,
		|	БЗ_ТСД_ТехнологическаяОперация.НСтроки";
		Запрос.УстановитьПараметр("ВремяОперации", ТекущаяДата()-600);
		Данные = Запрос.Выполнить().Выгрузить();
		//Если Данные.Количество()<10 Тогда
		//	Возврат;
		//КонецЕсли;
		Если Данные.Количество()=0 Тогда
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	// Создание технологической операции
	Если КлючиИзделий=Неопределено Тогда // Открывать транзакцию только для регламентной операции
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БЗ_ТСД_ТехнологическаяОперация");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();	
	КонецЕсли;
	ДокТО = Документы.БЗ_ТехнологическаяОперация.СоздатьДокумент();
	ДокТО.Организация = Данные[0].Организация;
	ДокТО.Подразделение = Данные[0].Подразделение;
	ДокТО.Дата = ТекущаяДата();
	//ДокТО.УстановитьНовыйНомер(Константы.ПрефиксНомеровДокументов.Получить());
	ДокТО.УстановитьНовыйНомер();
	ДокТО.ВидОперации = Перечисления.БЗ_ВидТехнологическойОперации.Обработка;
	ДокТО.Статус = Перечисления.БЗ_СтатусыТехнологическихОпераций.Завершен;
	Для Каждого Выборка Из Данные Цикл
		Если Выборка.ВидДействия=Перечисления.БЗ_ТСД_ВидыДействий.Взять Тогда
			Строка=ДокТО.ТСД_Взять.Добавить();						
		ИначеЕсли Выборка.ВидДействия=Перечисления.БЗ_ТСД_ВидыДействий.Положить Тогда
			Строка=ДокТО.ТСД_Положить.Добавить();
		Иначе
			Продолжить;
		КонецЕсли;
		Строка.Кратность=1;
		ЗаполнитьЗначенияСвойств(Строка,Выборка);
	КонецЦикла;				
	ДокТО.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);	
	// Удаляем строки из регистра
	ДанныеСтроки=Данные.Скопировать(,"РабочееМесто_Исполнитель,НСтроки");
	ДанныеСтроки.Свернуть("РабочееМесто_Исполнитель,НСтроки");
	Для Каждого Выборка Из ДанныеСтроки Цикл
		НаборЗаписей=РегистрыСведений.БЗ_ТСД_ТехнологическаяОперация.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.РабочееМесто_Исполнитель.Установить(Выборка.РабочееМесто_Исполнитель);
		НаборЗаписей.Отбор.НСтроки.Установить(Выборка.НСтроки);
		НаборЗаписей.Записать(Истина);
	КонецЦикла;	
	Если КлючиИзделий=Неопределено Тогда // Закрывать транзакцию только для регламентной операции
		ЗафиксироватьТранзакцию();	
	КонецЕсли;
КонецПроцедуры

Процедура РегламентныйВызов() Экспорт
	Попытка
		//СверткаДвижений();
		БЗ_MES_Обмен.ПроверкаРаботыОбмена();
		ЗаписатьПараметр(,"СверткаДвижений_99_Окончание", ТекущаяДата());
	Исключение      
	КонецПопытки;
	Попытка
		ЗаписатьПараметр(,"РасчетПорядка_00_Запуск", ТекущаяДата());
		РасчитатьПорядок();
		ЗаписатьПараметр(,"РасчетПорядка_99_Окончание", ТекущаяДата());
	Исключение      
	КонецПопытки;
	
	Попытка
		ЗначениеЗапуск = 0;
		ЗначениеОкончание = 0;
		Если НЕ ПрочитатьПараметр(, "КорректировкаОстатков_00_Запуск", ЗначениеЗапуск) 
			ИЛИ НЕ ПрочитатьПараметр(, "КорректировкаОстатков_99_Окончание", ЗначениеОкончание) 
			Тогда
				ЗаписатьПараметр(,"КорректировкаОстатков_00_Запуск", ТекущаяДата());
				СоздатьКорректировкуОстатков();
				ЗаписатьПараметр(,"КорректировкаОстатков_99_Окончание", ТекущаяДата());
			Иначе
				Если 
					(ЗначениеЗапуск<ЗначениеОкончание            // Не запускался, или прошлый запуск успешен
					) Тогда 
					ЗаписатьПараметр(,"КорректировкаОстатков_00_Запуск", ТекущаяДата());
					СоздатьКорректировкуОстатков();
					ЗаписатьПараметр(,"КорректировкаОстатков_99_Окончание", ТекущаяДата());
				ИначеЕсли (ТекущаяДата()- ЗначениеЗапуск)>3600 Тогда // Если прошлый запуск не удачен, 
					Сообщение="Повторная попытка создания корректировок."+Символы.ПС+"Последний запуск: "+ЗначениеЗапуск+"."+Символы.ПС+"Последнее завершение: "+ЗначениеОкончание;
					//БЗ_Обмен_Производство.Viber_Alarm(Сообщение);
					ЗаписатьПараметр(,"КорректировкаОстатков_00_Запуск", ТекущаяДата());
					СоздатьКорректировкуОстатков();
					ЗаписатьПараметр(,"КорректировкаОстатков_99_Окончание", ТекущаяДата());
				Иначе
					Попытка    
						ViberОповещение = 0;
						Если НЕ ПрочитатьПараметр(, "КорректировкаОстатков_00_ViberОповещение", ViberОповещение) Тогда
							ViberОповещение = Дата(1,1,1);
						КонецЕсли;

						Если ViberОповещение<ТекущаяДата()-3600 Тогда
							ЗаписатьПараметр(,"КорректировкаОстатков_00_ViberОповещение", ТекущаяДата());
							ОтправитьОповещение=Истина;
						КонецЕсли;
					Исключение
					КонецПопытки;
					Если ОтправитьОповещение Тогда
						Сообщение="Остановилось создание корректировок !"+Символы.ПС+"Последний запуск: "+ЗначениеЗапуск+"."+Символы.ПС+"Последнее завершение: "+ЗначениеОкончание;
						//БЗ_Обмен_Производство.Viber_Alarm(Сообщение);
					КонецЕсли;
				КонецЕсли;
		КонецЕсли;
	Исключение      
	КонецПопытки;
КонецПроцедуры

Процедура СоздатьКорректировкуОстатков()   Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	ТоварыВПроизводствеОстатки.Номенклатура,
	|	ТоварыВПроизводствеОстатки.ХарактеристикаНоменклатуры,
	|	ТоварыВПроизводствеОстатки.ДокументОснование,
	|	СУММА(ТоварыВПроизводствеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиЗаказов
	|ИЗ
	|	РегистрНакопления.ТоварыВПроизводстве.Остатки(, Подразделение = &Подразделение) КАК ТоварыВПроизводствеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВПроизводствеОстатки.ХарактеристикаНоменклатуры,
	|	ТоварыВПроизводствеОстатки.ДокументОснование,
	|	ТоварыВПроизводствеОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Операция,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Статус,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Участок,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ВариантНаладки,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияНомер,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.УчастокСледующий,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Номенклатура,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ХарактеристикаНоменклатуры,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.КоличествоОстаток,
	|	БЗ_ПартииПроизводства_Параметры.КлючПартии,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.МаршрутныйЛист
	|ПОМЕСТИТЬ ЗаказыВПроизводстве
	|ИЗ
	|	РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(
	|			,
	|			Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.План)
	|				ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.ЗАвершен)
	|					И Участок.Подразделение = &Подразделение) КАК БЗ_НезавершенноеПроизводство_ИзделияОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия,
	|	БЗ_ОстаткиНаУчасткахОстатки.Операция,
	|	БЗ_ОстаткиНаУчасткахОстатки.Номенклатура,
	|	БЗ_ОстаткиНаУчасткахОстатки.ХарактеристикаНоменклатуры,
	|	СУММА(БЗ_ОстаткиНаУчасткахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(БЗ_ОстаткиНаУчасткахОстатки.РезервОстаток) КАК РезервОстаток,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство
	|ПОМЕСТИТЬ НедостачаБрак
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(
	|			,
	|			Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Недостача)
	|				ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Брак)) КАК БЗ_ОстаткиНаУчасткахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия,
	|	БЗ_ОстаткиНаУчасткахОстатки.Операция,
	|	БЗ_ОстаткиНаУчасткахОстатки.Номенклатура,
	|	БЗ_ОстаткиНаУчасткахОстатки.ХарактеристикаНоменклатуры,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыВПроизводстве.КлючИзделия,
	|	ЗаказыВПроизводстве.Операция,
	|	ЗаказыВПроизводстве.Статус,
	|	ЗаказыВПроизводстве.Участок,
	|	ЗаказыВПроизводстве.ВариантНаладки,
	|	ЗаказыВПроизводстве.ОперацияНомер,
	|	ЗаказыВПроизводстве.ОперацияСледующая,
	|	ЗаказыВПроизводстве.УчастокСледующий,
	|	ЗаказыВПроизводстве.Номенклатура,
	|	ЗаказыВПроизводстве.ХарактеристикаНоменклатуры,
	|	СУММА(ЗаказыВПроизводстве.КоличествоОстаток) КАК Остаток,
	|	ЗаказыВПроизводстве.КлючПартии,
	|	ЗаказыВПроизводстве.ЗаказНаПроизводство,
	|	ЗаказыВПроизводстве.МаршрутныйЛист
	|ПОМЕСТИТЬ ОстаткиВЦехе
	|ИЗ
	|	ЗаказыВПроизводстве КАК ЗаказыВПроизводстве
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыВПроизводстве.КлючИзделия,
	|	ЗаказыВПроизводстве.Операция,
	|	ЗаказыВПроизводстве.Статус,
	|	ЗаказыВПроизводстве.Участок,
	|	ЗаказыВПроизводстве.ВариантНаладки,
	|	ЗаказыВПроизводстве.ОперацияНомер,
	|	ЗаказыВПроизводстве.ОперацияСледующая,
	|	ЗаказыВПроизводстве.УчастокСледующий,
	|	ЗаказыВПроизводстве.Номенклатура,
	|	ЗаказыВПроизводстве.ХарактеристикаНоменклатуры,
	|	ЗаказыВПроизводстве.КлючПартии,
	|	ЗаказыВПроизводстве.ЗаказНаПроизводство,
	|	ЗаказыВПроизводстве.МаршрутныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЦехе.Номенклатура,
	|	ОстаткиВЦехе.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехе.ЗаказНаПроизводство,
	|	МАКСИМУМ(ОстаткиВЦехе.Остаток) КАК Остаток,
	|	ОстаткиВЦехе.КлючИзделия
	|ПОМЕСТИТЬ ОстаткиВЦехеСверткаПоОперациям
	|ИЗ
	|	ОстаткиВЦехе КАК ОстаткиВЦехе
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВЦехе.Номенклатура,
	|	ОстаткиВЦехе.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехе.ЗаказНаПроизводство,
	|	ОстаткиВЦехе.КлючИзделия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НедостачаБрак.Номенклатура,
	|	НедостачаБрак.ХарактеристикаНоменклатуры,
	|	НедостачаБрак.ЗаказНаПроизводство,
	|	МАКСИМУМ(-НедостачаБрак.КоличествоОстаток),
	|	НедостачаБрак.КлючИзделия
	|ИЗ
	|	НедостачаБрак КАК НедостачаБрак
	|
	|СГРУППИРОВАТЬ ПО
	|	НедостачаБрак.ХарактеристикаНоменклатуры,
	|	НедостачаБрак.КлючИзделия,
	|	НедостачаБрак.Номенклатура,
	|	НедостачаБрак.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЦехеСверткаПоОперациям.Номенклатура,
	|	ОстаткиВЦехеСверткаПоОперациям.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеСверткаПоОперациям.ЗаказНаПроизводство,
	|	СУММА(ОстаткиВЦехеСверткаПоОперациям.Остаток) КАК Остаток
	|ПОМЕСТИТЬ ОстаткиВЦехеСверткапоКлючу
	|ИЗ
	|	ОстаткиВЦехеСверткаПоОперациям КАК ОстаткиВЦехеСверткаПоОперациям
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВЦехеСверткаПоОперациям.ЗаказНаПроизводство,
	|	ОстаткиВЦехеСверткаПоОперациям.Номенклатура,
	|	ОстаткиВЦехеСверткаПоОперациям.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЦехеСверткапоКлючу.Номенклатура,
	|	ОстаткиВЦехеСверткапоКлючу.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеСверткапоКлючу.ЗаказНаПроизводство,
	|	СУММА(ОстаткиВЦехеСверткапоКлючу.Остаток) КАК Остаток,
	|	0 КАК ОстатокЗНП,
	|	СУММА(ОстаткиВЦехеСверткапоКлючу.Остаток) КАК ОстатокНЗПИ
	|ПОМЕСТИТЬ ОстаткиВЦехеНужноСписать
	|ИЗ
	|	ОстаткиВЦехеСверткапоКлючу КАК ОстаткиВЦехеСверткапоКлючу
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВЦехеСверткапоКлючу.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеСверткапоКлючу.ЗаказНаПроизводство,
	|	ОстаткиВЦехеСверткапоКлючу.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗаказов.Номенклатура,
	|	ОстаткиЗаказов.ХарактеристикаНоменклатуры,
	|	ОстаткиЗаказов.ДокументОснование,
	|	СУММА(-ОстаткиЗаказов.КоличествоОстаток),
	|	СУММА(ОстаткиЗаказов.КоличествоОстаток),
	|	СУММА(0)
	|ИЗ
	|	ОстаткиЗаказов КАК ОстаткиЗаказов
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиЗаказов.Номенклатура,
	|	ОстаткиЗаказов.ХарактеристикаНоменклатуры,
	|	ОстаткиЗаказов.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЦехеНужноСписать.Номенклатура,
	|	ОстаткиВЦехеНужноСписать.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеНужноСписать.ЗаказНаПроизводство,
	|	СУММА(ОстаткиВЦехеНужноСписать.Остаток) КАК Остаток,
	|	СУММА(ОстаткиВЦехеНужноСписать.ОстатокЗНП) КАК ОстатокЗНП,
	|	СУММА(ОстаткиВЦехеНужноСписать.ОстатокНЗПИ) КАК ОстатокНЗПИ
	|ПОМЕСТИТЬ ОстаткиВЦехеСписатьСводно
	|ИЗ
	|	ОстаткиВЦехеНужноСписать КАК ОстаткиВЦехеНужноСписать
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВЦехеНужноСписать.Номенклатура,
	|	ОстаткиВЦехеНужноСписать.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеНужноСписать.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЦехеСписатьСводно.Номенклатура,
	|	ОстаткиВЦехеСписатьСводно.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеСписатьСводно.ЗаказНаПроизводство,
	|	ОстаткиВЦехеСписатьСводно.Остаток,
	|	ОстаткиВЦехеСписатьСводно.ОстатокЗНП,
	|	ОстаткиВЦехеСписатьСводно.ОстатокНЗПИ
	|ПОМЕСТИТЬ ОстаткиВЦехеСписатьСводноОтбор
	|ИЗ
	|	ОстаткиВЦехеСписатьСводно КАК ОстаткиВЦехеСписатьСводно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия,
	|	БЗ_ОстаткиНаУчасткахОстатки.КлючСхемы,
	|	БЗ_ОстаткиНаУчасткахОстатки.Операция,
	|	БЗ_ОстаткиНаУчасткахОстатки.Статус,
	|	БЗ_ОстаткиНаУчасткахОстатки.Участок,
	|	БЗ_ОстаткиНаУчасткахОстатки.РабочееМесто,
	|	БЗ_ОстаткиНаУчасткахОстатки.ТЕ,
	|	БЗ_ОстаткиНаУчасткахОстатки.Номенклатура,
	|	БЗ_ОстаткиНаУчасткахОстатки.ХарактеристикаНоменклатуры,
	|	БЗ_ОстаткиНаУчасткахОстатки.КоличествоОстаток,
	|	БЗ_ОстаткиНаУчасткахОстатки.РезервОстаток,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.МаршрутныйЛист
	|ПОМЕСТИТЬ ОстаткиНаУчастках
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(, Статус <> ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Хранение)) КАК БЗ_ОстаткиНаУчасткахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаУчастках.РабочееМесто,
	|	ОстаткиНаУчастках.ТЕ,
	|	СУММА(ОстаткиНаУчастках.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиНаТЕРМ
	|ИЗ
	|	ОстаткиНаУчастках КАК ОстаткиНаУчастках
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНаУчастках.РабочееМесто,
	|	ОстаткиНаУчастках.ТЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаУчастках.РабочееМесто КАК РабочееМесто,
	|	ОстаткиНаУчастках.ТЕ КАК ТЕ,
	|	ОстаткиНаУчастках.Номенклатура КАК Номенклатура,
	|	ОстаткиНаУчастках.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиНаУчастках.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ЕСТЬNULL(ОстаткиВЦехеСписатьСводноОтбор.Остаток, 0) КАК Остаток,
	|	ОстаткиНаУчастках.КоличествоОстаток КАК Количество,
	|	ОстаткиНаТЕРМ.КоличествоОстаток КАК КоличествоТЕРМ,
	|	ЕСТЬNULL(ОстаткиВЦехеСписатьСводноОтбор.ОстатокЗНП, 0) КАК ОстатокЗНП,
	|	ОстаткиВЦехеСписатьСводноОтбор.ОстатокНЗПИ КАК ОстатокНЗПИ,
	|	ОстаткиНаУчастках.КлючИзделия КАК КлючИзделия,
	|	ОстаткиНаУчастках.КлючСхемы КАК КлючСхемы,
	|	ОстаткиНаУчастках.Операция КАК Операция,
	|	ОстаткиНаУчастках.Статус,
	|	ОстаткиНаУчастках.Участок,
	|	ОстаткиНаУчастках.РезервОстаток,
	|	1 КАК Кратность,
	|	ОстаткиНаУчастках.МаршрутныйЛист КАК ДокументПлан
	|ПОМЕСТИТЬ ОстаткиНаУчасткахСводная
	|ИЗ
	|	ОстаткиНаУчастках КАК ОстаткиНаУчастках
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиНаТЕРМ КАК ОстаткиНаТЕРМ
	|		ПО ОстаткиНаУчастках.ТЕ = ОстаткиНаТЕРМ.ТЕ
	|			И ОстаткиНаУчастках.РабочееМесто = ОстаткиНаТЕРМ.РабочееМесто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВЦехеСписатьСводноОтбор КАК ОстаткиВЦехеСписатьСводноОтбор
	|		ПО (ОстаткиВЦехеСписатьСводноОтбор.Номенклатура = ОстаткиНаУчастках.Номенклатура)
	|			И (ОстаткиВЦехеСписатьСводноОтбор.ХарактеристикаНоменклатуры = ОстаткиНаУчастках.ХарактеристикаНоменклатуры)
	|			И (ОстаткиВЦехеСписатьСводноОтбор.ЗаказНаПроизводство = ОстаткиНаУчастках.ЗаказНаПроизводство)
	|ГДЕ
	|	(ОстаткиВЦехеСписатьСводноОтбор.Остаток > 0
	|				И ОстаткиНаУчастках.КоличествоОстаток <= ОстаткиВЦехеСписатьСводноОтбор.Остаток
	|			ИЛИ ЕСТЬNULL(ОстаткиВЦехеСписатьСводноОтбор.ОстатокЗНП, 0) = 0
	|				И ОстаткиНаУчастках.МаршрутныйЛист.Дата < &ДатаСписания)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаУчасткахСводная.ТЕ,
	|	СУММА(ОстаткиНаУчасткахСводная.Количество) КАК Количество,
	|	МАКСИМУМ(ОстаткиНаУчасткахСводная.КоличествоТЕРМ) КАК КоличествоТЕРМ,
	|	ОстаткиНаУчасткахСводная.РабочееМесто
	|ПОМЕСТИТЬ РазрешенныеТЕРМ
	|ИЗ
	|	ОстаткиНаУчасткахСводная КАК ОстаткиНаУчасткахСводная
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНаУчасткахСводная.ТЕ,
	|	ОстаткиНаУчасткахСводная.РабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаУчасткахСводная.РабочееМесто,
	|	ОстаткиНаУчасткахСводная.ТЕ,
	|	ОстаткиНаУчасткахСводная.Номенклатура,
	|	ОстаткиНаУчасткахСводная.ХарактеристикаНоменклатуры,
	|	ОстаткиНаУчасткахСводная.ЗаказНаПроизводство,
	|	ОстаткиНаУчасткахСводная.Остаток,
	|	ОстаткиНаУчасткахСводная.Количество,
	|	ОстаткиНаУчасткахСводная.КоличествоТЕРМ,
	|	ОстаткиНаУчасткахСводная.ОстатокЗНП,
	|	ОстаткиНаУчасткахСводная.ОстатокНЗПИ,
	|	ОстаткиНаУчасткахСводная.КлючИзделия,
	|	ОстаткиНаУчасткахСводная.КлючСхемы,
	|	ОстаткиНаУчасткахСводная.Операция,
	|	ОстаткиНаУчасткахСводная.Статус,
	|	ОстаткиНаУчасткахСводная.Участок,
	|	ОстаткиНаУчасткахСводная.РезервОстаток,
	|	ОстаткиНаУчасткахСводная.Кратность,
	|	ОстаткиНаУчасткахСводная.ДокументПлан
	|ПОМЕСТИТЬ ОстаткиНаУчасткахСводнаяРазрешенные
	|ИЗ
	|	ОстаткиНаУчасткахСводная КАК ОстаткиНаУчасткахСводная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РазрешенныеТЕРМ КАК РазрешенныеТЕРМ
	|		ПО ОстаткиНаУчасткахСводная.РабочееМесто = РазрешенныеТЕРМ.РабочееМесто
	|			И ОстаткиНаУчасткахСводная.ТЕ = РазрешенныеТЕРМ.ТЕ
	|ГДЕ
	|	(РазрешенныеТЕРМ.Количество = РазрешенныеТЕРМ.КоличествоТЕРМ
	|			ИЛИ РазрешенныеТЕРМ.РабочееМесто = ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка)
	|				И РазрешенныеТЕРМ.ТЕ = ЗНАЧЕНИЕ(Справочник.БЗ_ТЕ.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВЦехеСписатьСводноОтбор.Номенклатура,
	|	ОстаткиВЦехеСписатьСводноОтбор.ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеСписатьСводноОтбор.ЗаказНаПроизводство,
	|	ОстаткиВЦехеСписатьСводноОтбор.Остаток,
	|	ОстаткиВЦехеСписатьСводноОтбор.ОстатокЗНП,
	|	ОстаткиВЦехеСписатьСводноОтбор.ОстатокНЗПИ
	|ИЗ
	|	ОстаткиВЦехеСписатьСводноОтбор КАК ОстаткиВЦехеСписатьСводноОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 3000
	|	ОстаткиВЦехеСписатьСводноОтбор.Номенклатура КАК Номенклатура,
	|	ОстаткиВЦехеСписатьСводноОтбор.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиВЦехеСписатьСводноОтбор.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ОстаткиВЦехеСписатьСводноОтбор.Остаток КАК Остаток,
	|	ЗаказыВПроизводстве.КлючИзделия,
	|	ЗаказыВПроизводстве.Операция,
	|	ЗаказыВПроизводстве.Статус,
	|	ЗаказыВПроизводстве.Участок,
	|	ЗаказыВПроизводстве.ВариантНаладки,
	|	ЗаказыВПроизводстве.ОперацияНомер,
	|	ЗаказыВПроизводстве.ОперацияСледующая,
	|	ЗаказыВПроизводстве.УчастокСледующий,
	|	ЗаказыВПроизводстве.КоличествоОстаток КАК Количество,
	|	ЗаказыВПроизводстве.КлючПартии,
	|	ОстаткиВЦехеСписатьСводноОтбор.ОстатокНЗПИ КАК ОстатокНЗПИ,
	|	ОстаткиВЦехеСписатьСводноОтбор.ОстатокЗНП КАК ОстатокЗНП,
	|	ЗаказыВПроизводстве.МаршрутныйЛист КАК ДокументПлан,
	|	1 КАК Кратность
	|ИЗ
	|	ЗаказыВПроизводстве КАК ЗаказыВПроизводстве
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиВЦехеСписатьСводноОтбор КАК ОстаткиВЦехеСписатьСводноОтбор
	|		ПО ЗаказыВПроизводстве.Номенклатура = ОстаткиВЦехеСписатьСводноОтбор.Номенклатура
	|			И ЗаказыВПроизводстве.ХарактеристикаНоменклатуры = ОстаткиВЦехеСписатьСводноОтбор.ХарактеристикаНоменклатуры
	|			И ЗаказыВПроизводстве.ЗаказНаПроизводство = ОстаткиВЦехеСписатьСводноОтбор.ЗаказНаПроизводство
	|ГДЕ
	|	ЕСТЬNULL(ОстаткиВЦехеСписатьСводноОтбор.ОстатокЗНП, 0) = 0
	|			И (ОстаткиВЦехеСписатьСводноОтбор.Остаток > 0
	|				ИЛИ ЗаказыВПроизводстве.МаршрутныйЛист.Дата < &ДатаСписания)
	|	И ЗаказыВПроизводстве.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыВПроизводстве.ЗаказНаПроизводство.Дата,
	|	ЗаказыВПроизводстве.Номенклатура.Наименование,
	|	ЗаказыВПроизводстве.ХарактеристикаНоменклатуры.Наименование,
	|	ЗаказыВПроизводстве.Операция.Наименование УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(Остаток),
	|	МАКСИМУМ(ОстатокНЗПИ),
	|	МАКСИМУМ(ОстатокЗНП)
	|ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 3000
	|	ОстаткиНаУчасткахСводнаяРазрешенные.РабочееМесто КАК РабочееМесто,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ТЕ КАК ТЕ,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Номенклатура КАК Номенклатура,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Остаток КАК Остаток,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Количество КАК Количество,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.КоличествоТЕРМ КАК КоличествоТЕРМ,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ОстатокЗНП КАК ОстатокЗНП,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ОстатокНЗПИ КАК ОстатокНЗПИ,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.КлючИзделия,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.КлючСхемы,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Операция,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Статус,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Участок,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.РезервОстаток,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Кратность,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ДокументПлан
	|ИЗ
	|	ОстаткиНаУчасткахСводнаяРазрешенные КАК ОстаткиНаУчасткахСводнаяРазрешенные
	|ГДЕ
	|	ЕСТЬNULL(ОстаткиНаУчасткахСводнаяРазрешенные.ОстатокЗНП, 0) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ЗаказНаПроизводство.Дата,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Номенклатура.Наименование,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.ХарактеристикаНоменклатуры.Наименование,
	|	ОстаткиНаУчасткахСводнаяРазрешенные.Операция.Наименование УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(Остаток),
	|	СУММА(Количество),
	|	МАКСИМУМ(КоличествоТЕРМ),
	|	МАКСИМУМ(ОстатокЗНП),
	|	МАКСИМУМ(ОстатокНЗПИ)
	|ПО
	|	РабочееМесто,
	|	ТЕ,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	ЗаказНаПроизводство";

	Подразделение = Справочники.Подразделения.НайтиПоКоду("000000024");
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ДатаСписания", НачалоДня(ТекущаяДата())-24*60*60*14);//-2 недели
	Пакет = Запрос.ВыполнитьПакет();
	ДЗ_НЗПИ = Пакет[15].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДЗ_ТЕ = Пакет[16].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ДЗ_НЗПИ.Строки.Количество()>0 ИЛИ ДЗ_ТЕ.Строки.Количество()>0 Тогда
		
		ДокКорр = Документы.БЗ_КорректировкаОстатковПроизводства.СоздатьДокумент();
		ДокКорр.Дата = ТекущаяДата();
		ДокКорр.Подразделение = Подразделение;
		
		НезавершенноеПроизводство_Изделия = ДокКорр.НезавершенноеПроизводство_Изделия;
		ОстаткиНаУчастках = ДокКорр.ОстаткиНаУчастках;
	Иначе
		Возврат;
	КонецЕсли;
	
	Для Каждого Номенклатура Из ДЗ_НЗПИ.Строки Цикл
		Для Каждого ХарактеристикаНоменклатуры из Номенклатура.Строки Цикл
			Для Каждого ЗНП из ХарактеристикаНоменклатуры.Строки Цикл
				Для Каждого КлючиИзделий из ЗНП.Строки Цикл
					Строка_НЗПИ = НезавершенноеПроизводство_Изделия.Добавить();
					ЗаполнитьЗначенияСвойств(Строка_НЗПИ, КлючиИзделий);
				КонецЦикла;	
			КонецЦикла;	            
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого РабочееМесто Из ДЗ_ТЕ.Строки Цикл
	Для Каждого ТЕ Из РабочееМесто.Строки Цикл
		Если ТЕ.Количество = ТЕ.КоличествоТЕРМ Или (НЕ ЗначениеЗаполнено(ТЕ.ТЕ)и НЕ ЗначениеЗаполнено(ТЕ.РабочееМесто))Тогда
			Для Каждого Номенклатура Из ТЕ.Строки Цикл
				Для Каждого ХарактеристикаНоменклатуры из Номенклатура.Строки Цикл
					Для Каждого ЗНП из ХарактеристикаНоменклатуры.Строки Цикл
						Для Каждого КлючиИзделий из ЗНП.Строки Цикл
							Строка_ТЕ = ОстаткиНаУчастках.Добавить();
							ЗаполнитьЗначенияСвойств(Строка_ТЕ, КлючиИзделий);
						КонецЦикла;	
					КонецЦикла;	
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	КонецЦикла;
	ДокКорр.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
	
КонецПроцедуры

Процедура ЗаписатьПараметр(УзелОбъект = Неопределено, Параметр, Значение) Экспорт
	Если УзелОбъект <> Неопределено Тогда
		КодПараметра = сокрЛП(УзелОбъект.Код)+" | ";
	Иначе
		КодПараметра = "";
	КонецЕсли;

	МПараметр=РегистрыСведений.БЗ_MES_Параметры.СоздатьМенеджерЗаписи();
	МПараметр.Параметр=КодПараметра+Параметр;
	МПараметр.Значение=Значение;
	МПараметр.Записать(Истина);
КонецПроцедуры

Функция ПрочитатьПараметр(УзелОбъект = Неопределено, Параметр, Значение) Экспорт
	Если УзелОбъект <> Неопределено Тогда
		КодПараметра = сокрЛП(УзелОбъект.Код)+" | ";
	Иначе
		КодПараметра = "";
	КонецЕсли;
	ДанныеРегистра = РегистрыСведений.БЗ_MES_Параметры.Получить(Новый Структура("Параметр",КодПараметра+Параметр));
	Значение = ДанныеРегистра.Значение;
	Возврат Значение<>Неопределено;
КонецФункции

Процедура РасчитатьПорядок()  Экспорт
	Попытка РассчитатьКэшДанных_ПоЗаказам(); Исключение КонецПопытки;
	Попытка РассчитатьПорядокПартии(); Исключение КонецПопытки;
КонецПроцедуры

Процедура РассчитатьПорядокПартии() Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 


	"ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия КАК КлючИзделия,
	|	МИНИМУМ(БЗ_ОстаткиНаУчасткахОбороты.Период) КАК Период,
	|	БЗ_ОстаткиНаУчасткахОстатки.Операция КАК Операция,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.ВидПартии КАК ВидПартии,
	|	БЗ_ПартииПроизводства_Параметры.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	БЗ_ПартииПроизводства_Параметры.Цвет КАК Цвет,
	|	БЗ_ПартииПроизводства_Параметры.Бренд КАК Бренд
	|ПОМЕСТИТЬ ПериодыОпераций
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(, Статус = ЗНАЧЕНИЕ(перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_ОстаткиНаУчасткахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БЗ_ОстаткиНаУчастках.Обороты(&ДатаОтсечки, , Запись, Статус = ЗНАЧЕНИЕ(перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_ОстаткиНаУчасткахОбороты
	|		ПО БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия = БЗ_ОстаткиНаУчасткахОбороты.КлючИзделия
	|			И БЗ_ОстаткиНаУчасткахОстатки.Статус = БЗ_ОстаткиНаУчасткахОбороты.Статус
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|ГДЕ
	|	БЗ_ОстаткиНаУчасткахОбороты.КоличествоПриход > 0
	|	И БЗ_ОстаткиНаУчасткахОстатки.КоличествоОстаток > 0
	|	И БЗ_ОстаткиНаУчасткахОбороты.Период > &ДатаОтсечки
	|	И БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	БЗ_ОстаткиНаУчасткахОстатки.КлючИзделия,
	|	БЗ_ОстаткиНаУчасткахОстатки.Операция,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.ВидПартии,
	|	БЗ_ПартииПроизводства_Параметры.НоменклатурнаяГруппа,
	|	БЗ_ПартииПроизводства_Параметры.Цвет,
	|	БЗ_ПартииПроизводства_Параметры.Бренд
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Операция,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.ВидПартии,
	|	БЗ_ПартииПроизводства_Параметры.НоменклатурнаяГруппа,
	|	БЗ_ПартииПроизводства_Параметры.Цвет,
	|	БЗ_ПартииПроизводства_Параметры.Бренд
	|ИЗ
	|	РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(, Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.План)) КАК БЗ_НезавершенноеПроизводство_ИзделияОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|ГДЕ
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство.Дата > &ДатаОтсечки
	|
	|СГРУППИРОВАТЬ ПО
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Операция,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия,
	|	БЗ_ПартииПроизводства_Параметры.ВидПартии,
	|	БЗ_ПартииПроизводства_Параметры.НоменклатурнаяГруппа,
	|	БЗ_ПартииПроизводства_Параметры.Цвет,
	|	БЗ_ПартииПроизводства_Параметры.Бренд
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыОпераций.КлючИзделия КАК КлючИзделия,
	|	ПериодыОпераций.Период КАК Период,
	|	ПериодыОпераций.Операция КАК Операция,
	|	ПериодыОпераций.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ПериодыОпераций.ВидПартии КАК ВидПартии,
	|	ЛОЖЬ КАК НужноУдалить,
	|	ЗНАЧЕНИЕ(Перечисление.БЗ_ВидыПорядкаПартии.ПорядокПартии) КАК ВидПорядка,
	|	ПериодыОпераций.ВидПартии.ПриоритетВОчереди КАК ПорядокОчереди,
	|	ПериодыОпераций.ВидПартии.Приоритет КАК ПорядокВнутриПартии,
	|	ПериодыОпераций.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПериодыОпераций.Цвет КАК Цвет,
	|	ПериодыОпераций.Бренд КАК Бренд
	|ПОМЕСТИТЬ ПериодыОперацийГруппировка
	|ИЗ
	|	ПериодыОпераций КАК ПериодыОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ПериодыОперацийГруппировка.Период) КАК Период,
	|	ПериодыОперацийГруппировка.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	МИНИМУМ(ЕСТЬNULL(ПериодыОперацийГруппировка.ЗаказНаПроизводство.ДатаНачалаРабот, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаНачалаРабот,
	|	МИНИМУМ(ЕСТЬNULL(ПериодыОперацийГруппировка.ЗаказНаПроизводство.ДокументОснование.ДатаОтгрузки, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаОтгрузки,
	|	МИНИМУМ(ЕСТЬNULL(ПериодыОперацийГруппировка.ЗаказНаПроизводство.Дата, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаЗаказа,
	|	МАКСИМУМ(ПериодыОперацийГруппировка.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	|	МАКСИМУМ(ПериодыОперацийГруппировка.Цвет) КАК Цвет,
	|	МАКСИМУМ(ПериодыОперацийГруппировка.Бренд) КАК Бренд
	|ПОМЕСТИТЬ ПорядокСвертка
	|ИЗ
	|	ПериодыОперацийГруппировка КАК ПериодыОперацийГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыОперацийГруппировка.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	Порядок.Период КАК Период,
	|	Порядок.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Порядок.ДатаНачалаРабот КАК ДатаНачалаРабот,
	|	Порядок.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВЫБОР
	|		КОГДА НЕ Порядок.Период = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ Порядок.ДатаНачалаРабот = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА НЕ Порядок.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА 3
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ПорядокДат,
	|	Порядок.Цвет.Наименование КАК ЦветНаименование,
	|	Порядок.Бренд.Наименование КАК БрендНаименование,
	|	0 КАК ПорядокПартии
	|ИЗ
	|	ПорядокСвертка КАК Порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокДат,
	|	Период,
	|	ДатаОтгрузки,
	|	ДатаНачалаРабот,
	|	Порядок.НоменклатурнаяГруппа.Наименование,
	|	ЦветНаименование,
	|	БрендНаименование,
	|	Порядок.ДатаЗаказа";
	
 	Запрос.УстановитьПараметр("ДатаОтсечки", ТекущаяДата()-20*24*60*60);
	Порядок = Запрос.Выполнить().Выгрузить();
	НомерПорядка = 1;
	Для Каждого СтрокаПартии из Порядок Цикл
		СтрокаПартии.ПорядокПартии = НомерПорядка;
		НомерПорядка = НомерПорядка + 1;
	КонецЦикла;
	Запрос.УстановитьПараметр("Порядок", Порядок);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Порядок.Период,
	               |	Порядок.ДатаОтгрузки,
	               |	Порядок.ДатаНачалаРабот,
	               |	Порядок.ЗаказНаПроизводство КАК Партия,
	               |	Порядок.ПорядокПартии КАК ПорядокПартии
	               |ПОМЕСТИТЬ ПорядокСортировкаНомер
	               |ИЗ
	               |	&Порядок КАК Порядок
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Порядок.ЗаказНаПроизводство
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПериодыОперацийГруппировка.КлючИзделия КАК КлючПорядка,
	               |	ПериодыОперацийГруппировка.Операция КАК Операция,
	               |	ПериодыОперацийГруппировка.ВидПорядка КАК ВидПорядка,
	               |	МАКСИМУМ(ПорядокНомер.ДатаНачалаРабот) КАК ДатаНачалаРабот,
	               |	ПорядокНомер.ДатаОтгрузки КАК ДатаОтгрузки,
	               |	СРЕДНЕЕ(ВЫРАЗИТЬ(ПериодыОперацийГруппировка.ПорядокОчереди КАК ЧИСЛО(10, 0))) КАК ПорядокОчереди,
	               |	СРЕДНЕЕ(ВЫРАЗИТЬ(ПорядокНомер.ПорядокПартии КАК ЧИСЛО(10, 0))) КАК ПорядокПартии,
	               |	СРЕДНЕЕ(ВЫРАЗИТЬ(ПериодыОперацийГруппировка.ПорядокВнутриПартии КАК ЧИСЛО(10, 0))) КАК ПорядокВнутриПартии,
	               |	МАКСИМУМ(ЕСТЬNULL(ПериодыОперацийГруппировка.НужноУдалить, ИСТИНА)) КАК НужноУдалить,
	               |	ЕСТЬNULL(ПериодыОперацийГруппировка.ЗаказНаПроизводство, ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)) КАК Партия,
	               |	ПорядокНомер.Период КАК ДатаНачалаРаботФакт
	               |ПОМЕСТИТЬ ПорядокСводная
	               |ИЗ
	               |	ПериодыОперацийГруппировка КАК ПериодыОперацийГруппировка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокСортировкаНомер КАК ПорядокНомер
	               |		ПО ПериодыОперацийГруппировка.ЗаказНаПроизводство = ПорядокНомер.Партия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПериодыОперацийГруппировка.КлючИзделия,
	               |	ПериодыОперацийГруппировка.Операция,
	               |	ПериодыОперацийГруппировка.ВидПорядка,
	               |	ПорядокНомер.ДатаОтгрузки,
	               |	ЕСТЬNULL(ПериодыОперацийГруппировка.ЗаказНаПроизводство, ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)),
	               |	ПорядокНомер.Период
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	КлючПорядка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	БЗ_ПартииПроизводства_Порядок.ВидПорядка КАК ВидПорядка,
	               |	БЗ_ПартииПроизводства_Порядок.Операция КАК Операция,
	               |	БЗ_ПартииПроизводства_Порядок.Участок КАК Участок,
	               |	БЗ_ПартииПроизводства_Порядок.ПорядокОчереди КАК ПорядокОчереди,
	               |	БЗ_ПартииПроизводства_Порядок.ПорядокПартии КАК ПорядокПартии,
	               |	БЗ_ПартииПроизводства_Порядок.ДатаНачалаРабот КАК ДатаНачалаРабот,
	               |	БЗ_ПартииПроизводства_Порядок.ДатаОтгрузки КАК ДатаОтгрузки,
	               |	БЗ_ПартииПроизводства_Порядок.ПорядокВнутриПартии КАК ПорядокВнутриПартии,
	               |	БЗ_ПартииПроизводства_Порядок.КлючПорядка КАК КлючПорядка,
	               |	0 КАК Партия,
	               |	БЗ_ПартииПроизводства_Порядок.ДатаНачалаРаботФакт
	               |ПОМЕСТИТЬ РС_ПорядокПартии
	               |ИЗ
	               |	РегистрСведений.БЗ_ПартииПроизводства_Порядок КАК БЗ_ПартииПроизводства_Порядок
	               |ГДЕ
	               |	БЗ_ПартииПроизводства_Порядок.ВидПорядка = ЗНАЧЕНИЕ(Перечисление.БЗ_ВидыПорядкаПартии.ПорядокПартии)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	КлючПорядка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ПорядокСводная.КлючПорядка, РС_ПорядокПартии.КлючПорядка) КАК КлючПорядка,
	               |	ЕСТЬNULL(ПорядокСводная.Операция, РС_ПорядокПартии.Операция) КАК Операция,
	               |	ЕСТЬNULL(ПорядокСводная.ВидПорядка, РС_ПорядокПартии.ВидПорядка) КАК ВидПорядка,
	               |	МАКСИМУМ(ПорядокСводная.ДатаНачалаРабот) КАК ДатаНачалаРабот,
	               |	ПорядокСводная.ДатаОтгрузки КАК ДатаОтгрузки,
	               |	МАКСИМУМ(ВЫРАЗИТЬ(ПорядокСводная.ПорядокОчереди КАК ЧИСЛО(10, 0))) КАК ПорядокОчереди,
	               |	МИНИМУМ(ВЫРАЗИТЬ(ПорядокСводная.ПорядокПартии КАК ЧИСЛО(10, 0))) КАК ПорядокПартии,
	               |	МАКСИМУМ(ВЫРАЗИТЬ(ПорядокСводная.ПорядокВнутриПартии КАК ЧИСЛО(10, 0))) КАК ПорядокВнутриПартии,
	               |	МАКСИМУМ(ЕСТЬNULL(ПорядокСводная.НужноУдалить, ИСТИНА)) КАК НужноУдалить,
	               |	ПорядокСводная.Партия КАК Партия,
	               |	ПорядокСводная.ДатаНачалаРаботФакт
	               |ИЗ
	               |	ПорядокСводная КАК ПорядокСводная
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РС_ПорядокПартии КАК РС_ПорядокПартии
	               |		ПО ПорядокСводная.КлючПорядка = РС_ПорядокПартии.КлючПорядка
	               |			И ПорядокСводная.Операция = РС_ПорядокПартии.Операция
	               |			И ПорядокСводная.ВидПорядка = РС_ПорядокПартии.ВидПорядка
	               |ГДЕ
	               |	(ЕСТЬNULL(ПорядокСводная.НужноУдалить, ИСТИНА)
	               |			ИЛИ НЕ(ПорядокСводная.ПорядокОчереди = ЕСТЬNULL(РС_ПорядокПартии.ПорядокОчереди, НЕОПРЕДЕЛЕНО)
	               |					И ПорядокСводная.ДатаНачалаРаботФакт = ЕСТЬNULL(РС_ПорядокПартии.ДатаНачалаРаботФакт, ДАТАВРЕМЯ(1, 1, 1))
	               |					И ПорядокСводная.ДатаНачалаРабот = ЕСТЬNULL(РС_ПорядокПартии.ДатаНачалаРабот, ДАТАВРЕМЯ(1, 1, 1))
	               |					И ПорядокСводная.ДатаОтгрузки = ЕСТЬNULL(РС_ПорядокПартии.ДатаОтгрузки, ДАТАВРЕМЯ(1, 1, 1))
	               |					И ПорядокСводная.ПорядокПартии = ЕСТЬNULL(РС_ПорядокПартии.ПорядокПартии, НЕОПРЕДЕЛЕНО)
	               |					И ПорядокСводная.ПорядокВнутриПартии = ЕСТЬNULL(РС_ПорядокПартии.ПорядокВнутриПартии, НЕОПРЕДЕЛЕНО)
	               |					И ПорядокСводная.Партия = ЕСТЬNULL(РС_ПорядокПартии.Партия, ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка))))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ПорядокСводная.ВидПорядка, РС_ПорядокПартии.ВидПорядка),
	               |	ЕСТЬNULL(ПорядокСводная.Операция, РС_ПорядокПартии.Операция),
	               |	ЕСТЬNULL(ПорядокСводная.КлючПорядка, РС_ПорядокПартии.КлючПорядка),
	               |	ПорядокСводная.ДатаОтгрузки,
	               |	ПорядокСводная.Партия,
	               |	ПорядокСводная.ДатаНачалаРаботФакт
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПорядокПартии УБЫВ";
	
	
	ТЗ_ПартииПроизводства_Порядок = Запрос.Выполнить().Выгрузить();	
	ИмяОтборов = "ВидПорядка, Операция";
	ИмяРегистра = "БЗ_ПартииПроизводства_Порядок";
	ТЗ_Отбор = ТЗ_ПартииПроизводства_Порядок.Скопировать(,ИмяОтборов);
	ТЗ_Отбор.Свернуть(ИмяОтборов);
		
	Порядок=РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	Для Каждого СтрокаОтбор из ТЗ_Отбор Цикл
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений."+ИмяРегистра);
		Порядок.Отбор.Сбросить();
		ПараметрыОтбора = Новый Структура("НужноУдалить", Ложь);
		Для Каждого Колонка из ТЗ_Отбор.Колонки Цикл
		    ЭлементБлокировки.УстановитьЗначение(Колонка.Имя, СтрокаОтбор[Колонка.Имя]);
			Порядок.Отбор[Колонка.Имя].Установить(СтрокаОтбор[Колонка.Имя]);
			ПараметрыОтбора.Вставить(Колонка.Имя,СтрокаОтбор[Колонка.Имя]);
		КонецЦикла;
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		Блокировка.Заблокировать();	                     
		ТЗ_ПорядокСтроки = ТЗ_ПартииПроизводства_Порядок.НайтиСтроки(ПараметрыОтбора);
		ТЗ_Порядок = ТЗ_ПартииПроизводства_Порядок.Скопировать(ТЗ_ПорядокСтроки);
		Порядок.Загрузить(ТЗ_Порядок);
		Порядок.Записать(Истина);
		ЗафиксироватьТранзакцию();	
	КонецЦикла;
КонецПроцедуры

Процедура РассчитатьКэшДанных_ПоЗаказам() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоГоловнойМатериалы.Ссылка КАК ЗаказНаПроизводствоОснование,
	|	ЗаказНаПроизводствоПодчиненныйТовары.Номенклатура КАК Комплектующая,
	|	ЗаказНаПроизводствоПодчиненныйТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаКомплектующей,
	|	ЗаказНаПроизводствоГоловнойМатериалы.Номенклатура КАК Номенклатура,
	|	ЗаказНаПроизводствоГоловнойМатериалы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ЗаказНаПроизводствоГоловнойМатериалы.Количество) КАК ПланДляСборкиТовара,
	|	ЗаказНаПроизводствоПодчиненныйТовары.Ссылка КАК ЗаказНаПроизводство,
	|	ЗаказНаПроизводствоПодчиненныйТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ЗаказНаПроизводствоПодчиненныйТовары.Количество) КАК ПланПоЗаказу,
	|	ЕСТЬNULL(ТоварыВПроизводствеГоловнойОстатки.КоличествоОстаток, 0) КАК ОстатокПоЗаказу
	|ПОМЕСТИТЬ ОстаткиМатериалы
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Товары КАК ЗаказНаПроизводствоПодчиненныйТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Материалы КАК ЗаказНаПроизводствоГоловнойМатериалы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВПроизводстве.Остатки(, ) КАК ТоварыВПроизводствеГоловнойОстатки
	|			ПО ЗаказНаПроизводствоГоловнойМатериалы.Ссылка = ТоварыВПроизводствеГоловнойОстатки.ДокументОснование
	|				И ЗаказНаПроизводствоГоловнойМатериалы.Номенклатура = ТоварыВПроизводствеГоловнойОстатки.Номенклатура
	|				И ЗаказНаПроизводствоГоловнойМатериалы.ХарактеристикаНоменклатуры = ТоварыВПроизводствеГоловнойОстатки.ХарактеристикаНоменклатуры
	|		ПО ЗаказНаПроизводствоПодчиненныйТовары.Ссылка.ДокументОснование = ЗаказНаПроизводствоГоловнойМатериалы.Ссылка
	|			И ЗаказНаПроизводствоПодчиненныйТовары.Номенклатура = ЗаказНаПроизводствоГоловнойМатериалы.Комплектующая
	|			И ЗаказНаПроизводствоПодчиненныйТовары.ХарактеристикаНоменклатуры = ЗаказНаПроизводствоГоловнойМатериалы.ХарактеристикаКомплектующей
	|ГДЕ
	|	ЗаказНаПроизводствоПодчиненныйТовары.Ссылка.Проведен = ИСТИНА
	|	И ЗаказНаПроизводствоПодчиненныйТовары.Ссылка.ЗаказВыполнен = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаПроизводствоГоловнойМатериалы.Ссылка,
	|	ЗаказНаПроизводствоГоловнойМатериалы.ХарактеристикаНоменклатуры,
	|	ЗаказНаПроизводствоПодчиненныйТовары.Ссылка,
	|	ЗаказНаПроизводствоПодчиненныйТовары.ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоГоловнойМатериалы.Номенклатура,
	|	ЗаказНаПроизводствоПодчиненныйТовары.Номенклатура,
	|	ЗаказНаПроизводствоПодчиненныйТовары.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ТоварыВПроизводствеГоловнойОстатки.КоличествоОстаток, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиМатериалы.ЗаказНаПроизводствоОснование, ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)) КАК ЗаказНаПроизводствоОснование,
	|	ЕСТЬNULL(ОстаткиМатериалы.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ОстаткиМатериалы.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ОстатокТоваровВПроизводстве.ДокументОснование, ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)) КАК ЗаказНаПроизводство,
	|	ЕСТЬNULL(ОстатокТоваровВПроизводстве.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Комплектующая,
	|	ЕСТЬNULL(ОстатокТоваровВПроизводстве.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаКомплектующей,
	|	МАКСИМУМ(ЕСТЬNULL(ОстаткиМатериалы.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))) КАК ЕдиницаИзмерения,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстатокТоваровВПроизводстве.КоличествоОстаток, 0) КАК ЧИСЛО(15, 2))) КАК ОсталосьПроизвести,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстатокТоваровВЦехе.КоличествоОстаток, 0) КАК ЧИСЛО(15, 2))) КАК ОстатокВЦехе,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиМатериалы.ПланДляСборкиТовара, 0) КАК ЧИСЛО(15, 2))) КАК ПланДляСборкиТовара,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстаткиМатериалы.ПланПоЗаказу, 0) КАК ЧИСЛО(15, 2))) КАК ПланПоЗаказу,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстатокТоваровВПроизводстве.КоличествоОстаток * ОстаткиМатериалы.ЕдиницаИзмерения.Ширина * ОстаткиМатериалы.ЕдиницаИзмерения.Высота / 1000000, 0) КАК ЧИСЛО(15, 2))) КАК Площадь,
	|	СУММА(ВЫРАЗИТЬ(ЕСТЬNULL(ОстатокТоваровВПроизводстве.КоличествоОстаток * ЕСТЬNULL(МашиночасыСрезПоследних.Время, ОстатокТоваровВПроизводстве.Номенклатура.Машиночасы), 0) / 60 КАК ЧИСЛО(15, 3))) КАК Машиночасы,
	|	ЛОЖЬ КАК НужноУдалить
	|ПОМЕСТИТЬ ЗаказыТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыВПроизводствеОстатки.ДокументОснование КАК ДокументОснование,
	|		ТоварыВПроизводствеОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыВПроизводствеОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		СУММА(ТоварыВПроизводствеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыВПроизводстве.Остатки(, ) КАК ТоварыВПроизводствеОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыВПроизводствеОстатки.ХарактеристикаНоменклатуры,
	|		ТоварыВПроизводствеОстатки.ДокументОснование,
	|		ТоварыВПроизводствеОстатки.Номенклатура) КАК ОстатокТоваровВПроизводстве
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НП_ТоварыВЦехахОстатки.Номенклатура КАК Номенклатура,
	|			НП_ТоварыВЦехахОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|			НП_ТоварыВЦехахОстатки.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|			СУММА(НП_ТоварыВЦехахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|		ИЗ
	|			РегистрНакопления.НП_ТоварыВЦехах.Остатки(, ) КАК НП_ТоварыВЦехахОстатки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НП_ТоварыВЦехахОстатки.ХарактеристикаНоменклатуры,
	|			НП_ТоварыВЦехахОстатки.ЗаказНаПроизводство,
	|			НП_ТоварыВЦехахОстатки.Номенклатура) КАК ОстатокТоваровВЦехе
	|		ПО ОстатокТоваровВПроизводстве.ДокументОснование = ОстатокТоваровВЦехе.ЗаказНаПроизводство
	|			И ОстатокТоваровВПроизводстве.Номенклатура = ОстатокТоваровВЦехе.Номенклатура
	|			И ОстатокТоваровВПроизводстве.ХарактеристикаНоменклатуры = ОстатокТоваровВЦехе.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Машиночасы.СрезПоследних КАК МашиночасыСрезПоследних
	|		ПО ОстатокТоваровВПроизводстве.Номенклатура.НоменклатурнаяГруппа = МашиночасыСрезПоследних.ТоварнаяГруппа
	|			И ОстатокТоваровВПроизводстве.Номенклатура.ЕдиницаДляОтчетов.Высота = МашиночасыСрезПоследних.Высота
	|			И ОстатокТоваровВПроизводстве.Номенклатура.ВидФасада = МашиночасыСрезПоследних.ВидФасада
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиМатериалы КАК ОстаткиМатериалы
	|		ПО ОстатокТоваровВПроизводстве.ДокументОснование = ОстаткиМатериалы.ЗаказНаПроизводство
	|			И ОстатокТоваровВПроизводстве.Номенклатура = ОстаткиМатериалы.Комплектующая
	|			И ОстатокТоваровВПроизводстве.ХарактеристикаНоменклатуры = ОстаткиМатериалы.ХарактеристикаКомплектующей
	|ГДЕ
	|	(ОстаткиМатериалы.ОстатокПоЗаказу > 0
	|			ИЛИ ОстаткиМатериалы.ЗаказНаПроизводствоОснование ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстатокТоваровВПроизводстве.Номенклатура,
	|	ОстатокТоваровВПроизводстве.ДокументОснование,
	|	ОстатокТоваровВПроизводстве.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ОстаткиМатериалы.ЗаказНаПроизводствоОснование, ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)),
	|	ЕСТЬNULL(ОстаткиМатериалы.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	ЕСТЬNULL(ОстаткиМатериалы.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_КэшДанных_ПоЗаказам.ЗаказНаПроизводствоОснование,
	|	БЗ_КэшДанных_ПоЗаказам.Номенклатура,
	|	БЗ_КэшДанных_ПоЗаказам.ХарактеристикаНоменклатуры,
	|	БЗ_КэшДанных_ПоЗаказам.ЗаказНаПроизводство,
	|	БЗ_КэшДанных_ПоЗаказам.Комплектующая,
	|	БЗ_КэшДанных_ПоЗаказам.ХарактеристикаКомплектующей,
	|	СУММА(БЗ_КэшДанных_ПоЗаказам.ПланДляСборкиТовара) КАК ПланДляСборкиТовара,
	|	СУММА(БЗ_КэшДанных_ПоЗаказам.ПланПоЗаказу) КАК ПланПоЗаказу,
	|	СУММА(БЗ_КэшДанных_ПоЗаказам.ОсталосьПроизвести) КАК ОсталосьПроизвести,
	|	СУММА(БЗ_КэшДанных_ПоЗаказам.ОстатокВЦехе) КАК ОстатокВЦехе,
	|	МАКСИМУМ(БЗ_КэшДанных_ПоЗаказам.ВремяОбновления) КАК ВремяОбновления,
	|	БЗ_КэшДанных_ПоЗаказам.ЕдиницаИзмерения,
	|	БЗ_КэшДанных_ПоЗаказам.Подразделение,
	|	БЗ_КэшДанных_ПоЗаказам.СкладСборки,
	|	БЗ_КэшДанных_ПоЗаказам.Площадь,
	|	БЗ_КэшДанных_ПоЗаказам.Машиночасы
	|ПОМЕСТИТЬ РС_КэшДанных_ПоЗаказам
	|ИЗ
	|	РегистрСведений.БЗ_КэшДанных_ПоЗаказам КАК БЗ_КэшДанных_ПоЗаказам
	|
	|СГРУППИРОВАТЬ ПО
	|	БЗ_КэшДанных_ПоЗаказам.ЗаказНаПроизводствоОснование,
	|	БЗ_КэшДанных_ПоЗаказам.ХарактеристикаНоменклатуры,
	|	БЗ_КэшДанных_ПоЗаказам.Комплектующая,
	|	БЗ_КэшДанных_ПоЗаказам.ХарактеристикаКомплектующей,
	|	БЗ_КэшДанных_ПоЗаказам.Номенклатура,
	|	БЗ_КэшДанных_ПоЗаказам.ЗаказНаПроизводство,
	|	БЗ_КэшДанных_ПоЗаказам.ЕдиницаИзмерения,
	|	БЗ_КэшДанных_ПоЗаказам.Подразделение,
	|	БЗ_КэшДанных_ПоЗаказам.СкладСборки,
	|	БЗ_КэшДанных_ПоЗаказам.Площадь,
	|	БЗ_КэшДанных_ПоЗаказам.Машиночасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ЗаказыТовары.ЗаказНаПроизводствоОснование, РС_КэшДанных_ПоЗаказам.ЗаказНаПроизводствоОснование) КАК ЗаказНаПроизводствоОснование,
	|	ЕСТЬNULL(ЗаказыТовары.Номенклатура, РС_КэшДанных_ПоЗаказам.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ЗаказыТовары.ХарактеристикаНоменклатуры, РС_КэшДанных_ПоЗаказам.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ЗаказыТовары.ЗаказНаПроизводство, ЗаказыТовары.ЗаказНаПроизводство) КАК ЗаказНаПроизводство,
	|	ЕСТЬNULL(ЗаказыТовары.Комплектующая, РС_КэшДанных_ПоЗаказам.Комплектующая) КАК Комплектующая,
	|	ЕСТЬNULL(ЗаказыТовары.ХарактеристикаКомплектующей, РС_КэшДанных_ПоЗаказам.ХарактеристикаКомплектующей) КАК ХарактеристикаКомплектующей,
	|	ЗаказыТовары.ЕдиницаИзмерения,
	|	ЗаказыТовары.ПланДляСборкиТовара,
	|	ЗаказыТовары.ПланПоЗаказу,
	|	ЗаказыТовары.ОстатокВЦехе,
	|	ЗаказыТовары.ЗаказНаПроизводство.Подразделение КАК Подразделение,
	|	ЗаказыТовары.ЗаказНаПроизводство.СкладСборки КАК СкладСборки,
	|	ЕСТЬNULL(ЗаказыТовары.НужноУдалить, ИСТИНА) КАК НужноУдалить,
	|	ЗаказыТовары.Площадь,
	|	ЗаказыТовары.Машиночасы,
	|	ЗаказыТовары.ОсталосьПроизвести,
	|	&ВремяОбновления
	|ИЗ
	|	ЗаказыТовары КАК ЗаказыТовары
	|		ПОЛНОЕ СОЕДИНЕНИЕ РС_КэшДанных_ПоЗаказам КАК РС_КэшДанных_ПоЗаказам
	|		ПО ЗаказыТовары.ЗаказНаПроизводствоОснование = РС_КэшДанных_ПоЗаказам.ЗаказНаПроизводствоОснование
	|			И ЗаказыТовары.Номенклатура = РС_КэшДанных_ПоЗаказам.Номенклатура
	|			И ЗаказыТовары.ХарактеристикаНоменклатуры = РС_КэшДанных_ПоЗаказам.ХарактеристикаНоменклатуры
	|			И ЗаказыТовары.ЗаказНаПроизводство = РС_КэшДанных_ПоЗаказам.ЗаказНаПроизводство
	|			И ЗаказыТовары.Комплектующая = РС_КэшДанных_ПоЗаказам.Комплектующая
	|			И ЗаказыТовары.ХарактеристикаКомплектующей = РС_КэшДанных_ПоЗаказам.ХарактеристикаКомплектующей
	|ГДЕ
	|	(ЕСТЬNULL(ЗаказыТовары.НужноУдалить, ИСТИНА)
	|			ИЛИ НЕ(ЗаказыТовары.ЕдиницаИзмерения = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))
	|					И ЗаказыТовары.ЗаказНаПроизводство.Подразделение = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|					И ЗаказыТовары.ЗаказНаПроизводство.СкладСборки = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.СкладСборки, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|					И ЗаказыТовары.ОсталосьПроизвести = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.ОсталосьПроизвести, НЕОПРЕДЕЛЕНО)
	|					И ЗаказыТовары.ОстатокВЦехе = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.ОстатокВЦехе, НЕОПРЕДЕЛЕНО)
	|					И ЗаказыТовары.ПланПоЗаказу = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.ПланПоЗаказу, НЕОПРЕДЕЛЕНО)
	|					И ЗаказыТовары.ПланДляСборкиТовара = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.ПланДляСборкиТовара, НЕОПРЕДЕЛЕНО)
	|					И ЗаказыТовары.Площадь = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.Площадь, НЕОПРЕДЕЛЕНО)
	|					И ЗаказыТовары.Машиночасы = ЕСТЬNULL(РС_КэшДанных_ПоЗаказам.Машиночасы, НЕОПРЕДЕЛЕНО)))";
	
	Запрос.УстановитьПараметр("ВремяОбновления", ТекущаяДата());
	ТЗ_КэшДанных_ПоЗаказам = Запрос.Выполнить().Выгрузить();	
	ТЗ_Заказы = ТЗ_КэшДанных_ПоЗаказам.Скопировать(,"ЗаказНаПроизводствоОснование,ЗаказНаПроизводство");
	ТЗ_Заказы.Свернуть( "ЗаказНаПроизводствоОснование,ЗаказНаПроизводство");
	Счетчик = 1;
	КэшДанных_ПоЗаказам=РегистрыСведений.БЗ_КэшДанных_ПоЗаказам.СоздатьНаборЗаписей();
	Для Каждого СтрокаЗаказа из ТЗ_Заказы Цикл
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.БЗ_КэшДанных_ПоЗаказам");
	    ЭлементБлокировки.УстановитьЗначение("ЗаказНаПроизводствоОснование", СтрокаЗаказа.ЗаказНаПроизводствоОснование);
	    ЭлементБлокировки.УстановитьЗначение("ЗаказНаПроизводство", СтрокаЗаказа.ЗаказНаПроизводство);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		Блокировка.Заблокировать();	
		КэшДанных_ПоЗаказам.Отбор.Сбросить();
		КэшДанных_ПоЗаказам.Отбор.ЗаказНаПроизводствоОснование.Установить(СтрокаЗаказа.ЗаказНаПроизводствоОснование);
		КэшДанных_ПоЗаказам.Отбор.ЗаказНаПроизводство.Установить(СтрокаЗаказа.ЗаказНаПроизводство);
		
		ТЗ_НоменклатураСтроки = ТЗ_КэшДанных_ПоЗаказам.НайтиСтроки(Новый Структура("ЗаказНаПроизводствоОснование, ЗаказНаПроизводство, НужноУдалить", СтрокаЗаказа.ЗаказНаПроизводствоОснование, СтрокаЗаказа.ЗаказНаПроизводство, ЛОЖЬ));
		ТЗ_Номенклатура = ТЗ_КэшДанных_ПоЗаказам.Скопировать(ТЗ_НоменклатураСтроки);
		КэшДанных_ПоЗаказам.Загрузить(ТЗ_Номенклатура);
		КэшДанных_ПоЗаказам.Записать(Истина);
		ЗафиксироватьТранзакцию();	
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьПрефикс() Экспорт
	Возврат "МФ";
КонецФункции

Функция ПолучитьПериодыСмен(НачалоПериода, КонецПериода, Подразделение = Неопределено, Участок = Неопределено, РазбиватьПоДням = Истина) Экспорт
	
	Если Подразделение = Неопределено Тогда Подразделение = Справочники.Подразделения.ПустаяСсылка() КонецЕсли;
	Если Участок = Неопределено Тогда Участок = Справочники.БЗ_Участки.ПустаяСсылка() КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БЗ_Участки_ВремяСменСрезПоследних.ТипСмены КАК ТипСмены,
	|	&НачалоПериода КАК Период,
	|	БЗ_Участки_ВремяСменСрезПоследних.Участок,
	|	БЗ_Участки_ВремяСменСрезПоследних.Начало,
	|	ВЫБОР
	|		КОГДА БЗ_Участки_ВремяСменСрезПоследних.Начало > БЗ_Участки_ВремяСменСрезПоследних.Конец
	|			ТОГДА ДОБАВИТЬКДАТЕ(БЗ_Участки_ВремяСменСрезПоследних.Конец, ДЕНЬ, 1)
	|		ИНАЧЕ БЗ_Участки_ВремяСменСрезПоследних.Конец
	|	КОНЕЦ КАК Конец,
	|	ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСменСрезПоследних.Начало, СЕКУНДА)) КАК ПериодНачало,
	|	ВЫБОР
	|		КОГДА БЗ_Участки_ВремяСменСрезПоследних.Начало > БЗ_Участки_ВремяСменСрезПоследних.Конец
	|			ТОГДА ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСменСрезПоследних.Конец, СЕКУНДА) + 24 * 60 * 60)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСменСрезПоследних.Конец, СЕКУНДА))
	|	КОНЕЦ КАК ПериодКонец
	|ПОМЕСТИТЬ Участки_ВремяСмен
	|ИЗ
	|	РегистрСведений.БЗ_Участки_ВремяСмен.СрезПоследних(
	|			&НачалоПериода,
	|			Участок = &Участок
	|				ИЛИ Участок.Подразделение = &Подразделение
	|					И &Участок = ЗНАЧЕНИЕ(Справочник.БЗ_Участки.ПустаяСсылка)) КАК БЗ_Участки_ВремяСменСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_Участки_ВремяСмен.ТипСмены,
	|	БЗ_Участки_ВремяСмен.Период,
	|	БЗ_Участки_ВремяСмен.Участок,
	|	БЗ_Участки_ВремяСмен.Начало,
	|	ВЫБОР
	|		КОГДА БЗ_Участки_ВремяСмен.Начало > БЗ_Участки_ВремяСмен.Конец
	|			ТОГДА ДОБАВИТЬКДАТЕ(БЗ_Участки_ВремяСмен.Конец, ДЕНЬ, 1)
	|		ИНАЧЕ БЗ_Участки_ВремяСмен.Конец
	|	КОНЕЦ,
	|	ДОБАВИТЬКДАТЕ(БЗ_Участки_ВремяСмен.Период, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСмен.Начало, СЕКУНДА)),
	|	ВЫБОР
	|		КОГДА БЗ_Участки_ВремяСмен.Начало > БЗ_Участки_ВремяСмен.Конец
	|			ТОГДА ДОБАВИТЬКДАТЕ(БЗ_Участки_ВремяСмен.Период, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСмен.Конец, СЕКУНДА) + 24 * 60 * 60)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(БЗ_Участки_ВремяСмен.Период, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСмен.Конец, СЕКУНДА))
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.БЗ_Участки_ВремяСмен КАК БЗ_Участки_ВремяСмен
	|ГДЕ
	|	БЗ_Участки_ВремяСмен.Период > &НачалоПериода
	|	И БЗ_Участки_ВремяСмен.Период < &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_Участки_ВремяСменСрезПоследних.ТипСмены,
	|	&КонецПериода,
	|	БЗ_Участки_ВремяСменСрезПоследних.Участок,
	|	БЗ_Участки_ВремяСменСрезПоследних.Начало,
	|	ВЫБОР
	|		КОГДА БЗ_Участки_ВремяСменСрезПоследних.Начало > БЗ_Участки_ВремяСменСрезПоследних.Конец
	|			ТОГДА ДОБАВИТЬКДАТЕ(БЗ_Участки_ВремяСменСрезПоследних.Конец, ДЕНЬ, 1)
	|		ИНАЧЕ БЗ_Участки_ВремяСменСрезПоследних.Конец
	|	КОНЕЦ,
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСменСрезПоследних.Начало, СЕКУНДА)),
	|	ВЫБОР
	|		КОГДА БЗ_Участки_ВремяСменСрезПоследних.Начало > БЗ_Участки_ВремяСменСрезПоследних.Конец
	|			ТОГДА ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСменСрезПоследних.Конец, СЕКУНДА) + 24 * 60 * 60)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), БЗ_Участки_ВремяСменСрезПоследних.Конец, СЕКУНДА))
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.БЗ_Участки_ВремяСмен.СрезПоследних(&КонецПериода, Участок.Подразделение = &Подразделение) КАК БЗ_Участки_ВремяСменСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремяСмен_Начало.ПериодНачало КАК ПериодНачало,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ВремяСмен_Конец.ПериодНачало, ДЕНЬ), ВремяСмен_Конец.ПериодНачало, СЕКУНДА) < РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), ВремяСмен_Начало.Начало, СЕКУНДА)
	|					И ВремяСмен_Период.ПериодНачало >= ВремяСмен_Конец.ПериодНачало
	|				ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВремяСмен_Конец.ПериодНачало, ДЕНЬ), СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), ВремяСмен_Начало.Конец, СЕКУНДА) - 24 * 60 * 60)
	|			ИНАЧЕ ВремяСмен_Период.ПериодНачало
	|		КОНЕЦ) КАК ПериодКонец,
	|	ВремяСмен_Начало.Участок,
	|	ВремяСмен_Начало.ТипСмены,
	|	ВремяСмен_Начало.Начало,
	|	ВремяСмен_Начало.Конец
	|ПОМЕСТИТЬ Участки_ПериодыСмен
	|ИЗ
	|	Участки_ВремяСмен КАК ВремяСмен_Начало
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Участки_ВремяСмен КАК ВремяСмен_Конец
	|		ПО ВремяСмен_Начало.Участок = ВремяСмен_Конец.Участок
	|			И ВремяСмен_Начало.ТипСмены = ВремяСмен_Конец.ТипСмены
	|			И ВремяСмен_Начало.ПериодКонец < ВремяСмен_Конец.ПериодНачало
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Участки_ВремяСмен КАК ВремяСмен_Период
	|		ПО ВремяСмен_Начало.Участок = ВремяСмен_Период.Участок
	|			И (ДОБАВИТЬКДАТЕ(ВремяСмен_Начало.ПериодНачало, ДЕНЬ, 1) < ВремяСмен_Период.ПериодНачало)
	|ГДЕ
	|	ВремяСмен_Начало.Начало <> ВремяСмен_Начало.Конец
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремяСмен_Начало.ПериодНачало,
	|	ВремяСмен_Начало.Участок,
	|	ВремяСмен_Начало.Начало,
	|	ВремяСмен_Начало.Конец,
	|	ВремяСмен_Начало.ТипСмены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Участки_ПериодыСмен.ПериодНачало,
	|	Участки_ПериодыСмен.ПериодКонец,
	|	Участки_ПериодыСмен.Участок,
	|	Участки_ПериодыСмен.ТипСмены,
	|	Участки_ПериодыСмен.Начало,
	|	Участки_ПериодыСмен.Конец
	|ИЗ
	|	Участки_ПериодыСмен КАК Участки_ПериодыСмен";

	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Участок", Участок);
	
	ПериодыСмен = Запрос.Выполнить().Выгрузить();
	
	Участки = ПериодыСмен.Скопировать(,"Участок");
	Участки.Свернуть("Участок");
	
	мПустаяДата = '00010101000000';
	
	Если РазбиватьПоДням Тогда
		ПериодыСменСРазбивкой = ПериодыСмен.СкопироватьКолонки();
		Для Каждого ТекУчасток из Участки Цикл
			НачалоСмены = НачалоПериода;
			НачалоСменыДо =  НачалоПериода-1;
			Отбор = Новый Структура ("Участок", ТекУчасток.Участок);
			ПериодыСменУчастка = ПериодыСмен.Скопировать(ПериодыСмен.НайтиСтроки(Отбор));
			Пока НачалоСмены < КонецПериода и НачалоСменыДо < НачалоСмены Цикл 
				Для Каждого Период из ПериодыСменУчастка Цикл
					НачалоСменыДо =  НачалоСмены;
					Если (НачалоСмены = НачалоПериода или НачалоСмены >= Период.ПериодНачало) и НачалоСмены < Период.ПериодКонец Тогда
						НачалоСменыПосле = НачалоДня(НачалоСмены) + (Период.Конец - мПустаяДата) + 1; 
						Если НачалоСменыДо >= НачалоСменыПосле Тогда
							Прервать;
						КонецЕсли;
						СтрокаСмены = ПериодыСменСРазбивкой.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСмены, Период);
						СтрокаСмены.ПериодНачало = НачалоДня(НачалоСмены) + (Период.Начало - мПустаяДата);
						СтрокаСмены.ПериодКонец  = НачалоДня(НачалоСмены) + (Период.Конец - мПустаяДата);
						НачалоСмены = НачалоСменыПосле; 
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		Возврат ПериодыСменСРазбивкой;
	Иначе
		Возврат ПериодыСмен;
	КонецЕсли;
КонецФункции

Функция ЭтоОсновнаяБД() Экспорт
	Возврат Истина;
КонецФункции

Функция ПолучитьОстаткиТЕ_ПолучитьРежимыПодробно() Экспорт
	РежимыПодробно = Новый Структура;
	РежимыПодробно.Вставить("СвернутоПоЗНП", "СВЁРНУТО ПО ЗНП");
	РежимыПодробно.Вставить("Свернуто","СВЁРНУТО");
	РежимыПодробно.Вставить("Подробно","ПОДРОБНО");
	Возврат РежимыПодробно;
КонецФункции

Функция ПолучитьОстатки_ПланОпераций(НаборФильтров, РежимПодробно = Неопределено) Экспорт
	РежимыПодробно = ПолучитьОстаткиТЕ_ПолучитьРежимыПодробно();
	ВозможныеФильтры = Новый Структура;
	ВозможныеФильтры.Вставить("Номенклатура","ИСТИНА");
	ВозможныеФильтры.Вставить("ДанныеНоменклатура","ИСТИНА");
	ВозможныеФильтры.Вставить("Операция","ИСТИНА");
	ВозможныеФильтры.Вставить("Участок","ИСТИНА");
	ВозможныеФильтры.Вставить("КлючИзделия","ИСТИНА");
	ВозможныеФильтры.Вставить("ЗаказНаПроизводство","ИСТИНА");
	ВозможныеФильтры.Вставить("Остаток","Остаток > 0");
	ВозможныеФильтры.Вставить("СтатусОстатков",Перечисления.БЗ_СтатусыОстатковНаУчастке.План);
	ВозможныеФильтры.Вставить("ТипДвиженияТСД",Справочники.БЗ_ТипыДвижений_ТСД.Завершен);
	
	Запрос = Новый Запрос;
	Для Каждого ТекФильтр из ВозможныеФильтры Цикл 
		Если ТекФильтр.Ключ = "СтатусОстатков" Тогда 
			Запрос.УстановитьПараметр("СтатусОстатков",ТекФильтр.Значение);
		ИначеЕсли ТекФильтр.Ключ = "ТипДвиженияТСД" Тогда 
			Запрос.УстановитьПараметр("ТипДвиженияТСД",ТекФильтр.Значение);
		КонецЕсли;		
		Если НаборФильтров.Свойство(ТекФильтр.Ключ) Тогда
			Если ТекФильтр.Ключ = "Номенклатура" Тогда //Тут еще характеристику цепляем 
				Если  РежимПодробно = Истина Или РежимПодробно = РежимыПодробно.Свернуто  Тогда  //Проверка на булево ававизм - НеИспользоватьХарактеристику
					ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"Номенклатура=&ДНоменклатура");
					ВозможныеФильтры.Вставить("Данные"+ТекФильтр.Ключ,"Данные.Номенклатура=&ДДанные.Номенклатура");
					Запрос.УстановитьПараметр("ДНоменклатура",НаборФильтров.Номенклатура);
				Иначе
					ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"Номенклатура=&ДНоменклатура И ХарактеристикаНоменклатуры=&ДХарактеристикаНоменклатуры");
					ВозможныеФильтры.Вставить("Данные"+ТекФильтр.Ключ,"Данные.Номенклатура=&ДНоменклатура И Данные.ХарактеристикаНоменклатуры=&ДХарактеристикаНоменклатуры");
					Запрос.УстановитьПараметр("ДНоменклатура",НаборФильтров.Номенклатура);
					Запрос.УстановитьПараметр("ДХарактеристикаНоменклатуры",
						?(НаборФильтров.Свойство("ХарактеристикаНоменклатуры"), НаборФильтров.ХарактеристикаНоменклатуры,
																Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));
				КонецЕсли;									
			ИначеЕсли ТекФильтр.Ключ = "СтатусОстатков" Тогда 
				Запрос.УстановитьПараметр("СтатусОстатков",НаборФильтров[ТекФильтр.Ключ]);
			ИначеЕсли ТекФильтр.Ключ = "ТипДвиженияТСД" Тогда 
				Запрос.УстановитьПараметр("ТипДвиженияТСД",НаборФильтров[ТекФильтр.Ключ]);															
			Иначе
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,""+ТекФильтр.Ключ+"=&Д"+ТекФильтр.Ключ);
				Запрос.УстановитьПараметр("Д"+ТекФильтр.Ключ,НаборФильтров[ТекФильтр.Ключ]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗапросТекст = 
	"ВЫБРАТЬ
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия КАК КлючИзделия,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Номенклатура КАК Номенклатура,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.КоличествоОстаток КАК Остаток,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Операция КАК Операция,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.Участок КАК Участок
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(
	|			,
	|			Статус = &СтатусОстатков
	|				И &ФильтрПоКлючИзделия
	|				И &ФильтрПоУчасток
	|				И &ФильтрПоНоменклатура) КАК БЗ_НезавершенноеПроизводство_ИзделияОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить,
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	-БЗ_ТСД_ТехнологическаяОперация.Количество,
	|	БЗ_ТСД_ТехнологическаяОперация.Операция,
	|	БЗ_ТСД_ТехнологическаяОперация.Участок
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТипДвиженияТСД = &ТипДвиженияТСД
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
	|	И &ФильтрПоНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить,
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	БЗ_ТСД_ТехнологическаяОперация.Количество,
	|	БЗ_ТСД_ТехнологическаяОперация.Операция,
	|	БЗ_ТСД_ТехнологическаяОперация.Участок
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТипДвиженияТСД = &ТипДвиженияТСД
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
	|	И &ФильтрПоНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БЗ_ПартииПроизводства_Параметры.МаршрутныйЛист КАК ДокументПлан,
	|	Данные.КлючИзделия КАК КлючИзделия,
	|	Данные.Номенклатура КАК Номенклатура,
	|	Данные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(Данные.Остаток) КАК Остаток,
	|	Данные.Операция КАК ОперацияОстаток,
	|	Данные.Участок КАК УчастокОстаток,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ПОМЕСТИТЬ ПланФакт
	|ИЗ
	|	Данные КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО Данные.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|ГДЕ
	|	&ФильтрПоДанныеНоменклатура
	|	И &ФильтрПоОперация
	|	И &ФильтрПоЗаказНаПроизводство
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Номенклатура,
	|	Данные.ХарактеристикаНоменклатуры,
	|	Данные.КлючИзделия,
	|	Данные.Операция,
	|	Данные.Участок,
	|	БЗ_ПартииПроизводства_Параметры.МаршрутныйЛист,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланФакт.ДокументПлан КАК ДокументПлан,
	|	ПланФакт.КлючИзделия КАК КлючИзделия,
	|	ПланФакт.Номенклатура КАК Номенклатура,
	|	ПланФакт.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПланФакт.Номенклатура.Наименование КАК ННоменклатура,
	|	ЕСТЬNULL(ПланФакт.ХарактеристикаНоменклатуры.Наименование, """") КАК НХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ПланФакт.Остаток) КАК Остаток,
	|	МАКСИМУМ(ПланФакт.Остаток) КАК Количество,
	|	ПланФакт.УчастокОстаток КАК УчастокОстаток,
	|	ПланФакт.ОперацияОстаток КАК ОперацияОстаток,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая КАК ОперацияСледующая,
	|	ЕСТЬNULL(БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.ОперацияСледующая, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)) КАК ОперацияСледующаяСледующая,
	|	ПланФакт.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПланФакт.ЗаказНаПроизводство, 0) = 0
	|				ИЛИ НЕ ПланФакт.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
	|				ИЛИ ПланФакт.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			ТОГДА ""---------""
	|		ИНАЧЕ ПланФакт.ЗаказНаПроизводство.Номер
	|	КОНЕЦ КАК НЗаказНаПроизводство
	|ИЗ
	|	ПланФакт КАК ПланФакт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(
	|				,
	|				Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.План)
	|					ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_НезавершенноеПроизводство_ИзделияОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.БЗ_НезавершенноеПроизводство_Изделия.Остатки(
	|					,
	|					Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.План)
	|						ИЛИ Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_СтатусыОстатковНаУчастке.Завершен)) КАК БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий
	|			ПО БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия = БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.КлючИзделия
	|				И БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая = БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.Операция
	|		ПО ПланФакт.КлючИзделия = БЗ_НезавершенноеПроизводство_ИзделияОстатки.КлючИзделия
	|			И ПланФакт.ОперацияОстаток = БЗ_НезавершенноеПроизводство_ИзделияОстатки.Операция
	|ГДЕ
	|	&ФильтрПоОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланФакт.ДокументПлан,
	|	ПланФакт.КлючИзделия,
	|	ПланФакт.Номенклатура,
	|	ПланФакт.ХарактеристикаНоменклатуры,
	|	БЗ_НезавершенноеПроизводство_ИзделияОстатки.ОперацияСледующая,
	|	ПланФакт.ОперацияОстаток,
	|	ЕСТЬNULL(БЗ_НезавершенноеПроизводство_ИзделияОстаткиСледующий.ОперацияСледующая, ЗНАЧЕНИЕ(Справочник.БЗ_ТехнологическиеОперации.ПустаяСсылка)),
	|	ПланФакт.Номенклатура.Наименование,
	|	ЕСТЬNULL(ПланФакт.ХарактеристикаНоменклатуры.Наименование, """"),
	|	ПланФакт.УчастокОстаток,
	|	ПланФакт.ЗаказНаПроизводство,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПланФакт.ЗаказНаПроизводство, 0) = 0
	|				ИЛИ НЕ ПланФакт.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
	|				ИЛИ ПланФакт.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			ТОГДА ""---------""
	|		ИНАЧЕ ПланФакт.ЗаказНаПроизводство.Номер
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ННоменклатура,
	|	НХарактеристикаНоменклатуры";
	Для Каждого ТекФильтр из ВозможныеФильтры Цикл 
		ЗапросТекст = СтрЗаменить(ЗапросТекст,"&ФильтрПо"+ТекФильтр.Ключ, ТекФильтр.Значение);
	КонецЦикла;
	Запрос.Текст = ЗапросТекст;
	БЗ_TSDAPI.ОтладкаЗапроса(Запрос, "ПолучитьОстатки_ПланОпераций");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьОстаткиТЕДерево(ТЕ,ДНоменклатура=Неопределено,ДХарактеристикаНоменклатуры=Неопределено) Экспорт
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(ДНоменклатура) Тогда
		ФильтрПоИзделиям="Номенклатура=&ДНомеклатура И ХарактеристикаНоменклатуры=&ДХарактеристикаНоменклатуры";
		Запрос.УстановитьПараметр("ДНомеклатура",ДНоменклатура);
		Запрос.УстановитьПараметр("ДХарактеристикаНоменклатуры",ДХарактеристикаНоменклатуры);
	Иначе
		ФильтрПоИзделиям="ИСТИНА";
	КонецЕсли;
	ЗапросТекст = 
	"ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчастках.Номенклатура КАК Номенклатура,
	|	БЗ_ОстаткиНаУчастках.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	БЗ_ОстаткиНаУчастках.КоличествоОстаток КАК Количество,
	|	БЗ_ОстаткиНаУчастках.Операция КАК Операция,
	|	БЗ_ОстаткиНаУчастках.КлючИзделия КАК КлючИзделия
	|ПОМЕСТИТЬ ОстаткиТЕ
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(, ТЕ = &ТЕ) КАК БЗ_ОстаткиНаУчастках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	-БЗ_ТСД_ТехнологическаяОперация.Количество,
	|	БЗ_ТСД_ТехнологическаяОперация.Операция,
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	БЗ_ТСД_ТехнологическаяОперация.Количество,
	|	БЗ_ТСД_ТехнологическаяОперация.Операция,
	|	БЗ_ТСД_ТехнологическаяОперация.КлючПоложить
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ = &ТЕ
	|	И БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТЕ.Номенклатура КАК Номенклатура,
	|	ОстаткиТЕ.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиТЕ.Операция КАК Операция,
	|	СУММА(ОстаткиТЕ.Количество) КАК Количество,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	|ПОМЕСТИТЬ ИтоговыеДанные
	|ИЗ
	|	ОстаткиТЕ КАК ОстаткиТЕ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ПартииПроизводства_Параметры КАК БЗ_ПартииПроизводства_Параметры
	|		ПО ОстаткиТЕ.КлючИзделия = БЗ_ПартииПроизводства_Параметры.КлючПартии
	|ГДЕ
	|	&ФильтрПоИзделиям
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТЕ.Номенклатура,
	|	ОстаткиТЕ.ХарактеристикаНоменклатуры,
	|	ОстаткиТЕ.Операция,
	|	БЗ_ПартииПроизводства_Параметры.ЗаказНаПроизводство,
	|	БЗ_ПартииПроизводства_Параметры.НоменклатурнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	ИтоговыеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИтоговыеДанные.Номенклатура.Наименование КАК ННоменклатура,
	|	ЕСТЬNULL(ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование, """") КАК НХарактеристикаНоменклатуры,
	|	ИтоговыеДанные.Операция КАК Операция,
	|	ИтоговыеДанные.Количество КАК Количество,
	|	ИтоговыеДанные.Количество КАК Остаток,
	|	ИтоговыеДанные.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ИтоговыеДанные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ИтоговыеДанные.НоменклатурнаяГруппа.Наименование КАК ННоменклатурнаяГруппа
	|ИЗ
	|	ИтоговыеДанные КАК ИтоговыеДанные
	|ГДЕ
	|	ИтоговыеДанные.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИтоговыеДанные.Номенклатура.Наименование,
	|	ИтоговыеДанные.ХарактеристикаНоменклатуры.Наименование
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Остаток)
	|ПО
	|	ЗаказНаПроизводство,
	|	НоменклатурнаяГруппа";
	Запрос.УстановитьПараметр("ТЕ",ТЕ);
	ЗапросТекст = СтрЗаменить(ЗапросТекст,"&ФильтрПоИзделиям", ФильтрПоИзделиям);
	Запрос.Текст = ЗапросТекст;
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
КонецФункции

Функция ПолучитьДоступныеТЕ(Номенклатура,ХарактеристикаНоменклатуры,Участок,РабочееМесто,ОперацияСледующая, КлючИзделия = Неопределено, РежимПодробно = Неопределено) Экспорт
	РежимыПодробно = ПолучитьОстаткиТЕ_ПолучитьРежимыПодробно();
	Запрос = Новый Запрос;
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	БЗ_ОстаткиНаУчасткахОстатки.ТЕ КАК ТЕ,
	|	БЗ_ОстаткиНаУчасткахОстатки.Номенклатура КАК Номенклатура,
	|	БЗ_ОстаткиНаУчасткахОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	БЗ_ТЕ_НаУчастке.РабочееМесто КАК РабочееМесто,
	|	БЗ_ТЕ_НаУчастке.ОперацияСледующая КАК ТЕОперация,
	|	БЗ_ОстаткиНаУчасткахОстатки.КоличествоОстаток КАК Остаток
	|ПОМЕСТИТЬ ДанныеПодготовка
	|ИЗ
	|	РегистрНакопления.БЗ_ОстаткиНаУчастках.Остатки(
	|			,
	|			ТЕ <> ЗНАЧЕНИЕ(Справочник.БЗ_ТЕ.ПустаяСсылка)
	|				И Участок = &Участок
	|				И Номенклатура = &Номенклатура
	|				И (ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|					ИЛИ &НеУчитыватьХарактеристику)
	|				И &КлючИзделия) КАК БЗ_ОстаткиНаУчасткахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ТЕ_НаУчастке КАК БЗ_ТЕ_НаУчастке
	|		ПО БЗ_ОстаткиНаУчасткахОстатки.ТЕ = БЗ_ТЕ_НаУчастке.ТЕ
	|ГДЕ
	|	БЗ_ТЕ_НаУчастке.Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_ТЕ_СтатусыНаУчастке.ВРаботе)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ,
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	БЗ_ТЕ_НаУчастке.РабочееМесто,
	|	БЗ_ТЕ_НаУчастке.ОперацияСледующая,
	|	БЗ_ТСД_ТехнологическаяОперация.Количество
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ТЕ_НаУчастке КАК БЗ_ТЕ_НаУчастке
	|		ПО БЗ_ТСД_ТехнологическаяОперация.ТЕ = БЗ_ТЕ_НаУчастке.ТЕ
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Положить)
	|	И БЗ_ТСД_ТехнологическаяОперация.Номенклатура = &Номенклатура
	|	И (БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|			ИЛИ &НеУчитыватьХарактеристику)
	|	И БЗ_ТЕ_НаУчастке.Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_ТЕ_СтатусыНаУчастке.ВРаботе)
	|	И БЗ_ТСД_ТехнологическаяОперация.Участок = &Участок
	|	И &КлючПоложить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БЗ_ТСД_ТехнологическаяОперация.ТЕ,
	|	БЗ_ТСД_ТехнологическаяОперация.Номенклатура,
	|	БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры,
	|	БЗ_ТЕ_НаУчастке.РабочееМесто,
	|	БЗ_ТЕ_НаУчастке.ОперацияСледующая,
	|	-БЗ_ТСД_ТехнологическаяОперация.Количество
	|ИЗ
	|	РегистрСведений.БЗ_ТСД_ТехнологическаяОперация КАК БЗ_ТСД_ТехнологическаяОперация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БЗ_ТЕ_НаУчастке КАК БЗ_ТЕ_НаУчастке
	|		ПО БЗ_ТСД_ТехнологическаяОперация.ТЕ = БЗ_ТЕ_НаУчастке.ТЕ
	|ГДЕ
	|	БЗ_ТСД_ТехнологическаяОперация.ВидДействия = ЗНАЧЕНИЕ(Перечисление.БЗ_ТСД_ВидыДействий.Взять)
	|	И БЗ_ТСД_ТехнологическаяОперация.Номенклатура = &Номенклатура
	|	И (БЗ_ТСД_ТехнологическаяОперация.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|			ИЛИ &НеУчитыватьХарактеристику)
	|	И БЗ_ТЕ_НаУчастке.Статус = ЗНАЧЕНИЕ(Перечисление.БЗ_ТЕ_СтатусыНаУчастке.ВРаботе)
	|	И БЗ_ТСД_ТехнологическаяОперация.Участок = &Участок
	|	И &КлючПоложить
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПодготовка.ТЕ КАК ТЕ,
	|	ДанныеПодготовка.РабочееМесто КАК РабочееМесто,
	|	ДанныеПодготовка.ТЕОперация КАК ТЕОперация,
	|	СУММА(ДанныеПодготовка.Остаток) КАК Остаток
	|ПОМЕСТИТЬ ДанныеПодготовка2
	|ИЗ
	|	ДанныеПодготовка КАК ДанныеПодготовка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПодготовка.ТЕ,
	|	ДанныеПодготовка.РабочееМесто,
	|	ДанныеПодготовка.ТЕОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПодготовка2.ТЕ КАК ТЕ,
	|	ДанныеПодготовка2.ТЕ.Наименование КАК НТипТЕ,
	|	ДанныеПодготовка2.РабочееМесто КАК РабочееМесто,
	|	ЗНАЧЕНИЕ(Справочник.БЗ_ТипыТЕ.ПустаяСсылка) КАК ТипТЕ,
	|	ВЫБОР
	|		КОГДА ДанныеПодготовка2.РабочееМесто = &РабочееМесто
	|			ТОГДА -1
	|		ИНАЧЕ 1000
	|	КОНЕЦ КАК Сортировка
	|ИЗ
	|	ДанныеПодготовка2 КАК ДанныеПодготовка2
	|ГДЕ
	|	ДанныеПодготовка2.ТЕОперация = &ТЕОперация
	|	И ДанныеПодготовка2.Остаток > 0";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("Участок", Участок);
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	Запрос.УстановитьПараметр("ТЕОперация", ОперацияСледующая);
	Если РежимПодробно = Истина Или РежимПодробно = РежимыПодробно.Свернуто Тогда   //Проверка на булево ававизм - НеИспользоватьХарактеристику
		НеУчитыватьХарактеристику = Истина;
	Иначе
		НеУчитыватьХарактеристику = Ложь;
	КонецЕсли;
	Запрос.УстановитьПараметр("НеУчитыватьХарактеристику", НеУчитыватьХарактеристику);
	Если ЗначениеЗаполнено(КлючИзделия) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&КлючИзделия","КлючИзделия = &КлючИзделия");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&КлючПоложить","БЗ_ТСД_ТехнологическаяОперация.КлючПоложить = &КлючПоложить");
		Запрос.УстановитьПараметр("КлючИзделия", КлючИзделия);
		Запрос.УстановитьПараметр("КлючПоложить", КлючИзделия);
	Иначе
		Запрос.УстановитьПараметр("КлючИзделия", Истина);
		Запрос.УстановитьПараметр("КлючПоложить", Истина);
	КонецЕсли;	
	БЗ_TSDAPI.ОтладкаЗапроса(Запрос, "ПолучитьДоступныеТЕ");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьФормулуСводногоПорядка () Экспорт
	Возврат "10000-ЕСТЬNULL(БЗ_ПартииПроизводства_Порядок.ПорядокПартии, 1000) * 10 + ЕСТЬNULL(БЗ_ПартииПроизводства_Порядок.ПорядокВнутриПартии, 0) + ЕСТЬNULL(БЗ_ПартииПроизводства_Порядок.ПорядокОбработки, 0) + ЕСТЬNULL(БЗ_ПартииПроизводства_Порядок.ПорядокВариантНаладки, 0) + ЕСТЬNULL(БЗ_ПартииПроизводства_Порядок.ПорядокРМ, 0)";
КонецФункции
	
Функция ПолучитьДоступныеРМ(НаборФильтров=Неопределено) Экспорт
	ВозможныеФильтры = Новый Структура;
	
	ВозможныеФильтры.Вставить("Сотрудник","ИСТИНА");
	ВозможныеФильтры.Вставить("Участок","ИСТИНА");
	ВозможныеФильтры.Вставить("ГруппаРабочихМест","ИСТИНА");
	ВозможныеФильтры.Вставить("РабочееМесто","ИСТИНА");
	ВозможныеФильтры.Вставить("ОсновнаяОперация","ИСТИНА");
	
	Запрос = Новый Запрос;
	Для Каждого ТекФильтр из ВозможныеФильтры Цикл 
		Если НаборФильтров.Свойство(ТекФильтр.Ключ) Тогда
			Если ТекФильтр.Ключ = "Сотрудник" Тогда //Тут еще характеристику цепляем 
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"БЗ_Сотрудники_ТСДУчастки.Ссылка = &ДСотрудник");
				Запрос.УстановитьПараметр("ДСотрудник",НаборФильтров.Сотрудник);
			ИначеЕсли ТекФильтр.Ключ = "Участок" Тогда 
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"БЗ_Сотрудники_ТСДУчастки.Участок = &ДУчасток");
				Запрос.УстановитьПараметр("ДУчасток",НаборФильтров.Участок);
			ИначеЕсли ТекФильтр.Ключ = "ГруппаРабочихМест" Тогда 
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"
				|	ВЫБОР
				|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
				|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_ГруппыРабочихМест.ПустаяСсылка)) = &ДГруппаРабочихМест
				|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БЗ_ГруппыРабочихМест.ПустаяСсылка) = &ДГруппаРабочихМест
				|	КОНЕЦ
				|");
				Запрос.УстановитьПараметр("ДГруппаРабочихМест",НаборФильтров.ГруппаРабочихМест);
			ИначеЕсли ТекФильтр.Ключ = "ОсновнаяОперация" Тогда 
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"
				|	ВЫБОР
				|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
				|			ТОГДА БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.ОсновнаяОперация = &ДОсновнаяОперация
				|		ИНАЧЕ БЗ_Сотрудники_ТСДУчастки.РабочееМесто.ОсновнаяОперация  = &ДОсновнаяОперация
				|	КОНЕЦ
				|");
				Запрос.УстановитьПараметр("ДОсновнаяОперация",НаборФильтров.ОсновнаяОперация);           
			ИначеЕсли ТекФильтр.Ключ = "РабочееМесто" Тогда 
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,"
				|	ВЫБОР
				|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
				|			ТОГДА БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто = &ДРабочееМесто
				|		ИНАЧЕ БЗ_Сотрудники_ТСДУчастки.РабочееМесто  = &ДРабочееМесто
				|	КОНЕЦ
				|");
				Запрос.УстановитьПараметр("ДРабочееМесто",НаборФильтров.РабочееМесто);           
			Иначе
				ВозможныеФильтры.Вставить(ТекФильтр.Ключ,""+ТекФильтр.Ключ+"=&Д"+ТекФильтр.Ключ);
				Запрос.УстановитьПараметр("Д"+ТекФильтр.Ключ,НаборФильтров[ТекФильтр.Ключ]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗапросТекст = 
		"ВЫБРАТЬ
		|	БЗ_Сотрудники_ТСДУчастки.Участок КАК Участок,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_ГруппыРабочихМест.ПустаяСсылка))
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БЗ_ГруппыРабочихМест.ПустаяСсылка)
		|	КОНЕЦ КАК ГруппаРабочихМест,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка))
		|	КОНЕЦ КАК РабочееМесто,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.НаименованиеТСД, """")
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.НаименованиеТСД, """")
		|	КОНЕЦ КАК ТРабочееМесто,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.НаименованиеТСД, """")
		|		ИНАЧЕ ""БЕЗ ГРУППЫ""
		|	КОНЕЦ КАК ТГруппаРабочихМест,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.Наименование, ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.Наименование, """")
		|	КОНЕЦ КАК НРабочееМесто,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.Наименование, """")
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НГруппаРабочихМест,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.ЭтоБуфер, ЛОЖЬ)
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.ЭтоБуфер, ЛОЖЬ)
		|	КОНЕЦ КАК ЭтоБуфер
		|ИЗ
		|	Справочник.БЗ_Сотрудники_ТСД.Участки КАК БЗ_Сотрудники_ТСДУчастки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БЗ_ГруппыРабочихМест.ДоступныеРабочиеМеста КАК БЗ_ГруппыРабочихМестДоступныеРабочиеМеста
		|		ПО (ВЫБОР
		|				КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|					ТОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто = БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.Ссылка
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|ГДЕ
		|	&ФильтрПоСотрудник
		|	И &ФильтрПоУчасток
		|	И &ФильтрПоГруппаРабочихМест
		|	И &ФильтрПоРабочееМесто
		|	И &ФильтрПоОсновнаяОперация
		|	И БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.Ссылка.Архив = ЛОЖЬ
		|	И ВЫБОР
		|			КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|				ТОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто.Архив = ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|				ТОГДА БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.Архив = ЛОЖЬ
		|			ИНАЧЕ БЗ_Сотрудники_ТСДУчастки.РабочееМесто.Архив = ЛОЖЬ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_ГруппыРабочихМест.ПустаяСсылка))
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БЗ_ГруппыРабочихМест.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.НаименованиеТСД, """")
		|		ИНАЧЕ ""БЕЗ ГРУППЫ""
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто, ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка))
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.НаименованиеТСД, """")
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.НаименованиеТСД, """")
		|	КОНЕЦ,
		|	БЗ_Сотрудники_ТСДУчастки.Участок,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.Наименование, ЗНАЧЕНИЕ(Справочник.БЗ_РабочиеМеста.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.Наименование, """")
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_ГруппыРабочихМестДоступныеРабочиеМеста.РабочееМесто.ЭтоБуфер, ЛОЖЬ)
		|		ИНАЧЕ ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.ЭтоБуфер, ЛОЖЬ)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА БЗ_Сотрудники_ТСДУчастки.РабочееМесто ССЫЛКА Справочник.БЗ_ГруппыРабочихМест
		|			ТОГДА ЕСТЬNULL(БЗ_Сотрудники_ТСДУчастки.РабочееМесто.Наименование, """")
		|		ИНАЧЕ """"
		|	КОНЕЦ";
	
	Для Каждого ТекФильтр из ВозможныеФильтры Цикл 
		ЗапросТекст = СтрЗаменить(ЗапросТекст,"&ФильтрПо"+ТекФильтр.Ключ, ТекФильтр.Значение);
	КонецЦикла;
	Запрос.Текст = ЗапросТекст;
	БЗ_TSDAPI.ОтладкаЗапроса(Запрос, "ПолучитьДоступныеРМ");
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
