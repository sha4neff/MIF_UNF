
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Объект.ПериодРегистрации = КонецМесяца(Параметры.ПериодРегистрации);
	Иначе
		Объект.ПериодРегистрации = КонецМесяца(ТекущаяДатаСеанса());
	КонецЕсли; 
	ОтображениеПериодаРегистрации = Формат(Объект.ПериодРегистрации, "ДФ='MMMM yyyy'");
	ЗаполнитьОрганизацииСЗадолженностями();
	Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 1/3)'");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И СтрНайти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		Объект.ПериодРегистрации = КонецМесяца(ВыбранноеЗначение);
		УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	Если ТаблицаПолучателей.Количество() = 1 Тогда
		Получатель = ТаблицаПолучателей[0].Получатель;
	Иначе
		Получатель = Элементы.ТаблицаПолучателей.ТекущиеДанные.Получатель;
	КонецЕсли;
	СформироватьДокументыСервер(Получатель);
	НастроитьЗаголовокИКнопкиПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПолучателей(Команда)
	ОбновитьПолучателейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКНастройкамФормирования(Команда)
	Если ТаблицаПолучателей.Количество() = 1 Тогда
		Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(НастройкиПередачи, "ОрганизацияПродавец", ТаблицаПолучателей[0].Получатель,
			ВидСравненияКомпоновкиДанных.Равно, НСтр("ru='Получатель'"), Истина);
		НастроитьЗаголовокИКнопкиПоУмолчанию();
	Иначе
		ТекДанные = Элементы.ТаблицаПолучателей.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
				Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи;
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка( НастройкиПередачи, "ОрганизацияПродавец", ТекДанные.Получатель,
					ВидСравненияКомпоновкиДанных.Равно, НСтр("ru='Получатель'"), Истина);
				НастроитьЗаголовокИКнопкиПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазадКВыборуОрганизации(Команда)
	Если Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи Тогда
		Элементы.Основная.ТекущаяСтраница = Элементы.ВыборОрганизации;
	Иначе
		Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи;
	КонецЕсли;
	НастроитьЗаголовокИКнопкиПоУмолчанию();
КонецПроцедуры

//Процедура обработчик события начала ввода данных поля Объект.ПериодРегистрации
//
&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка	 = Ложь;
	
	ДатаКалендаряПриОткрытии = ?(ЗначениеЗаполнено(Объект.ПериодРегистрации), Объект.ПериодРегистрации, УправлениеНебольшойФирмойПовтИсп.ПолучитьТекущуюДатаСеанса());
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", УправлениеНебольшойФирмойКлиент.ПолучитьПараметрыОткрытияФормыКалендаря(ДатаКалендаряПриОткрытии), ЭтаФорма);
	
КонецПроцедуры //Объект.ПериодРегистрацииНачалоВыбора()

//Процедура обработчик события регулирования поля Объект.ПериодРегистрации
//
&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойКлиент.ПриРегулированииПериодаРегистрации(ЭтаФорма, Направление);
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	
КонецПроцедуры //Объект.ПериодРегистрацииРегулирование()

&НаКлиенте
Процедура СозданныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение( ,Элементы.СозданныеДокументы.ТекущиеДанные.ДокументПередачаТоваров);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОрганизацииСЗадолженностями()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РезервыТоваровОрганизацийОстатки.Организация КАК Получатель
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			&ПериодРегистрации,
	|			Организация В
	|				(ВЫБРАТЬ
	|					РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец
	|				ИЗ
	|					РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями)) КАК РезервыТоваровОрганизацийОстатки");
	
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	ТаблицаПолучателей.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ТаблицаПолучателей.Количество() = 1 Тогда
		Элементы.ТаблицаПолучателей.Видимость  = Ложь;
		Элементы.ДекорацияПолучатель.Видимость = Истина;
		Элементы.ГруппаЗаголовок1Этап.Видимость = Ложь;
		Элементы.ДекорацияПолучатель.Заголовок = НСтр("ru = 'Организация-получатель: '")+ ТаблицаПолучателей[0].Получатель;
	Иначе
		Элементы.ТаблицаПолучателей.Видимость  = Истина;
		Элементы.ГруппаЗаголовок1Этап.Видимость = Истина;
		Элементы.ДекорацияПолучатель.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПолучателейНаСервере()
	ЗаполнитьОрганизацииСЗадолженностями();
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыСервер(ОрганизацияПолучатель)
	
	СозданныеДокументы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Получатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца КАК КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец КАК КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ВтНастройкаПередачиТоваровМеждуОрганизациями
	|ИЗ
	|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|ГДЕ
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = &Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ) КАК Период,
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Документ,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца КАК КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец КАК КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта КАК Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦены,
	|	Резервы.Номенклатура КАК Номенклатура,
	|	Резервы.Характеристика КАК Характеристика,
	|	Резервы.Партия КАК Партия,
	|	Резервы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Резервы.Ячейка КАК Ячейка,
	|	СУММА(Резервы.Количество) КАК Количество,
	|	Резервы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена / ВЫБОР
	|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЦеныНоменклатуры.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 0) КАК Цена
	|ПОМЕСТИТЬ ВТРезультирующаяТаблица
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|		ПО (Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Резервы.Период <= &ПериодРегистрации)
	|			И (Резервы.Организация = &Получатель)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = Резервы.Организация)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец = Резервы.КорОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|		ПО (ПередачаТоваровМеждуОрганизациями.Дата = НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ))
	|			И Резервы.Организация = ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель
	|			И Резервы.КорОрганизация = ПередачаТоваровМеждуОрганизациями.Организация
	|			И (ПередачаТоваровМеждуОрганизациями.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоТребуетЗаполнения))
	|			И (НЕ ПередачаТоваровМеждуОрганизациями.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РезервыТоваровОрганизаций.Период КАК Период,
	|			ЦеныНоменклатуры.ВидЦен КАК ВидЦен,
	|			РезервыТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|			РезервыТоваровОрганизаций.Характеристика КАК Характеристика,
	|			МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ПериодЦены
	|		ИЗ
	|			РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтНастройкаПередачиТоваровМеждуОрганизациями КАК ВтНастройкаПередачиТоваровМеждуОрганизациями
	|				ПО РезервыТоваровОрганизаций.Организация = ВтНастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец
	|					И РезервыТоваровОрганизаций.КорОрганизация = ВтНастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|				ПО (ВтНастройкаПередачиТоваровМеждуОрганизациями.ВидЦены = ЦеныНоменклатуры.ВидЦен)
	|					И РезервыТоваровОрганизаций.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|					И РезервыТоваровОрганизаций.Характеристика = ЦеныНоменклатуры.Характеристика
	|					И (ЦеныНоменклатуры.Период <= РезервыТоваровОрганизаций.Период)
	|		ГДЕ
	|			РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РезервыТоваровОрганизаций.Период,
	|			РезервыТоваровОрганизаций.Номенклатура,
	|			РезервыТоваровОрганизаций.Характеристика,
	|			ЦеныНоменклатуры.ВидЦен) КАК ПериодыЦен
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ПериодыЦен.ПериодЦены = ЦеныНоменклатуры.Период
	|				И ПериодыЦен.ВидЦен = ЦеныНоменклатуры.ВидЦен
	|				И ПериодыЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ПериодыЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|		ПО Резервы.Период = ПериодыЦен.Период
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены = ПериодыЦен.ВидЦен)
	|			И Резервы.Номенклатура = ПериодыЦен.Номенклатура
	|			И Резервы.Характеристика = ПериодыЦен.Характеристика
	|ГДЕ
	|	Резервы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Резервы.Период, ДЕНЬ),
	|	ПередачаТоваровМеждуОрганизациями.Ссылка,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентВладельца,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Валюта,
	|	НастройкаПередачиТоваровМеждуОрганизациями.КонтрагентПродавец,
	|	НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров,
	|	Резервы.ХозяйственнаяОперация,
	|	Резервы.Номенклатура,
	|	Резервы.Характеристика,
	|	Резервы.Партия,
	|	Резервы.СтруктурнаяЕдиница,
	|	Резервы.Ячейка,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена / ВЫБОР
	|			КОГДА ЦеныНоменклатуры.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЦеныНоменклатуры.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРезультирующаяТаблица.Период КАК Период,
	|	ВТРезультирующаяТаблица.Документ КАК Документ,
	|	ВТРезультирующаяТаблица.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ВТРезультирующаяТаблица.ОрганизацияПродавец КАК ОрганизацияПродавец,
	|	ВТРезультирующаяТаблица.КонтрагентВладельца КАК КонтрагентВладельца,
	|	ВТРезультирующаяТаблица.КонтрагентПродавец КАК КонтрагентПродавец,
	|	ВТРезультирующаяТаблица.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВТРезультирующаяТаблица.Валюта КАК Валюта,
	|	ВТРезультирующаяТаблица.Договор КАК Договор,
	|	ВТРезультирующаяТаблица.ВидЦены КАК ВидЦены,
	|	ВТРезультирующаяТаблица.Номенклатура КАК Номенклатура,
	|	ВТРезультирующаяТаблица.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТРезультирующаяТаблица.Номенклатура.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	ВТРезультирующаяТаблица.Характеристика КАК Характеристика,
	|	ВТРезультирующаяТаблица.Партия КАК Партия,
	|	ВТРезультирующаяТаблица.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТРезультирующаяТаблица.Ячейка КАК Ячейка,
	|	ВТРезультирующаяТаблица.Количество КАК Количество,
	|	ВТРезультирующаяТаблица.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВТРезультирующаяТаблица.Цена КАК Цена,
	|	ВТРезультирующаяТаблица.ВидЦены.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	ВТРезультирующаяТаблица КАК ВТРезультирующаяТаблица
	|ИТОГИ ПО
	|	Период,
	|	ОрганизацияВладелец";
	
	ВыборкаПоПериоду = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПериоду.Следующий() Цикл
		ВыборкаПоОрганизации = ВыборкаПоПериоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоОрганизации.Следующий() Цикл
			
			ЕстьОшибкаЗаполнения = Ложь;
			ВыборкаПоНоменклатуре = ВыборкаПоОрганизации.Выбрать();
			ВыборкаПоНоменклатуре.Следующий();
			// заполнение документа по умолчанию
			Если Не ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Документ) Тогда
				// Создание нового документа
				ПередачаТоваровМеждуОрганизациями = Документы.ПередачаТоваровМеждуОрганизациями.СоздатьДокумент();
			Иначе
				ПередачаТоваровМеждуОрганизациями = ВыборкаПоНоменклатуре.Документ.ПолучитьОбъект();
				ПередачаТоваровМеждуОрганизациями.Запасы.Очистить();
			КонецЕсли;
			ПередачаТоваровМеждуОрганизациями.Заполнить(Неопределено);
			ПередачаТоваровМеждуОрганизациями.Дата = НачалоДня(ВыборкаПоНоменклатуре.Период);
			ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = ВыборкаПоНоменклатуре.Валюта;
			Если НЕ ЗначениеЗаполнено(ПередачаТоваровМеждуОрганизациями.ВалютаДокумента) Тогда
				ПередачаТоваровМеждуОрганизациями.ВалютаДокумента = Константы.ВалютаУчета.Получить();
			КонецЕсли; 
			КурсыВалют = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				ПередачаТоваровМеждуОрганизациями.ВалютаДокумента, 
				ПередачаТоваровМеждуОрганизациями.Дата);
			ПередачаТоваровМеждуОрганизациями.Курс = КурсыВалют.Курс;
			ПередачаТоваровМеждуОрганизациями.Кратность = КурсыВалют.Кратность;
			ПередачаТоваровМеждуОрганизациями.Организация = ВыборкаПоНоменклатуре.ОрганизацияВладелец;
			ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = ВыборкаПоНоменклатуре.ОрганизацияПродавец;
			ПередачаТоваровМеждуОрганизациями.КонтрагентВладелец = ВыборкаПоНоменклатуре.КонтрагентВладельца;
			ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель = ВыборкаПоНоменклатуре.КонтрагентПродавец;
			ПередачаТоваровМеждуОрганизациями.НДСВключатьВСтоимость = Истина;
			ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница = ВыборкаПоНоменклатуре.СтруктурнаяЕдиница;
			ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС = Истина;
			ПередачаТоваровМеждуОрганизациями.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
			ПередачаТоваровМеждуОрганизациями.ВидЦен = ВыборкаПоНоменклатуре.ВидЦены;
			
			ПередачаТоваровМеждуОрганизациями.Договор = ВыборкаПоНоменклатуре.Договор;
			ПередачаТоваровМеждуОрганизациями.Автор = Пользователи.ТекущийПользователь();
			ПередачаТоваровМеждуОрганизациями.ВидОперации = Перечисления.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоЗаполнен;
			
			ВыборкаПоНоменклатуре.Сбросить();
			
			Пока ВыборкаПоНоменклатуре.Следующий() Цикл
				
				НоваяСтрокаЗапасов = ПередачаТоваровМеждуОрганизациями.Запасы.Добавить();
				ЗаполнитьЗначенияСвойств(
					НоваяСтрокаЗапасов, 
					ВыборкаПоНоменклатуре,
					"Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, СтруктурнаяЕдиница, Ячейка, Количество, Цена");
				НоваяСтрокаЗапасов.ТипНоменклатурыЗапас = Истина;
				НоваяСтрокаЗапасов.СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(ВыборкаПоНоменклатуре.ВидСтавкиНДС);
				Если НоваяСтрокаЗапасов.Цена = 0 Тогда
					ЕстьОшибкаЗаполнения = Истина;
				КонецЕсли;
				Если ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС <> ВыборкаПоНоменклатуре.ЦенаВключаетНДС Тогда
					НоваяСтрокаЗапасов.Цена = УправлениеНебольшойФирмойСервер.ПересчитатьСуммуПриИзмененииФлаговНДС(
						НоваяСтрокаЗапасов.Цена,
						ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС, 
						НоваяСтрокаЗапасов.СтавкаНДС);
				КонецЕсли;
				НоваяСтрокаЗапасов.Сумма = НоваяСтрокаЗапасов.Цена * НоваяСтрокаЗапасов.Количество;
				УправлениеНебольшойФирмойКлиентСервер.РассчитатьСуммуНДСИВсего(НоваяСтрокаЗапасов, Новый Структура("СуммаВключаетНДС", ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС));
				
				Если ВыборкаПоНоменклатуре.СтруктурнаяЕдиница <> ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница
					И ПередачаТоваровМеждуОрганизациями.ПоложениеСклада <> Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
					ПередачаТоваровМеждуОрганизациями.ПоложениеСклада = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
				КонецЕсли; 
				
			КонецЦикла;
			
			Попытка
				ПередачаТоваровМеждуОрганизациями.Записать(?(ЕстьОшибкаЗаполнения, РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.Проведение));
			Исключение
				ПередачаТоваровМеждуОрганизациями.Записать(РежимЗаписиДокумента.Запись);
			КонецПопытки;
			
			НоваяСтрокаИтогов = СозданныеДокументы.Добавить();
			НоваяСтрокаИтогов.ДокументПередачаТоваров = ПередачаТоваровМеждуОрганизациями.Ссылка;
			Если ЕстьОшибкаЗаполнения Тогда
				НоваяСтрокаИтогов.Статус = НСтр("ru = 'Установите цены товаров в документе'");
			Иначе
				НоваяСтрокаИтогов.Статус = НСтр("ru = 'Документ создан успешно'");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Элементы.Основная.ТекущаяСтраница = Элементы.СформированныеДокументы;
	
	ОчиститьРегистрРезервыТоваровОрганизаций(ОрганизацияПолучатель);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРегистрРезервыТоваровОрганизаций(ОрганизацияПолучатель)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Получатель", ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Резервы.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|ГДЕ
	|	Резервы.Период <= &ПериодРегистрации
	|	И Резервы.Организация = &Получатель";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
		Набор.Отбор.Регистратор.Значение = Выборка.Регистратор;
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗаголовокИКнопкиПоУмолчанию()
	Если Элементы.Основная.ТекущаяСтраница = Элементы.ВыборОрганизации Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 1/3)'");
		Элементы.ПерейтиКНастройкамФормирования.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.Основная.ТекущаяСтраница = Элементы.СтраницаНастройкиПередачи Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 2/3)'");
		Элементы.СформироватьДокументы.КнопкаПоУмолчанию = Истина;
	ИначеЕсли Элементы.Основная.ТекущаяСтраница = Элементы.СформированныеДокументы Тогда
		Заголовок = НСтр("ru = 'Оформление передачи товаров между организациями (шаг 3/3)'");
		Элементы.Закрыть.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

