
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаПоказаВыполненныхЗначение=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НавигаторЗадач", "ДатаПоказаВыполненных");
	ДатаПоказаВыполненныхИсполнителямиЗначение=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НавигаторЗадач", "ДатаПоказаВыполненныхИсполнителями");
	
	Если ДатаПоказаВыполненныхИсполнителямиЗначение=Неопределено Тогда
		Объект.ДатаПоказаВыполненныхИсполнителями=НачалоГода(ТекущаяДата());
	Иначе
		Объект.ДатаПоказаВыполненныхИсполнителями=ДатаПоказаВыполненныхИсполнителямиЗначение;
	КонецЕсли;
	
	Если ДатаПоказаВыполненныхЗначение=Неопределено Тогда
		Объект.ДатаПоказаВыполненных=НачалоГода(ТекущаяДата());
	Иначе
		Объект.ДатаПоказаВыполненных=ДатаПоказаВыполненныхЗначение;
	КонецЕсли;
	
	ПоказыватьПредпросмотрЗначение=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НавигаторЗадач", "ПоказыватьПредпросмотр");
	ПоказыватьСтрокуПоискаЗначение=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НавигаторЗадач", "ПоказыватьСтрокуПоиска");
	
	Если ДатаПоказаВыполненныхЗначение=Неопределено Тогда
		Объект.ПоказыватьПредпросмотр=Истина;
	Иначе
		Объект.ПоказыватьПредпросмотр=ПоказыватьПредпросмотрЗначение;
	КонецЕсли;
	
	Если ПоказыватьСтрокуПоискаЗначение=Неопределено Тогда
		Объект.ПоказыватьСтрокуПоиска=Ложь;
	Иначе
		Объект.ПоказыватьСтрокуПоиска=ПоказыватьСтрокуПоискаЗначение;
	КонецЕсли;
	
	ПоказыватьПростыеЗадачиНаРабочемСтоле=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("РабочийСтол", "ПоказыватьПростыеЗадачиНаРабочемСтоле");
	
	ИнтервалПросрочкиМинутЗначение=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НавигаторЗадач", "ИнтервалПросрочкиМинут");
	
	Если ИнтервалПросрочкиМинутЗначение=Неопределено Тогда
		Объект.ИнтервалПросрочкиМинут=0;
	Иначе
		Объект.ИнтервалПросрочкиМинут=ИнтервалПросрочкиМинутЗначение;
	КонецЕсли;
	
	ИнтервалПросрочкиИсполнителейМинутЗначение=ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НавигаторЗадач", "ИнтервалПросрочкиИсполнителейМинут");
	
	Если ИнтервалПросрочкиИсполнителейМинутЗначение=Неопределено Тогда
		Объект.ИнтервалПросрочкиИсполнителейМинут=0;
	Иначе
		Объект.ИнтервалПросрочкиИсполнителейМинут=ИнтервалПросрочкиИсполнителейМинутЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиСервером()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НавигаторЗадач", "ДатаПоказаВыполненных", Объект.ДатаПоказаВыполненных);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НавигаторЗадач", "ДатаПоказаВыполненныхИсполнителями", Объект.ДатаПоказаВыполненныхИсполнителями);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НавигаторЗадач", "ПоказыватьПредпросмотр", Объект.ПоказыватьПредпросмотр);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НавигаторЗадач", "ПоказыватьСтрокуПоиска", Объект.ПоказыватьСтрокуПоиска);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("РабочийСтол", "ПоказыватьПростыеЗадачиНаРабочемСтоле", ПоказыватьПростыеЗадачиНаРабочемСтоле);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НавигаторЗадач", "ИнтервалПросрочкиМинут", Объект.ИнтервалПросрочкиМинут);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НавигаторЗадач", "ИнтервалПросрочкиИсполнителейМинут", Объект.ИнтервалПросрочкиИсполнителейМинут);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Если Модифицированность Тогда
		СохранитьНастройкиСервером();
		Модифицированность=Ложь;
		Закрыть("ОК");
	Иначе
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность И НЕ ЗавершениеРаботы Тогда
		СтандартнаяОбработка=Ложь;
		Отказ=Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("Оповещение_ОтветНаВопросОЗакрытии", ЭтаФорма, Новый Структура), "Параметры не сохранены. Закрыть?", РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оповещение_ОтветНаВопросОЗакрытии(Результат, ДопПараметры) Экспорт
	Если Результат=КодВозвратаДиалога.Нет Тогда
		Модифицированность=Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиСервером();
	Модифицированность=Ложь;
	Закрыть("ОК");
	
КонецПроцедуры
