#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ КП_ОбщееСерверПС.ЭтоРольПолныеПрава() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Available only to users with full rights.';ru='Внимание! Доступно только для пользователей с полными правами.'"));
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОчиститьБизнесПроцессы()
	
	ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	КП_БизнесПроцесс.Ссылка
	             |ИЗ
	             |	БизнесПроцесс.КП_БизнесПроцесс КАК КП_БизнесПроцесс
	             |ГДЕ
	             |	КП_БизнесПроцесс.ПометкаУдаления = ИСТИНА";
							
	Запрос=Новый Запрос(ТекстЗапроса);
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	СписокБизнесПроцессов=Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		БизнесПроцессСсылка=Выборка.Ссылка;
		Если СписокБизнесПроцессов.НайтиПоЗначению(БизнесПроцессСсылка)=Неопределено Тогда
			СписокБизнесПроцессов.Добавить(БизнесПроцессСсылка);
		КонецЕсли;
		
	КонецЦикла;
	
	ОчиститьБизнесПроцессыПоСписку(СписокБизнесПроцессов);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалениеОбъектов(Команда)
	
	ПараметрыФормы=Новый Структура("аУдалятьСразуПослеОткрытия", Истина);
	
	РезультатОткрытия = Неопределено;

	ОткрытьФорму("Обработка.УдалениеПомеченныхОбъектов.Форма.ОсновнаяФорма", ПараметрыФормы,,,,, Новый ОписаниеОповещения("УдалениеОбъектовЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура УдалениеОбъектовЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    РезультатОткрытия=Результат;
    
    Попытка
        ЭтаФорма.Закрыть();
        
    Исключение
        
    КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

Процедура ОчиститьБизнесПроцессыПоСписку(СписокБизнесПроцессов)
	
	НаборЗаписейПараметрыКБП=РегистрыСведений.КП_ПараметрыПроцессов.СоздатьНаборЗаписей();
	НаборЗаписейРеквизитыКБП=РегистрыСведений.КП_ПараметрыПроцессов.СоздатьНаборЗаписей();
	
	НаборЗаписейЖурналВыполненияПроцесса=РегистрыСведений.КП_ЖурналВыполненияПроцесса.СоздатьНаборЗаписей();
	НаборЗаписейРеквизитыЭкземпляраПроцесса=РегистрыСведений.КП_РеквизитыЭкземпляраПроцесса.СоздатьНаборЗаписей();
	НаборЗаписейОбработкаТочекПроцесса=РегистрыСведений.КП_ОбработкаТочек.СоздатьНаборЗаписей();
	НаборЗаписейРезультатыИсполнителейЗадач=РегистрыСведений.КП_РезультатыИсполнителейЗадач.СоздатьНаборЗаписей();
	
	НаборЗаписейСсылкиПроцессов=РегистрыСведений.КП_СсылкиПроцессов.СоздатьНаборЗаписей();
	
	НаборОсновныеИсполнителиПроцесса=РегистрыСведений.КП_ОсновныеИсполнителиПроцесса.СоздатьНаборЗаписей();
	НаборРецензииКонтролеров=РегистрыСведений.КП_РецензииКонтролеров.СоздатьНаборЗаписей();
	
	НаборЗаменыИсполнителей=РегистрыСведений.КП_ЗаменыИсполнителейВТочекПроцесса.СоздатьНаборЗаписей();
	
	Для Каждого ЭлементСписка Из СписокБизнесПроцессов Цикл
		
		ВыборкаСсылка=ЭлементСписка.Значение;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Обработка: ';")+СокрЛП(ВыборкаСсылка));
		НаборЗаписейПараметрыКБП.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейПараметрыКБП.Очистить();
			НаборЗаписейПараметрыКБП.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Business process parameters list is cleared.';ru='Список параметров бизнес-процесса очищен.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
				
		НаборЗаписейСсылкиПроцессов.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейСсылкиПроцессов.Очистить();
			НаборЗаписейСсылкиПроцессов.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='A set of links of the process cleared.';ru='Наборы ссылок процесса очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		НаборРецензииКонтролеров.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборРецензииКонтролеров.Очистить();
			НаборРецензииКонтролеров.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Process controllers reivews cleared.';ru='Рецезии контролеров процесса очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		НаборЗаписейРеквизитыКБП.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейРеквизитыКБП.Очистить();
			НаборЗаписейРеквизитыКБП.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Access values ​​are cleared.';ru='Наборы значений доступа очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		НаборОсновныеИсполнителиПроцесса.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборОсновныеИсполнителиПроцесса.Очистить();
			НаборОсновныеИсполнителиПроцесса.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Main users sets are cleared.';ru='Наборы основных исполнителей очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		НаборЗаписейРезультатыИсполнителейЗадач.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейРезультатыИсполнителейЗадач.Очистить();
			НаборЗаписейРезультатыИсполнителейЗадач.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='User result sets cleared.';ru='Наборы результатов исполнителей задач очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;

		НаборЗаписейЖурналВыполненияПроцесса.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейЖурналВыполненияПроцесса.Очистить();
			НаборЗаписейЖурналВыполненияПроцесса.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Process logs cleared.';ru='Наборы журнала процесса очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		НаборЗаписейОбработкаТочекПроцесса.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейОбработкаТочекПроцесса.Очистить();
			НаборЗаписейОбработкаТочекПроцесса.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Process logs cleared.';ru='Наборы журнала процесса очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		НаборЗаписейРеквизитыЭкземпляраПроцесса.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаписейРеквизитыЭкземпляраПроцесса.Очистить();
			НаборЗаписейРеквизитыЭкземпляраПроцесса.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Process details are cleared.';ru='Наборы реквизитов процесса очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
			
		//очистим регистр замены исполнителей точек маршрута
		НаборЗаменыИсполнителей.Отбор.БизнесПроцесс.Установить(ВыборкаСсылка);
		Попытка
			НаборЗаменыИсполнителей.Очистить();
			НаборЗаменыИсполнителей.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Process point deputy is cleared.';ru='Наборы замен исполнителей в точках очищены.'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		//удалим задачи бизнес-процесса
		ЗапросПоЗадачам=Новый Запрос("ВЫБРАТЬ
		                             |	КП_Задача.Ссылка
		                             |ИЗ
		                             |	Задача.КП_Задача КАК КП_Задача
		                             |ГДЕ
		                             |	КП_Задача.БизнесПроцесс = &БизнесПроцесс");
		
		ЗапросПоЗадачам.УстановитьПараметр("БизнесПроцесс", ВыборкаСсылка);
		ВыборкаЗадач=ЗапросПоЗадачам.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока ВыборкаЗадач.Следующий() Цикл
			ЗадачаОбъект=ВыборкаЗадач.Ссылка.ПолучитьОбъект();
			Попытка
				ЗадачаОбъект.УстановитьПометкуУдаления(Истина);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Обработана задача: ';")+СокрЛП(ЗадачаОбъект));
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Обработка: ';")+СокрЛП(ВыборкаЗадач.Ссылка));
			Попытка
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Список просмотра задачи ';")+СокрЛП(ВыборкаЗадач.Ссылка)+НСтр("ru=' очищен.';"));
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
				
		УдалитьФайлыПоВладельцу(ВыборкаСсылка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПользователей()
		
	Запрос=Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                    |	Пользователи.Ссылка КАК Ссылка
	                    |ИЗ
	                    |	Справочник.Пользователи КАК Пользователи
	                    |ГДЕ
	                    |	Пользователи.ПометкаУдаления = ИСТИНА");
						
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	НаборЗаписейДоступКОбработкам=РегистрыСведений.ПользовательскиеНастройкиДоступаКОбработкам.СоздатьНаборЗаписей();
	НаборЗаписейПросмотр=РегистрыСведений.КП_ПросмотрОбъектовПользователями.СоздатьНаборЗаписей();
	НаборЗаписейДанныеПользователей=РегистрыСведений.КП_ДанныеПользователей.СоздатьНаборЗаписей();
	
	Пока Выборка.Следующий() Цикл
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Обработка: ';")+СокрЛП(Выборка.Ссылка));
		
		//1
		НаборЗаписейДоступКОбработкам.Отбор.Пользователь.Установить(Выборка.Ссылка);
		Попытка
			НаборЗаписейДоступКОбработкам.Записать(Истина);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Cleared Registry ""Customizing access to data processors""';ru='Очищен регистр ""Пользовательские настройки доступа к обработкам""'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
				
		//2
		НаборЗаписейПросмотр.Отбор.Пользователь.Установить(Выборка.Ссылка);
		Попытка
			НаборЗаписейПросмотр.Записать(Истина);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Cleared register ""View objects users""';ru='Очищен регистр ""Просмотр объектов пользователями""'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;

		//3
		НаборЗаписейДанныеПользователей.Отбор.Пользователь.Установить(Выборка.Ссылка);
		Попытка
			НаборЗаписейДанныеПользователей.Записать(Истина);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Cleared register ""data""';ru='Очищен регистр ""Данные пользователей""'"));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьФайлыПоВладельцу(ВладелецСсылка)
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Файлы.Ссылка КАК Файл
	                    |ИЗ
	                    |	Справочник.Файлы КАК Файлы
	                    |ГДЕ
	                    |	Файлы.ПометкаУдаления = ЛОЖЬ
	                    |	И Файлы.ВладелецФайла = &ВладелецФайла");
						
	Запрос.УстановитьПараметр("ВладелецФайла", ВладелецСсылка);
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		
		ФайлСсылка=Выборка.Файл;
		
		ФайлОбъект=ФайлСсылка.ПолучитьОбъект();
		
		Попытка
			ФайлОбъект.Удалить();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Помечен на удаление ';")+СокрЛП(ФайлОбъект));
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьКУдалению(Команда)
	ПоказатьВопрос(Новый ОписаниеОповещения("Подключаемый_ПоказатьВопросПодготовкиЗавершение", ЭтотОбъект), НСтр("en='Do you really want to prepare marked items for deletion?';ru='Вы действительно хотите подготовить помеченные
											|на удаление объекты к удалению (операция не обратима)?'"), РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет, КП_ОбщееКлиент.ЗаголовокДиалога(), КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоказатьВопросПодготовкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса=КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
	
	Если НЕ ПодготовитьПроцессы И НЕ ПодготовитьПользователей Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не выбраны объекты для подготовки.'; en='Please select objects first.';"),60, КП_ОбщееКлиент.ЗаголовокДиалога());
		Возврат;
	КонецЕсли;
		
	Если ПодготовитьПроцессы Тогда
    	ОчиститьБизнесПроцессы();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Корпоративные бизнес-процессы подготовлены';en='Corporate precesses are prepared';"));
	КонецЕсли;

	Если ПодготовитьПользователей Тогда
    	ОчиститьПользователей();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Пользователи базы данных подготовлены';en='Database user are prepared';"));
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Подчиненные объекты очищены. Подготовка выполнена.");

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтметитьВсеНажатие(Элемент)
	ПодготовитьПроцессы=Истина;
	ПодготовитьПользователей=Истина;
	
КонецПроцедуры

#КонецОбласти