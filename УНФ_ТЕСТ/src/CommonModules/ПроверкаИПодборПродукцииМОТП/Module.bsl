
#Область СлужебныйПрограммныйИнтерфейс

#Область РасчетХешСумм

// Пересчитывает хеш-суммы всех упаковок формы и проверяется необходимость перемаркировки.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма проверки и подбора маркируемой продукции.
//
Процедура ПересчитатьХешСуммыВсехУпаковок(Форма) Экспорт

	Если Не Форма.ПроверятьНеобходимостьПеремаркировки Тогда
		Возврат;
	КонецЕсли;

	Если Форма.ДетализацияСтруктурыХранения = Перечисления.ДетализацияСтруктурыХраненияИС.ПотребительскиеУпаковки Тогда
		Форма.КоличествоУпаковокКоторыеНеобходимоПеремаркировать = 0;
		ПроверкаИПодборПродукцииМОТПКлиентСервер.ОтобразитьИнформациюОНеобходимостиПеремаркировки(Форма);
		Возврат;
	КонецЕсли;
	
	ТаблицаХешСумм = ПроверкаИПодборПродукцииИС.ПустаяТаблицаХешСумм();
	
	Для Каждого СтрокаДерева Из Форма.ДеревоМаркированнойПродукции.ПолучитьЭлементы() Цикл
		Если ИнтеграцияИСКлиентСервер.ЭтоУпаковка(СтрокаДерева.ТипУпаковки)
		 Или СтрокаДерева.ТипУпаковки = Перечисления.ПрочиеЗоныПересчетаПродукцииИСМП.БлокиБезКоробки Тогда
			ПроверкаИПодборПродукцииИС.РассчитатьХешСуммыУпаковки(СтрокаДерева, ТаблицаХешСумм, Истина);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаПеремаркировки = ПроверкаИПодборПродукцииИС.ТаблицаПеремаркировки(ТаблицаХешСумм);
	
	ПроверкаИПодборПродукцииМОТПКлиентСервер.ПроверитьНеобходимостьПеремаркировки(Форма, ТаблицаПеремаркировки, Ложь);
	
КонецПроцедуры

#КонецОбласти

Процедура ОпределитьВидыУпаковокДляАльтернативногоТабака(Штрихкоды, КешДанныхРазбора, ДанныеРазбораШтрихкода) Экспорт
	
	Если Штрихкоды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокEAN   = Новый Массив;
	СписокGTIN  = Новый Массив;
	EANШтрихкод = Новый Соответствие;
	
	Для Каждого Штрихкод Из Штрихкоды Цикл
		ДанныеРазбора = КешДанныхРазбора[Штрихкод].ДанныеРазбора;
		Если Неопределено = ДанныеРазбора
			Или ЗначениеЗаполнено(ДанныеРазбора.ВидУпаковки)
			Или Не ДанныеРазбора.СоставКодаМаркировки.Свойство("EAN")
			Или Не ЗначениеЗаполнено(ДанныеРазбора.СоставКодаМаркировки.EAN) Тогда
			Продолжить;
		КонецЕсли;
		EAN = ДанныеРазбора.СоставКодаМаркировки.EAN;
		Если EANШтрихкод[EAN] = Неопределено Тогда
			EANШтрихкод[EAN] = Новый Массив;
			СписокEAN.Добавить(EAN);
			СписокGTIN.Добавить(ДанныеРазбора.СоставКодаМаркировки.GTIN);
		КонецЕсли;
		EANШтрихкод[EAN].Добавить(Штрихкод);
	КонецЦикла;
	
	Если СписокEAN.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоШтрихкодамEAN = ШтрихкодированиеИС.ДанныеПоШтрихкодамEAN(СписокEAN);
	Для Каждого СтрокаТЧ Из ДанныеПоШтрихкодамEAN Цикл
		Если СтрокаТЧ.ВидПродукции <> Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаТЧ.Коэффициент > 1 Тогда
			ВидУпаковки = Перечисления.ВидыУпаковокИС.Групповая;
		Иначе
			Продолжить;
		КонецЕсли;
		Для Каждого Штрихкод Из EANШтрихкод[СтрокаТЧ.ШтрихкодEAN] Цикл
			ДанныеРазбораШтрихкода[Штрихкод].ВидУпаковки         = ВидУпаковки;
			КешДанныхРазбора[Штрихкод].ДанныеРазбора.ВидУпаковки = ВидУпаковки;
		КонецЦикла;
		ИндексЭлемента = СписокEAN.Найти(СтрокаТЧ.ШтрихкодEAN);
		СписокEAN.Удалить(ИндексЭлемента);
		СписокGTIN.Удалить(ИндексЭлемента);
	КонецЦикла;
	
	Если СписокEAN.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоGTIN = РегистрыСведений.ОписаниеGTINИС.ПолучитьОписание(СписокGTIN);
	НеизвестныхДанныхПоGTIN = СписокGTIN.Количество();
	Для ИндексЭлемента = 0 По СписокGTIN.ВГраница() Цикл
		GTIN         = СписокGTIN[ИндексЭлемента];
		ОписаниеGTIN = ДанныеПоGTIN[GTIN];
		Если ОписаниеGTIN = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ВидУпаковки = ОписаниеGTIN.ВидУпаковки;
		EAN         = СписокEAN[ИндексЭлемента];
		Для Каждого Штрихкод Из EANШтрихкод[EAN] Цикл
			ДанныеРазбораШтрихкода[Штрихкод].ВидУпаковки         = ВидУпаковки;
			КешДанныхРазбора[Штрихкод].ДанныеРазбора.ВидУпаковки = ВидУпаковки;
		КонецЦикла;
		НеизвестныхДанныхПоGTIN = НеизвестныхДанныхПоGTIN - 1;
	КонецЦикла;
	
	Если НеизвестныхДанныхПоGTIN > 0 Тогда 
		ДанныеПулаПоКодамМаркировки = РегистрыСведений.ПулКодовМаркировкиСУЗ.ДанныеКодовМаркировки(Штрихкоды);
		Для Каждого СтрокаПула Из ДанныеПулаПоКодамМаркировки Цикл 
			Штрихкод = СтрокаПула.КодМаркировки;
			ВидУпаковки = ?(СтрокаПула.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗ.АльтернативныйТабакБлок, Перечисления.ВидыУпаковокИС.Групповая, Перечисления.ВидыУпаковокИС.Потребительская);
			ДанныеРазбораШтрихкода[Штрихкод].ВидУпаковки         = ВидУпаковки;
			КешДанныхРазбора[Штрихкод].ДанныеРазбора.ВидУпаковки = ВидУпаковки;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

