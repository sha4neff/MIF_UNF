#Область ПрограммныйИнтерфейс

// Проверяет доступность объекта метаданных. Проверки выполняются по:
// - доступности вида продукции;
// - функциональным опциям;
// 
// Параметры:
// 	ПолноеИмяМетаданных - Строка - полное имя проверяемого объекта метаданных.
// Возвращаемое значение:
// 	Булево - Признак доступности объекта.
Функция ОбъектМетаданныхДоступен(ПолноеИмяМетаданных) Экспорт
	
	ОбъектМетаданных         = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
	ВозвращаемоеЗначение     = Ложь;
	НедоступныеВидыПродукции = Новый Массив();
	
	Если ОбъектМетаданных = Метаданные.Документы.ПеремаркировкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукция);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ОтгрузкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ПриемкаТоваровИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
	ИначеЕсли ОбъектМетаданных = Метаданные.Документы.ВозвратВОборотИСМП Тогда
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
		НедоступныеВидыПродукции.Добавить(Перечисления.ВидыПродукцииИС.МолочнаяПродукция);
	КонецЕсли;
	
	Если НедоступныеВидыПродукции.Количество() Тогда
		
		ВидыПродукции = Новый Массив();
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВидыПродукции, ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(Истина));
		
		ПроверяемыеВидыПродукции = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВидыПродукции, НедоступныеВидыПродукции);
		
		Для Каждого ВидПродукции Из ПроверяемыеВидыПродукции Цикл
			
			Если ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(ВидПродукции) Тогда
				ВозвращаемоеЗначение = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
	
	Иначе
		ВозвращаемоеЗначение = Истина;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ТаблицаПолейДанныйДляРасшифровкиОшибок() Экспорт
	
	ТаблицаДанных = ИнтеграцияИС.ПустаяТаблицаПредставленийПолей();
	
	ПространствоИмен = Метаданные.ПакетыXDTO.ТипыМОТП.ПространствоИмен;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Индекс";
	НоваяСтрока.Представление    = НСтр("ru = 'Индекс'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "КодСтр";
	НоваяСтрока.Представление    = НСтр("ru = 'Код страны'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "АдрТекст";
	НоваяСтрока.Представление    = НСтр("ru = 'Адрес'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "ПричинаВыбытия";
	НоваяСтрока.Представление    = НСтр("ru = 'Причина выбытия'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Дата";
	НоваяСтрока.Представление    = НСтр("ru = 'Дата'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Время";
	НоваяСтрока.Представление    = НСтр("ru = 'Время'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Наименование";
	НоваяСтрока.Представление    = НСтр("ru = 'Наименование первичного документа'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "Номер";
	НоваяСтрока.Представление    = НСтр("ru = 'Номер'");
	НоваяСтрока.Обязательное     = Истина;
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.ПространствоИмен = ПространствоИмен;
	НоваяСтрока.ЛокальноеИмя     = "КодРегион";
	НоваяСтрока.Представление    = НСтр("ru = 'Код региона'");
	НоваяСтрока.Обязательное     = Истина;
	
	Возврат ТаблицаДанных;
	
КонецФункции

#КонецОбласти