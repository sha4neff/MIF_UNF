
#Область СлужебныйПрограммныйИнтерфейс

#Область НастройкиРазбораКодаМаркировки

Процедура ДополнитьНастройкиРазбораКодаМаркировки(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля) Экспорт
	
	Если ВидПродукции = Перечисления.ВидыПродукцииИС.Табак Тогда
		
		ОписаниеКодаМаркировкиТабачногоБлока(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
		ОписаниеКодаМаркировкиТабачнойПачки(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
		ОписаниеКодаМаркировкиТабачнойПачкиКодПроверки8(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак Тогда
		
		ОписаниеКодаМаркировкиАльтернативногоТабачногоБлока(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
		ОписаниеКодаМаркировкиАльтернативнойТабачнойПачки(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
		ОписаниеКодаМаркировкиАльтернативнойТабачнойПачкиСИдентификаторамиПрименения(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Обувь Тогда
		
		ОписаниеКодаМаркировкиОбуви(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		ОписаниеКодаМаркировкиОбувиКодТНВЭД10(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.ЛегкаяПромышленность
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Духи
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Шины
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.Велосипеды
		Или ВидПродукции = Перечисления.ВидыПродукцииИС.КреслаКоляски Тогда
		
		ОписаниеКодаМаркировкиПродукцииИСМП(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукция Тогда
		
		ОписаниеКодаМаркировкиМолочнаяПродукция(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
		ОписаниеКодаМаркировкиМолочнаяПродукцияСкоропортящаяся(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Фотоаппараты Тогда
		
		ОписаниеКодаМаркировкиФотоаппаратов(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.УпакованнаяВода Тогда
		
		ОписаниеКодаМаркировкиПродукцииУпакованнаяВода(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	// Упаковка
	ОписаниеКодаМаркировкиЛогистическаяУпаковка20(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
	
	Если Не (ВидПродукции = Перечисления.ВидыПродукцииИС.Табак
	     Или ВидПродукции = Перечисления.ВидыПродукцииИС.АльтернативныйТабак) Тогда
		
		ОписаниеКодаМаркировкиЛогистическаяУпаковка18(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьВспомогательнымиНастройкиРазбораКодаМаркировки(НастройкиРазбораКодаМаркировки, ВидПродукции, МодулиВыбраннойПодсистемы) Экспорт
	
	ДополнительныеПараметры(НастройкиРазбораКодаМаркировки, ВидПродукции, МодулиВыбраннойПодсистемы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиРазбораКодаМаркировки

// Формирует описание кода маркировки для табачного блока
Процедура ОписаниеКодаМаркировкиТабачногоБлока(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки, КодТНВЭД");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", 7, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("8005", "МРЦСтрокой",    6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240",  "КодТНВЭД",      8, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодТНВЭД");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Групповая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
	
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для табачной пачки
Процедура ОписаниеКодаМаркировкиТабачнойПачки(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", 7, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("", "МРЦСтрокой",    4, Алфавит.БуквыЦифрыЗнакиМРЦ);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Ложь;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиТабачнойПачкиКодПроверки8(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", 7, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   8, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Ложь;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для альтернативного табачного блока
Процедура ОписаниеКодаМаркировкиАльтернативногоТабачногоБлока(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", 7, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("8005", "МРЦСтрокой",    6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Групповая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для альтернативной табачной пачки
Процедура ОписаниеКодаМаркировкиАльтернативнойТабачнойПачки(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер", 7, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.МРЦСтрокой    = ОписаниеЭлементаКодаМаркировки("", "МРЦСтрокой",    4, Алфавит.БуквыЦифрыЗнакиМРЦ);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + МРЦСтрокой + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Ложь;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для альтернативной табачной пачки с идентификаторами применения
Процедура ОписаниеКодаМаркировкиАльтернативнойТабачнойПачкиСИдентификаторамиПрименения(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, МРЦСтрокой, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",         14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", 7, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93", "КодПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для обуви
Процедура ОписаниеКодаМаркировкиОбуви(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодТНВЭД, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",  "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",  "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240", "КодТНВЭД",       4, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КлючПроверки  = ОписаниеЭлементаКодаМаркировки("91",  "КлючПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.Подпись       = ОписаниеЭлементаКодаМаркировки("92",  "Подпись",       88, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодТНВЭД");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодТНВЭД + КлючПроверки + Подпись");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	СоставКодаМаркировки.Вставить("КодТНВЭД", "");
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиОбувиКодТНВЭД10(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодТНВЭД, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",  "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",  "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодТНВЭД      = ОписаниеЭлементаКодаМаркировки("240", "КодТНВЭД",      10, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодТНВЭД");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	СоставКодаМаркировки.Вставить("КодТНВЭД", "");
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для продукции: Легкая промышленность, Духи, Шины, Велосипелы, Кресла-Коляски.
Процедура ОписаниеКодаМаркировкиПродукцииИСМП(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КлючПроверки  = ОписаниеЭлементаКодаМаркировки("91", "КлючПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.Подпись       = ОписаниеЭлементаКодаМаркировки("92", "Подпись",       44, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для Фотоаппаратов
Процедура ОписаниеКодаМаркировкиФотоаппаратов(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Фотоаппараты:
	// 01 + GTIN + 21 + serial (20 chars) + Криптохвост (44 chars)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КлючПроверки, Подпись");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", 20, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КлючПроверки  = ОписаниеЭлементаКодаМаркировки("91", "КлючПроверки",   4, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.Подпись       = ОписаниеЭлементаКодаМаркировки("92", "Подпись",       44, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КлючПроверки + Подпись");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = Новый Структура(
			"ВидПродукции, ТипШтрихкодаИВидУпаковки, СоставКодаМаркировки, ОписаниеШаблонаКодаМаркировки, ДанныеОбщегоМодуля");
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
	
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для молочной продукции
Процедура ОписаниеКодаМаркировкиМолочнаяПродукция(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, ГоденДо, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.ГоденДо       = ОписаниеЭлементаКодаМаркировки("17",   "ГоденДо",        6, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	СоставКодаМаркировки.Вставить("ГоденДо",         '00010101');
	СоставКодаМаркировки.Вставить("Скоропортящаяся", Ложь);
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для молочной продукции
Процедура ОписаниеКодаМаркировкиМолочнаяПродукцияСкоропортящаяся(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, ГоденДо, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01",   "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21",   "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.ГоденДо       = ОписаниеЭлементаКодаМаркировки("7003", "ГоденДо",       10, Алфавит.Цифры);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93",   "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + ГоденДо + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	СоставКодаМаркировки.Вставить("ГоденДо",         '00010101');
	СоставКодаМаркировки.Вставить("Скоропортящаяся", Истина);
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для УпакованнаяВода
Процедура ОписаниеКодаМаркировкиПродукцииУпакованнаяВода(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("GTIN, СерийныйНомер, КодПроверки");
	ОписаниеЭлементовКМ.GTIN          = ОписаниеЭлементаКодаМаркировки("01", "GTIN",          14);
	ОписаниеЭлементовКМ.СерийныйНомер = ОписаниеЭлементаКодаМаркировки("21", "СерийныйНомер", 13, Алфавит.БуквыЦифрыЗнаки);
	ОписаниеЭлементовКМ.КодПроверки   = ОписаниеЭлементаКодаМаркировки("93", "КодПроверки",    4, Алфавит.БуквыЦифрыЗнаки);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер");
	ШаблоныСтрокой.Добавить("GTIN + СерийныйНомер + КодПроверки");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_DataMatrix;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Потребительская;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.ВключаетИдентификаторыПрименения = Истина;
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = Новый Структура(
			"ВидПродукции, ТипШтрихкодаИВидУпаковки, СоставКодаМаркировки, ОписаниеШаблонаКодаМаркировки, ДанныеОбщегоМодуля");
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
	
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для логистической упаковки
Процедура ОписаниеКодаМаркировкиЛогистическаяУпаковка18(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Примеры:
	//	- исмп:
	//	* 199988888800000013 - из сервиса
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("SSCC");
	ОписаниеЭлементовКМ.SSCC = ОписаниеЭлементаКодаМаркировки("", "SSCC", 18, Алфавит.Цифры); // Серийный код транспортной упаковки, представленный в виде цифрового номера.
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("SSCC");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.SSCC;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Логистическая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует описание кода маркировки для логистической упаковки
Процедура ОписаниеКодаМаркировкиЛогистическаяУпаковка20(НастройкиРазбораКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Примеры:
	//	- исмп:
	//	* (00)199988888800000013 - в ИБ
	//	* 00199988888800000013 - от сканера
	//	- мотп:
	//	* 00199988888800000013 - из сервиса, от сканера
	//	* (00)199988888800000013 - в ИБ
	
	Алфавит = НастройкиРазбораКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("SSCC");
	ОписаниеЭлементовКМ.SSCC = ОписаниеЭлементаКодаМаркировки("00", "SSCC", 18, Алфавит.Цифры); // Серийный код транспортной упаковки, представленный в виде цифрового номера.
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("SSCC");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.SSCC;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Логистическая;
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	Для Каждого ОписаниеШаблонаКодаМаркировки Из СписокШаблонов Цикл
		
		НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
		НастройкаОписанияКодаМаркировки.ВидПродукции                  = ВидПродукции;
		НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки      = ТипШтрихкодаИВидУпаковки;
		НастройкаОписанияКодаМаркировки.СоставКодаМаркировки          = СоставКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ОписаниеШаблонаКодаМаркировки = ОписаниеШаблонаКодаМаркировки;
		НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля            = ДанныеОбщегоМодуля;
		
		РазборКодаМаркировкиИССлужебный.ДобавитьОписаниеШаблонаКодаМаркировкиВидаПродукции(
			НастройкиРазбораКодаМаркировки, НастройкаОписанияКодаМаркировки);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ОписаниеЭлементаКодаМаркировки(Код, Имя, КоличествоЗнаков, АлфавитДопустимыхСимволов = "")
	Возврат РазборКодаМаркировкиИССлужебный.ОписаниеЭлементаКодаМаркировки(Код, Имя, КоличествоЗнаков, АлфавитДопустимыхСимволов);
КонецФункции

Функция НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки)
	Возврат РазборКодаМаркировкиИСМПСлужебныйКлиентСервер.НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
КонецФункции

Процедура ДополнительныеПараметры(НастройкиРазбораКодаМаркировки, ВидПродукции, МодулиВыбраннойПодсистемы)
	
	ДополнительныеПараметры = НастройкиРазбораКодаМаркировки.ДополнительныеПараметры[МодулиВыбраннойПодсистемы.Подсистема];
	
	Если ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		ИмяСвойстваМОТП = "Табак";
		Если Не ДополнительныеПараметры.Свойство(ИмяСвойстваМОТП) Тогда
			ДополнительныеПараметры.Вставить(ИмяСвойстваМОТП, Новый Структура);
		КонецЕсли;
		ДополнительныеПараметрыКодМаркировкиГрупповойУпаковкиТабакаСХвостом(НастройкиРазбораКодаМаркировки, ВидПродукции, ДополнительныеПараметры[ИмяСвойстваМОТП]);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнительныеПараметрыКодМаркировкиГрупповойУпаковкиТабакаСХвостом(НастройкиРазбораКодаМаркировки, ВидПродукции, ДополнительныеПараметры)
	
	// После идентификатора 93 для блоков и только для них может быть произвольное количество идентификаторов применения
	// 010460620310255621!MmNZo2800514900093Ij5E240FA075486.00
	
	Если Не ДополнительныеПараметры.Свойство("ШаблоныКодаМаркировкиСХвостом") Тогда
		ДополнительныеПараметры.Вставить("ШаблоныКодаМаркировкиСХвостом",    Новый Массив);
		ДополнительныеПараметры.Вставить("ДобавленныеШаблоныКодаМаркировки", Новый Соответствие);
	КонецЕсли;
	ШаблоныКодаМаркировкиСХвостом    = ДополнительныеПараметры.ШаблоныКодаМаркировкиСХвостом;
	ДобавленныеШаблоныКодаМаркировки = ДополнительныеПараметры.ДобавленныеШаблоныКодаМаркировки;
	
	ИдентификаторКодаПроверки = "КодПроверки";
	
	ОтборПоТабачнымБлокам = Новый Структура("ВидПродукции, ВидУпаковки",
		ВидПродукции, Перечисления.ВидыУпаковокИС.Групповая);
	
	ШаблоныКодовМаркировки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ШаблоныКодовМаркировкиПоОтбору(
		НастройкиРазбораКодаМаркировки.ШаблоныКодовМаркировкиПоВидамПродукции, ОтборПоТабачнымБлокам);
	
	Для Каждого ШаблонКодаМаркировки Из ШаблоныКодовМаркировки Цикл
		
		Если ДобавленныеШаблоныКодаМаркировки[ШаблонКодаМаркировки.Шаблон] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеШаблона = НастройкиРазбораКодаМаркировки.ШаблоныИОписанияВидовПродукции[ШаблонКодаМаркировки.Шаблон];
		
		Если ДанныеШаблона.ОписаниеЭлементовКодаМаркировки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеИдентификатора = ДанныеШаблона.ОписаниеЭлементовКодаМаркировки[ДанныеШаблона.ОписаниеЭлементовКодаМаркировки.ВГраница()];
		
		Если ВРег(ОписаниеИдентификатора.Имя) <> ВРег(ИдентификаторКодаПроверки) Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавленныеШаблоныКодаМаркировки[ШаблонКодаМаркировки.Шаблон] = Истина;
		
		СтрокаШаблонаКМ = НастройкиРазбораКодаМаркировки.ШаблоныКодовМаркировки.Найти(ШаблонКодаМаркировки.Шаблон, "Шаблон");
		
		Если НастройкиРазбораКодаМаркировки.ТолькоСервер Тогда
			ШаблоныКодаМаркировкиСХвостом.Добавить(СтрокаШаблонаКМ);
		Иначе
			ШаблоныКодаМаркировкиСХвостом.Добавить(
				ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаШаблонаКМ));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НовыйСоставКодаМаркировкиМОТП(ТипШтрихкодаИВидУпаковки)
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.Вставить("ВключаетМРЦ",         Ложь);
	СоставКодаМаркировки.Вставить("МРЦ",                 0);
	СоставКодаМаркировки.Вставить("МРЦСтрокой",          "");
	СоставКодаМаркировки.Вставить("КодТНВЭД",            "");
	СоставКодаМаркировки.Вставить("ВключаетКодПроверки", Ложь);
	Возврат СоставКодаМаркировки;
КонецФункции

#КонецОбласти

#КонецОбласти