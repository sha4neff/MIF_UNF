// Общий модуль (выполняется на стороне сервера) модуля "Конструктор процессов для 1С:УНФ"
// Разработчик Компания "Аналитика. Проекты и решения" +7 495 005-1653, https://kp-unf.ru

#Область СлужебныеПроцедурыИФункции

// Функция выполняет создание и запуск нового бизнес-процесса
// Параметры:
//		ВидПроцесса - вид корпоративного процесса
//		РабочаяГруппа - рабочая группа сотрудников
//		ДокСсылка - ссылка на документ-основание
// Возвращаемое значение: Функция возвращает Истина в случае успешного создания бизнес-процесса и 
// Ложь в противном случае
Функция СоздатьИСтартоватьБизнесПроцессАвтозапуска(АвтозапускСсылка, РабочаяГруппа, ДокСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидПроцесса=АвтозапускСсылка.ВидПроцесса;
	
	//создаем новый процесс
	НовыйПроцессОбъект=БизнесПроцессы.КП_БизнесПроцесс.СоздатьБизнесПроцесс();
	
	//заполним параметры нового подпроцесса
	НовыйПроцессОбъект.ВидПроцесса=ВидПроцесса;
	НовыйПроцессОбъект.Дата=ТекущаяДата();
	ТекстКомментария="Создано автозапуском """+СокрЛП(АвтозапускСсылка)+"""";
	ТекстКомментария=СтрЗаменить(ТекстКомментария, """""", """");
	НовыйПроцессОбъект.Комментарий=ТекстКомментария;

	Если ЗначениеЗаполнено(АвтозапускСсылка.Ответственный) Тогда
		ПользовательАвтор=АвтозапускСсылка.Ответственный;
	Иначе
		ПользовательАвтор=Пользователи.ТекущийПользователь();
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ПользовательАвтор) ИЛИ Найти(НРег(ПользовательАвтор), "не указан")>0 Тогда
		Попытка
			ПользовательАвтор=ДокСсылка.Ответственный;
		Исключение
			СтрокаОшибки="Не возможно определить ответственного по настройке автозапуска """+СокрЛП(АвтозапускСсылка)+""".";
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Создание и запуск бизнес-процесса", УровеньЖурналаРегистрации.Информация, ДокСсылка, , "Инициатор определен как "+СокрЛП(ПользовательАвтор));
	
	НовыйПроцессОбъект.Автор=ПользовательАвтор;
	НовыйПроцессОбъект.ИднАвтора=КП_ОбщееСервер.СформироватьИднИсполнителя(ПользовательАвтор);
	
	НовыйПроцессОбъект.Контролер=ВидПроцесса.Контролер;
	НовыйПроцессОбъект.ИднКонтролера=КП_ОбщееСервер.СформироватьИднИсполнителя(ВидПроцесса.Контролер);
	
	Попытка
		НовыйПроцессОбъект.Записать();
		НовыйПроцесс=НовыйПроцессОбъект.Ссылка;
	
	Исключение
		СтрокаОшибки="Ошибка записи нового процесса """+СокрЛП(НовыйПроцесс)+"""! "+ОписаниеОшибки();		
		Возврат Ложь;
		
	КонецПопытки;
	
	//скопируем точки из вида в подпроцесс
	КП_СхемаКБПСервер.СкопироватьТочкиВидаВЭкземплярБП(ВидПроцесса, НовыйПроцесс.Ссылка);
	
	//заполним процесс по выбранному виду (в том числе скопируем реквизиты)
	
	ЗаполнятьСхемуПроцесса=Истина;
	ЗаполнятьТекстПроцесса=Истина;
	КП_Процессы.ЗаполнитьПроцессПоВиду(НовыйПроцессОбъект, ВидПроцесса, ЗаполнятьСхемуПроцесса, ЗаполнятьТекстПроцесса);
	
	Попытка
		НовыйПроцессОбъект.Записать();
		НовыйПроцесс=НовыйПроцессОбъект.Ссылка;
	
	Исключение
		ТекстОшибки="Ошибка записи нового процесса """+СокрЛП(НовыйПроцесс)+"""! "+ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Создание бизнес-процесса.", УровеньЖурналаРегистрации.Ошибка, ДокСсылка, , ТекстОшибки);
		Возврат Ложь;
		
	КонецПопытки;
			
	Если ЗначениеЗаполнено(ДокСсылка) Тогда
		//добавим документ в список
		КП_Процессы.ДобавитьОбъектВСписокСсылок(НовыйПроцесс, ДокСсылка);
		
	КонецЕсли;
	
	//заполним маршрутную сеть процесса
	КП_СхемаКБПСервер.ЗаполнитьСетьМаршрутныхТочек(НовыйПроцессОбъект);
	
    НовыйПроцессОбъект.Наименование=КП_Процессы.ПолучитьНаименованиеПоШаблону(НовыйПроцесс, ВидПроцесса);

	//запишем процесс
	Попытка
		НовыйПроцессОбъект.Записать();
		НовыйПроцесс=НовыйПроцессОбъект.Ссылка;
	
	Исключение
		ТекстОшибки="Ошибка записи нового процесса """+СокрЛП(НовыйПроцесс)+"""! "+ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Создание бизнес-процесса.", УровеньЖурналаРегистрации.Ошибка, ДокСсылка, , ТекстОшибки);
		Возврат Ложь;
		
	КонецПопытки;
	
	СписокИницализирован=КП_Процессы.СоздатьДинамическийСписокИсполнителей(НовыйПроцессОбъект.Ссылка, РабочаяГруппа);
	Если НЕ СписокИницализирован Тогда
		Возврат Ложь;	
	КонецЕсли;
		
	//стартуем процесс
	Попытка
		ЗаписатьАвтозапуск(АвтозапускСсылка, НовыйПроцессОбъект.Ссылка, ДокСсылка);	
		НовыйПроцессОбъект.Старт(БизнесПроцессы.КП_БизнесПроцесс.ТочкиМаршрута.Старт);
		
	Исключение
		ТекстОшибки="Ошибка старта подпроцесса """+СокрЛП(НовыйПроцесс)+"""! "+ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Создание бизнес-процесса.", УровеньЖурналаРегистрации.Ошибка, ДокСсылка, , ТекстОшибки);
		Возврат Ложь;
		
	КонецПопытки;
		
	Возврат Истина;
	
КонецФункции

// Процедура выполняет запись информации об элементе автозапуска
// Параметры:
//	Автозапуск - ссылка на элемент автозапуска
//	БизнесПроцесс - ссылка на бизнес-процесс
//	Источник - ссылка на источник автозапуска
Процедура ЗаписатьАвтозапуск(Автозапуск, БизнесПроцесс, Источник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РегПараметры=РегистрыСведений.КП_ПроцессыАвтозапуска.СоздатьНаборЗаписей();
	РегПараметры.Отбор.Автозапуск.Установить(Автозапуск);
	РегПараметры.Отбор.БизнесПроцесс.Установить(БизнесПроцесс);
	РегПараметры.Отбор.Источник.Установить(Источник);
	РегПараметры.Прочитать();
	
	Если РегПараметры.Количество()>0 Тогда
		//запись уже есть
		Возврат;
	КонецЕсли;
	
	//создадим новую запись
	ЗаписьПараметра=РегПараметры.Добавить();
	
	ЗаписьПараметра.Автозапуск=Автозапуск;
	ЗаписьПараметра.БизнесПроцесс=БизнесПроцесс;
	ЗаписьПараметра.Источник=Источник;
	
	Попытка
		РегПараметры.Записать(Истина);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

// Функция проверяет был ли автозапуск процесса по источнику
// Параметры:
//	Автозапуск - ссылка на элемент автозапуска
//	Источник - ссылка на источник автозапуска
// Возвращаемое значение: Булево
Функция БылАвтозапуск(Автозапуск, Источник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_ПроцессыАвтозапуска.БизнесПроцесс КАК БизнесПроцесс
	                    |ИЗ
	                    |	РегистрСведений.КП_ПроцессыАвтозапуска КАК КП_ПроцессыАвтозапуска
	                    |ГДЕ
	                    |	КП_ПроцессыАвтозапуска.Источник = &Источник
	                    |	И КП_ПроцессыАвтозапуска.БизнесПроцесс.ВидПроцесса = &ВидПроцесса");	
	
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("ВидПроцесса", Автозапуск.ВидПроцесса);
	
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Возврат (Выборка.Следующий());

КонецФункции

#КонецОбласти
