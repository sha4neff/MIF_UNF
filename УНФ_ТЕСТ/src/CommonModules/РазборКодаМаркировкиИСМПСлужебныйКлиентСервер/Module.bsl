
#Область СлужебныйПрограммныйИнтерфейс

#Область РазборКодаМаркировки

Функция ЭлементКодаМаркировкиСоответствуетОписанию(Значение, ОписаниеЭлементаКМ, СоставКодаМаркировки, ПараметрыОписанияКодаМаркировки) Экспорт
	
	Если ОписаниеЭлементаКМ.Имя = "GTIN" Тогда
		
		Если Не РазборКодаМаркировкиИССлужебныйКлиентСерверПовтИсп.ЭтоGTIN(Значение) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ЗначениеEAN = РазборКодаМаркировкиИССлужебныйКлиентСерверПовтИсп.ШтрихкодEANИзGTIN(Значение);
		
		РазборКодаМаркировкиИССлужебныйКлиентСервер.ЗаполнитьСоставКодаМаркировки(
			СоставКодаМаркировки, Новый Структура("Имя", "EAN"), ЗначениеEAN);
		
	ИначеЕсли ОписаниеЭлементаКМ.Имя = "SSCC" Тогда
		
		КонтрольноеЧисло = ШтрихкодыУпаковокКлиентСервер.КонтрольноеЧислоSSCC(Лев(Значение, ОписаниеЭлементаКМ.Длина - 1));
		
		Возврат КонтрольноеЧисло =  Число(Прав(Значение, 1));
		
	ИначеЕсли ОписаниеЭлементаКМ.Имя = "МРЦСтрокой" Тогда
		
		РезультатПроверки = РазборКодаМаркировкиИССлужебныйКлиентСерверПовтИсп.МРЦПоВидуУпаковки(Значение, ПараметрыОписанияКодаМаркировки.ВидУпаковки);
		
		Если Не РезультатПроверки.ЭтоМРЦ Тогда
			Возврат Ложь;
		КонецЕсли;
		
		РазборКодаМаркировкиИССлужебныйКлиентСервер.ЗаполнитьСоставКодаМаркировки(
			СоставКодаМаркировки, Новый Структура("Имя", "МРЦ"), РезультатПроверки.ЗначениеМРЦ);
		
		РазборКодаМаркировкиИССлужебныйКлиентСервер.ЗаполнитьСоставКодаМаркировки(
			СоставКодаМаркировки, Новый Структура("Имя", "ВключаетМРЦ"), Истина);
	
	ИначеЕсли ОписаниеЭлементаКМ.Имя = "КодПроверки" Тогда
		
		РазборКодаМаркировкиИССлужебныйКлиентСервер.ЗаполнитьСоставКодаМаркировки(
			СоставКодаМаркировки, Новый Структура("Имя", "ВключаетКодПроверки"), Истина);
		
	ИначеЕсли ОписаниеЭлементаКМ.Имя = "КодПроверки" Тогда
		
		РазборКодаМаркировкиИССлужебныйКлиентСервер.ЗаполнитьСоставКодаМаркировки(
			СоставКодаМаркировки, Новый Структура("Имя", "ВключаетКодПроверки"), Истина);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПреобразоватьЗначениеДляЗаполненияСоставаКодаМаркировки(ПараметрыОписанияКодаМаркировки, СоставКодаМаркировки, ОписаниеЭлементаКМ, Значение) Экспорт
	
	Если СоставКодаМаркировки = Неопределено Или Не СоставКодаМаркировки.Свойство(ОписаниеЭлементаКМ.Имя) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОписаниеЭлементаКМ.Имя = "ГоденДо" Тогда
		
		Если ОписаниеЭлементаКМ.Код = "17" Тогда
			// Дата окончания срока годности продукции (срок хранения более 72 часов).
			// Формат: YYMMDD
			КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);
		Иначе
			// Дата окончания срока годности продукции (срок хранения менее 72 часов)
			// Формат: YYMMDDHHMM
			КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);
		КонецЕсли;
		
		ОписаниеТипа = Новый ОписаниеТипов("Дата",,, КвалификаторыДаты);
		Значение = ОписаниеТипа.ПривестиЗначение("20" + Значение);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоНеФормализованныйКодМаркировки(ПараметрыРазбораКодаМаркировки, Настройки, ДанныеРезультата, РезультатБезФильтра) Экспорт
	
	Если ЭтоНеФормализованныйКодМаркировкиГрупповойУпаковкиТабака(
			ПараметрыРазбораКодаМаркировки, Настройки, ДанныеРезультата, РезультатБезФильтра) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЭтоНеФормализованныйКодМаркировкиЛогистическойУпаковкиТабакаGS1128(
			ПараметрыРазбораКодаМаркировки, Настройки, ДанныеРезультата, РезультатБезФильтра) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область НастройкиРазбораКодаМаркировки

Функция НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки) Экспорт
	
	СоставКодаМаркировки = Новый Структура;
	СоставКодаМаркировки.Вставить("ВключаетИдентификаторыПрименения", Ложь);
	
	Если ТипШтрихкодаИВидУпаковки.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Потребительская")
		Или ТипШтрихкодаИВидУпаковки.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Групповая") Тогда
		
		СоставКодаМаркировки.Вставить("GTIN",          "");
		СоставКодаМаркировки.Вставить("EAN",           "");
		СоставКодаМаркировки.Вставить("СерийныйНомер", "");
		
	ИначеЕсли ТипШтрихкодаИВидУпаковки.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Логистическая")
		И ТипШтрихкодаИВидУпаковки.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.SSCC") Тогда
		
		СоставКодаМаркировки.Вставить("SSCC", "");
		
	ИначеЕсли ТипШтрихкодаИВидУпаковки.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Логистическая")
		И ТипШтрихкодаИВидУпаковки.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.GS1_128") Тогда
		
		СоставКодаМаркировки.Вставить("GTIN", "");
		СоставКодаМаркировки.Вставить("EAN",  "");
		
	КонецЕсли;
	
	Возврат СоставКодаМаркировки;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РазборКодаМаркировки

Функция ЭтоНеФормализованныйКодМаркировкиГрупповойУпаковкиТабака(ПараметрыРазбораКодаМаркировки, Настройки, ДанныеРезультата, РезультатБезФильтра)
	
	// После идентификатора 93 для блоков и только для них может быть произвольное количество идентификаторов применения
	// 010460620310255621!MmNZo2800514900093Ij5E240FA075486.00
	
	ШаблоныКодаМаркировкиСХвостом = Настройки.ДополнительныеПараметры.ИСМП.Табак.ШаблоныКодаМаркировкиСХвостом;
	
	Если ШаблоныКодаМаркировкиСХвостом.Количество() = 0 Тогда
		Возврат Ложь; // Учет табачной продукции не ведется
	КонецЕсли;
	
	ИсходныйКодМаркировки       = ПараметрыРазбораКодаМаркировки.КодМаркировки;
	ИсходнаяДлинаКодаМаркировки = ПараметрыРазбораКодаМаркировки.ДлинаКодаМаркировки;
	ДанныеРезультата            = Неопределено;
	
	Для Каждого ШаблонКодаМаркировки Из ШаблоныКодаМаркировкиСХвостом Цикл
		
		Если ПараметрыРазбораКодаМаркировки.НачинаетсяСоСкобки Или ПараметрыРазбораКодаМаркировки.СодержитGS1 Тогда
			ДлинаКодаМаркировкиИзШаблона = ШаблонКодаМаркировки.ДлинаСоСкобкой;
		Иначе
			ДлинаКодаМаркировкиИзШаблона = ШаблонКодаМаркировки.Длина;
		КонецЕсли;
		
		Если ИсходнаяДлинаКодаМаркировки <= ДлинаКодаМаркировкиИзШаблона Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыРазбораКодаМаркировки.ДлинаКодаМаркировки = ДлинаКодаМаркировкиИзШаблона;
		
		ПараметрыРазбораКодаМаркировки.КодМаркировки = Лев(ИсходныйКодМаркировки, ПараметрыРазбораКодаМаркировки.ДлинаКодаМаркировки);
		
		ДанныеРезультата = РазборКодаМаркировкиИССлужебныйКлиентСервер.КодМаркировкиСоответствуетШаблону(ПараметрыРазбораКодаМаркировки, Настройки, ШаблонКодаМаркировки);
		
		Если ДанныеРезультата = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеРезультата.КодМаркировки = ИсходныйКодМаркировки;
		ДанныеРезультата.ВидУпаковки   = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Групповая");
		
		ПараметрыРазбораКодаМаркировки.КодМаркировки       = ИсходныйКодМаркировки;
		ПараметрыРазбораКодаМаркировки.ДлинаКодаМаркировки = ИсходнаяДлинаКодаМаркировки;
		
		Возврат Истина;
		
	КонецЦикла;
	
	ПараметрыРазбораКодаМаркировки.КодМаркировки       = ИсходныйКодМаркировки;
	ПараметрыРазбораКодаМаркировки.ДлинаКодаМаркировки = ИсходнаяДлинаКодаМаркировки;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоНеФормализованныйКодМаркировкиЛогистическойУпаковкиТабакаGS1128(ПараметрыРазбораКодаМаркировки, Настройки, ДанныеРезультата, РезультатБезФильтра)
	
	Если РезультатБезФильтра.Количество() > 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ФильтрПоВидуПродукции = ПараметрыРазбораКодаМаркировки.ФильтрПоВидуПродукции;
	Если Не ФильтрПоВидуПродукции.Использовать Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВидыПродукции = Новый Массив;
	Для Каждого ВидПродукции Из ФильтрПоВидуПродукции.ВидыПродукции Цикл
		Если Не ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
			Возврат Ложь;
		КонецЕсли;
		Если Настройки.ДоступныеВидыПродукции.Найти(ВидПродукции) <> Неопределено Тогда
			ВидыПродукции.Добавить(ВидПродукции);
		КонецЕсли;
	КонецЦикла;
	
	Если ВидыПродукции.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КодМаркировки = ПараметрыРазбораКодаМаркировки.КодМаркировки;
	
	ЗначениеИдентификатораGTIN            = Неопределено;
	ЗавершитьВыполнениеЕслиGTINНеЗаполнен = Ложь;
	
	Если ПараметрыРазбораКодаМаркировки.НачинаетсяСоСкобки Тогда
		
		РезультатРазбора = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьСтрокуШтрихкодаGS1(КодМаркировки);
		Если РезультатРазбора.Разобран Тогда
			
			ЭлементКМ = РезультатРазбора.ДанныеШтрихкода["01"];
			Если ЭлементКМ = Неопределено Тогда
				ЭлементКМ = РезультатРазбора.ДанныеШтрихкода["02"];
				Если ЭлементКМ <> Неопределено Тогда
					ЗначениеИдентификатораGTIN = ЭлементКМ.Значение;
				КонецЕсли;
			Иначе
				ЗначениеИдентификатораGTIN = ЭлементКМ.Значение;
			КонецЕсли;
			
		Иначе
			
			ИдентификаторGTIN = Лев(КодМаркировки, 4);
			Если ИдентификаторGTIN = "(01)" Или ИдентификаторGTIN = "(02)" Тогда
				ЗначениеИдентификатораGTIN = Сред(КодМаркировки, 5, 14);
			КонецЕсли;
			
			ЗавершитьВыполнениеЕслиGTINНеЗаполнен = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ПараметрыРазбораКодаМаркировки.СодержитGS1 Тогда
		
		РезультатРазбора = ПараметрыРазбораКодаМаркировки.РезультатРазбора;
		
		ЭлементКМ = РезультатРазбора.ДанныеШтрихкода["01"];
		Если ЭлементКМ = Неопределено Тогда
			ЭлементКМ = РезультатРазбора.ДанныеШтрихкода["02"];
			Если ЭлементКМ <> Неопределено Тогда
				ЗначениеИдентификатораGTIN = ЭлементКМ.Значение;
			КонецЕсли;
		Иначе
			ЗначениеИдентификатораGTIN = ЭлементКМ.Значение;
		КонецЕсли;
		
	Иначе
		// Делаем предположение что это табак!
		Если Не ШтрихкодированиеИСКлиентСервер.КодСоответствуетАлфавиту(КодМаркировки, Настройки.Алфавит.БуквыЦифрыЗнаки) Тогда
			Возврат Ложь;
		КонецЕсли;
		Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(КодМаркировки) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ИдентификаторGTIN = Лев(КодМаркировки, 2);
		Если ИдентификаторGTIN = "01" Или ИдентификаторGTIN = "02" Тогда
			ЗначениеИдентификатораGTIN = Сред(КодМаркировки, 3, 14);
		КонецЕсли;
		
	КонецЕсли;
	
	GTIN = "";
	Если ЗначениеЗаполнено(ЗначениеИдентификатораGTIN)
		И ТипЗнч(ЗначениеИдентификатораGTIN) = Тип("Строка")
		И СтрДлина(ЗначениеИдентификатораGTIN) = 14
		И РазборКодаМаркировкиИССлужебныйКлиентСерверПовтИсп.ЭтоGTIN(ЗначениеИдентификатораGTIN) Тогда
		
		GTIN = ЗначениеИдентификатораGTIN;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(GTIN) И ЗавершитьВыполнениеЕслиGTINНеЗаполнен Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.GS1_128");
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Логистическая");
	
	СоставКодаМаркировки = НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	СоставКодаМаркировки.GTIN = GTIN;
	
	Если ЗначениеЗаполнено(СоставКодаМаркировки.GTIN) Тогда
		СоставКодаМаркировки.EAN = РазборКодаМаркировкиИССлужебныйКлиентСерверПовтИсп.ШтрихкодEANИзGTIN(СоставКодаМаркировки.GTIN);
	КонецЕсли;
	
	ДанныеРезультата = РазборКодаМаркировкиИССлужебныйКлиентСервер.НовыйРезультатРазбораКодаМаркировки();
	ДанныеРезультата.КодМаркировки        = КодМаркировки;
	ДанныеРезультата.ТипШтрихкода         = ТипШтрихкодаИВидУпаковки.ТипШтрихкода;
	ДанныеРезультата.ВидУпаковки          = ТипШтрихкодаИВидУпаковки.ВидУпаковки;
	ДанныеРезультата.ВидыПродукции        = ВидыПродукции;
	ДанныеРезультата.СоставКодаМаркировки = СоставКодаМаркировки;
	
	Для Каждого ВидПродукции Из ВидыПродукции Цикл
		ДанныеРезультата.ВидыУпаковокПоВидамПродукции[ВидПродукции] =
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипШтрихкодаИВидУпаковки.ВидУпаковки);
	КонецЦикла;
	
	НормализованныйКодМаркировки = РазборКодаМаркировкиИССлужебныйКлиентСервер.НормализоватьКодМаркировки(
		ДанныеРезультата, ВидыПродукции[0]); // Для Табака и АТП нормализация одинакова
	
	ДанныеРезультата.НормализованныйКодМаркировки = НормализованныйКодМаркировки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти