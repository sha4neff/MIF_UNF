
#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьЗначенияРеквизитовПечати(ТекущийОбъект, ИзмененныеРеквизиты) Экспорт
	
	Если ТекущийОбъект.ТолькоПросмотр Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Для каждого ЭлементСтруктуры Из ИзмененныеРеквизиты Цикл
		
		ТекущийОбъект.Объект[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;
		
		Если НЕ ТекущийОбъект.Модифицированность Тогда
			
			ТекущийОбъект.Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПредложитьЗаполнитьРеквизитыОрганизации(ПараметрыПечати) Экспорт
	
	ОткрытьФормуЗаполненияРеквизитовДляПечати(ПараметрыПечати, "ПодписьРуководителя,ПодписьГлавногоБухгалтера,ИНН,КПП,БанковскийСчетПоУмолчанию,ФайлЛоготип,ЮрАдрес");
	
КонецФункции

Функция ПредложитьЗаполнитьРеквизитыОрганизацииСФаксимильнойПодписью(ПараметрыПечати) Экспорт
	
	ОткрытьФормуЗаполненияРеквизитовДляПечати(ПараметрыПечати, "ПодписьРуководителя,ПодписьГлавногоБухгалтера,ИНН,КПП,БанковскийСчетПоУмолчанию,ФайлЛоготип,ЮрАдрес,ФайлФаксимильнаяПечать");
	
КонецФункции

Процедура ОткрытьФормуЗаполненияРеквизитовДляПечати(ПараметрыПечати, ИменаРеквизитовДляЗаполнения)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяМенеджераПечати", ПараметрыПечати.МенеджерПечати);
	ПараметрыФормы.Вставить("ИменаМакетов", ПараметрыПечати.Идентификатор);
	ПараметрыФормы.Вставить("ПараметрКоманды", ПараметрыПечати.ОбъектыПечати);
	ПараметрыФормы.Вставить("ИменаРеквизитовДляЗаполнения", ИменаРеквизитовДляЗаполнения);
	ПараметрыФормы.Вставить("ПараметрыПечати", Новый Структура);
	Для Каждого КлючИЗначение Из ПараметрыПечати Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("ФормаКлиентскогоПриложения") Тогда
			Продолжить;
		КонецЕсли;
		ПараметрыФормы.ПараметрыПечати.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	ПараметрыФормы.Вставить(
	"Ключ",
	УправлениеНебольшойФирмойСервер.ОрганизацияИзПараметраКоманды(ПараметрыФормы.ПараметрКоманды));
	
	Если ЗначениеЗаполнено(ПараметрыФормы.Ключ) Тогда
		
		ФормаЗаполненияРеквизитовДляПечати = ОткрытьФорму(
		"Справочник.Организации.Форма.ФормаЗаполненияРеквизитовДляПечати",
		ПараметрыФормы,
		Строка(Новый УникальныйИдентификатор));
		
		Если ФормаЗаполненияРеквизитовДляПечати <> Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
	ПараметрыФормы.ИмяМенеджераПечати,
	ПараметрыФормы.ИменаМакетов,
	ПараметрыФормы.ПараметрКоманды,
	ПараметрыПечати.Форма,
	ПараметрыФормы);
	
КонецПроцедуры

Процедура ОбработкаКомандыПечатиЦенниковИЭтикетокНаПринтереЭтикеток(ПараметрыПечати) Экспорт
	
	Обработка = ПараметрыПечати.ОбъектыПечати[0];
	
	Если Обработка.Товары.НайтиСтроки(Новый Структура("Выбран", Истина)).Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбрано ни одного товара'"));
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПечати.Свойство("ИдентификаторФормы") Тогда
		ИдентификаторФормы = ПараметрыПечати.ИдентификаторФормы;
	Иначе
		ИдентификаторФормы = ПараметрыПечати.Форма.УникальныйИдентификатор;
	КонецЕсли;
	
	ДанныеДляПринтераЭтикеток = УправлениеНебольшойФирмойВызовСервера.ПодготовитьСтруктуруДанныхЦенниковИЭтикетокДляПринтераЭтикеток(Обработка, ПараметрыПечати.МенеджерПечати, ПараметрыПечати.ТекущийРазмер);
	
	Если ДанныеДляПринтераЭтикеток.Количество() > 0 Тогда
		
		Для Каждого ТекМакет Из ДанныеДляПринтераЭтикеток Цикл
			
			ЗавершениеПечати = Новый ОписаниеОповещения("ОбработкаКомандыПечатиЦенниковИЭтикетокНаПринтереЭтикетокЗавершение", ПечатьДокументовУНФКлиент, ТекМакет);
			
			МенеджерОборудованияКлиент.НачатьПечатьЭтикеток(ЗавершениеПечати, ИдентификаторФормы, ТекМакет.XML, ТекМакет.Этикетки);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаКомандыПечатиЦенниковИЭтикетокНаПринтереЭтикетокЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		Возврат;
		
	Иначе
		
		ТекстСообщения = НСтр(
			"ru = 'При печати произошла ошибка.
			|Дополнительное описание:
			|%ДополнительноеОписание%'"
		);
		ТекстСообщения = СтрЗаменить(
			ТекстСообщения,
			"%ДополнительноеОписание%",
			РезультатВыполнения.ОписаниеОшибки
		);
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

#Область КлиентскиеМетодыПечати

Функция ПечатьКонтактнойИнформации(ПараметрыПечати) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КонтрагентыНачальноеЗначение", ПараметрыПечати.ОбъектыПечати);
	
	Если ПараметрыПечати.ОбъектыПечати.Количество() > 0 Тогда
		КлючУникальности = ПараметрыПечати.ОбъектыПечати[0];
	Иначе
		КлючУникальности = Ложь;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаКонтактнойИнформации", ПараметрыФормы, , КлючУникальности);
	
КонецФункции

Функция ПечатьКонверта(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати);
	
	ОткрытьФорму("Обработка.ПечатьКонвертов.Форма", ПараметрыФормы);
	
КонецФункции

#КонецОбласти

#Область ПриИзмененииРеквизитовФорм

Процедура ПриИзмененииДоговораКонтрагента(ДоговорПослеИзменения, ОснованиеПечатиСсылка, ОснованиеПечати, ДополнительныеПараметры = Неопределено) Экспорт
	
	ЗаполнитьОснованиеПечатиДоговором = Истина;
	ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати = Истина;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		
		ЗначениеКонстанты = Неопределено;
		Если ДополнительныеПараметры.Свойство("ОснованиеПечатиСчетНаОплату", ЗначениеКонстанты) Тогда
			
			ЗаполнитьОснованиеПечатиДоговором = (ЗначениеКонстанты = ПредопределенноеЗначение("Перечисление.ОснованиеПечатиСпособНачальногоЗаполнение.ДоговорКонтрагента"));
			
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("ОснованиеПечатиЗаказПокупателя", ЗначениеКонстанты) Тогда
			
			ЗаполнитьОснованиеПечатиДоговором = (ЗначениеКонстанты = ПредопределенноеЗначение("Перечисление.ОснованиеПечатиСпособНачальногоЗаполнение.ДоговорКонтрагента"));
			
		КонецЕсли;
		
		ДополнительныеПараметры.Свойство("ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати", ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати);
		ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати = (ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати = Неопределено ИЛИ ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати = Истина);
		
	КонецЕсли;
	
	Если ЗаполнитьОснованиеПечатиДоговором Тогда
		
		Если НЕ ЗначениеЗаполнено(ДоговорПослеИзменения) Тогда
			
			Если НЕ ЗначениеЗаполнено(ОснованиеПечатиСсылка)
				ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				
				ОснованиеПечатиСсылка = Неопределено;
				ОснованиеПечати = "";
				
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(ДоговорПослеИзменения) Тогда
			
			Если НЕ ЗначениеЗаполнено(ОснованиеПечатиСсылка)
				ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			
				ОснованиеПечатиСсылка = ДоговорПослеИзменения;
				
				ЗаголовокПредставления = "";
				Если ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати Тогда
					
					ЗаголовокПредставления = Нстр("ru = 'Договор: '");
					
				КонецЕсли;
				
				ОснованиеПечати = ЗаголовокПредставления + Строка(ДоговорПослеИзменения);
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти