// Общий модуль (выполняется на стороне клиента и сервера) модуля "Конструктор процессов для 1С:УНФ"
// Разработчик Компания "Аналитика. Проекты и решения" +7 495 005-1653, https://kp-unf.ru
// Процедуры и функции являются повторными (на время сеанса)

#Область СлужебныеПроцедурыИФункции

// Функция ТекущийПользователь устанавливает привилигированный режим и возвращает ссылку 
// на текущего пользователя базы данных, определенного по учетной записи 
// пользователя конфигурации.
//
// Возвращаемое значение: ссылка на элемент справочника "Пользователи"
&НаСервере
Функция ТекущийПользователь() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции // ТекущийПользователь()

// Функция ПросмотрКакКартинка определяет тип расширения файла на предмет возможности его просмотра 
// как графичекого файла в форме корпоративного документа.
// Параметры:
//		Расширение - текстовая строка, содержащая расширение файла
// Возвращаемое значение: Булевое значение (Истина, если переданное в аргументе раширение файла может быть 
// просмотрено как картинка, в противном случае возвращается Ложь)
&НаКлиенте 
Функция ПросмотрКакКартинка(Раширение) Экспорт
	
	РасширениеФайла=НРег(Раширение);
		
	Если 
		Найти(РасширениеФайла,"jpg")>0 ИЛИ 
		Найти(РасширениеФайла,"gif")>0 ИЛИ
		Найти(РасширениеФайла,"bmp")>0 ИЛИ
		Найти(РасширениеФайла,"tif")>0 ИЛИ
		Найти(РасширениеФайла,"jpeg")>0 ИЛИ
		Найти(РасширениеФайла,"jpe")>0 ИЛИ
		Найти(РасширениеФайла,"jfif")>0 ИЛИ
		Найти(РасширениеФайла,"png")>0 ИЛИ
		Найти(РасширениеФайла,"dib")>0 
	Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

// Функция ПросмотрКакHTML определяет тип расширения файла на предмет возможности его просмотра
// в форме корпоративного документа как html-файла.
// Параметры:
//		Расширение - текстовая строка, содержащая расширение файла
// Возвращаемое значение: Булевое значение (Истина, если переданное в аргументе раширение файла может быть 
// просмотрено как объект HTML, в противном случае возвращается Ложь)
&НаКлиенте 
Функция ПросмотрКакHTML(Раширение) Экспорт
	
	РасширениеФайла=НРег(Раширение);
	
	Если Найти(РасширениеФайла,"html")>0 ИЛИ 
		Найти(РасширениеФайла,"htm")>0 ИЛИ
		Найти(РасширениеФайла,"mht")>0 ИЛИ
		Найти(РасширениеФайла,"pdf")>0
	Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Функция определяет возвращает номер буквы в сегменте алфовита текущего набора символов
// Параметры:
//		СимволСтроки - символ строки
// Возвращаемое значение: Номер буквы в алфавите
Функция НомерБуквы(СимволСтроки) Экспорт
	
	КодСимволаНачальный=КодСимвола("a");
	КодСимволаСтроки=КодСимвола(СимволСтроки);
	
	Если КодСимволаСтроки<КодСимволаНачальный Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат КодСимволаСтроки;
		
КонецФункции

// Функция дополняет и возвращает строку в версии метаданных. В аргументах передается исходная строка
// Параметры:
//		ИсходнаяСтрока - исходная строка для дополнения
// Возвращаемое значение: Строка результата
Функция ДополнитьСтрокуВерсии(ИсходнаяСтрока) Экспорт
	
	//приведение к формату 0.0.0.0.0.0
	НеобходимоеКоличествоТочек=5;
	СтрокаБезТочек=СтрЗаменить(ИсходнаяСтрока, ".", "");
	КоличествоТочекВСтроке=СтрДлина(ИсходнаяСтрока)-СтрДлина(СтрокаБезТочек);
	
	ВозвратнаяСтрока=ИсходнаяСтрока;
	Для Н=1 По НеобходимоеКоличествоТочек-КоличествоТочекВСтроке Цикл
		ВозвратнаяСтрока=ВозвратнаяСтрока+".0";
	КонецЦикла;
	
	Возврат ВозвратнаяСтрока;
	
КонецФункции

// Функция ПолучитьМассивЭлементовФормыДокумента формирует массив элементов 
// формы корпоративного документа. В ходе формировании массива пользователю выводится 
// окно с процентом выполнения.
//
// Возвращаемое значение: Массив элементов формы
&НаКлиенте
Функция ПолучитьМассивЭлементовФормыДокумента() Экспорт 
	
	ТекстПустогоОтображения="<авто>";
	
	МассивЭлементов=Новый Массив;
	
	ФормаДокумента=ПолучитьФорму("Документ.КП_КорпоративныйДокумент.ФормаОбъекта");
	
	ПрогрессБарШаг=ФормаДокумента.Элементы.Количество()/100;
	ПрогрессБар=0;
	
	Для Каждого СтрокаЭлемента Из ФормаДокумента.Элементы Цикл
		Состояние(НСтр("ru='Формирование списка элементов формы';en='Creating a list of elements of the form'"), ПрогрессБар);
		ПрогрессБар=ПрогрессБар+1;
		
		Попытка
			ВидЭлемента=СтрокаЭлемента.Вид;
		Исключение
			ВидЭлемента=СокрЛП(СтрокаЭлемента);
		КонецПопытки;
		
		СтруктураЭлемента=Новый Структура("ЭлементФормы, ВидЭлемента, ОтображаемоеЗначение", "", "", "");

		СтруктураЭлемента.ВидЭлемента=ВидЭлемента;
		СтруктураЭлемента.ЭлементФормы=СтрокаЭлемента.Имя;
		СтруктураЭлемента.ОтображаемоеЗначение=?(СтрокаЭлемента.Заголовок="", ТекстПустогоОтображения, СтрокаЭлемента.Заголовок);
		
		МассивЭлементов.Добавить(СтруктураЭлемента);
		
	КонецЦикла;

	Возврат МассивЭлементов;
	
КонецФункции

#КонецОбласти
