// Общий модуль (выполняется на стороне сервера) модуля "Конструктор процессов для 1С:УНФ"
// Разработчик Компания "Аналитика. Проекты и решения" +7 495 005-1653, https://kp-unf.ru
// Является повторным на время одного серверного вызова

#Область СлужебныеПроцедурыИФункции

// Функция получает таблицу результатов исполнителей бизнес-процесса
// Параметры:
// 	БизнесПроцесс - Бизнес-процесс
// 	ТочкаКБП - Точка маршрута бизнес-процесса
// Возвращаемое значение: Таблица значений
Функция ПолучитьТаблицуРезультатовИсполнителейБизнесПроцесса(БизнесПроцесс, ТочкаКБП) Экспорт
	
	ТаблицаРезультатов=Новый ТаблицаЗначений;
	ТаблицаРезультатов.Колонки.Добавить("Исполнитель");
	ТаблицаРезультатов.Колонки.Добавить("Задача");
	
	//дополним таблицу колонками (в запросе левое соединение с ПВХ не работает)
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_РезультатыИсполнителейЗадач.Ссылка
	                    |ИЗ
	                    |	ПланВидовХарактеристик.КП_РезультатыИсполнителейЗадач КАК КП_РезультатыИсполнителейЗадач
	                    |ГДЕ
	                    |	КП_РезультатыИсполнителейЗадач.ПометкаУдаления = ЛОЖЬ");
						
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		
		ИмяПараметраРезультата=СокрЛП(Выборка.Ссылка.Код);
		
		Если ТаблицаРезультатов.Колонки.Найти(ИмяПараметраРезультата)=Неопределено Тогда
			ТаблицаРезультатов.Колонки.Добавить(ИмяПараметраРезультата);
		КонецЕсли;
		
	КонецЦикла;

	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_РезультатыИсполнителейЗадачСрезПоследних.ЗначениеПараметра,
	                    |	КП_РезультатыИсполнителейЗадачСрезПоследних.Исполнитель КАК Исполнитель,
	                    |	КП_РезультатыИсполнителейЗадачСрезПоследних.ПараметрРезультата,
	                    |	КП_РезультатыИсполнителейЗадачСрезПоследних.Задача
	                    |ИЗ
	                    |	РегистрСведений.КП_РезультатыИсполнителейЗадач.СрезПоследних КАК КП_РезультатыИсполнителейЗадачСрезПоследних
	                    |ГДЕ
	                    |	КП_РезультатыИсполнителейЗадачСрезПоследних.БизнесПроцесс = &БизнесПроцесс
	                    |	И КП_РезультатыИсполнителейЗадачСрезПоследних.ТочкаКБП = &ТочкаКБП
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Исполнитель");
						
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	Запрос.УстановитьПараметр("ТочкаКБП", ТочкаКБП);
	
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	ТекущийИсполнитель=Неопределено;
	ТекущаяСтрокаТаблицы=Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		ИмяПараметраРезультата=СокрЛП(Выборка.ПараметрРезультата.Код);
		
		ИсполнительСтроки=Выборка.Исполнитель;
		Если ТекущийИсполнитель<>ИсполнительСтроки Тогда
			//новый исполнитель, добавим новую строку таблицы
			ТекущаяСтрокаТаблицы=ТаблицаРезультатов.Добавить();
			ТекущаяСтрокаТаблицы.Исполнитель=ИсполнительСтроки;
			ТекущаяСтрокаТаблицы.Задача=Выборка.Задача;
			ТекущийИсполнитель=ИсполнительСтроки;
		КонецЕсли;
		
		ТекущаяСтрокаТаблицы[ИмяПараметраРезультата]=Выборка.ЗначениеПараметра;
		
	КонецЦикла;
		
	Возврат ТаблицаРезультатов;
	
КонецФункции

// Функция получает таблицу рецензий контролеров бизнес-процесса
// Параметры:
// 	БизнесПроцесс - Бизнес-процесса
// 	ТочкаКБП - Точка маршрута бизнес-процесса
// Возвращаемое значение: Таблица значений
Функция ПолучитьТаблицуРецензийКонтролеровБизнесПроцесса(БизнесПроцесс, ТочкаКБП) Экспорт
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_РецензииКонтролеровСрезПоследних.ТекстРецензии,
	                    |	КП_РецензииКонтролеровСрезПоследних.РезультатОдобрен,
	                    |	КП_РецензииКонтролеровСрезПоследних.Исполнитель,
	                    |	КП_РецензииКонтролеровСрезПоследних.ЗадачаИсполнителя,
	                    |	КП_РецензииКонтролеровСрезПоследних.Контролер
	                    |ИЗ
	                    |	РегистрСведений.КП_РецензииКонтролеров.СрезПоследних(&ДатаКон, ) КАК КП_РецензииКонтролеровСрезПоследних
	                    |ГДЕ
	                    |	КП_РецензииКонтролеровСрезПоследних.БизнесПроцесс = &БизнесПроцесс
	                    |	И КП_РецензииКонтролеровСрезПоследних.ТочкаКБП = &ТочкаКБП
	                    |	И КП_РецензииКонтролеровСрезПоследних.Исполнитель <> &ПустойИсполнитель");
						
						
	Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	Запрос.УстановитьПараметр("ТочкаКБП", ТочкаКБП);
	Запрос.УстановитьПараметр("ПустойИсполнитель", Справочники.Пользователи.ПустаяСсылка()); //для исключения итоговых рецензий
	
	ТаблицаРецензий=Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	
	Возврат ТаблицаРецензий;
	
КонецФункции

// Функция получает таблицу объектов бизнес-процесса
// Параметры:
// 	БизнесПроцесс - Бизнес-процесс
// Возвращаемое значение: Таблица значений
Функция ПолучитьТаблицуОбъектовБизнесПроцесса(БизнесПроцесс) Экспорт
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_СсылкиПроцессов.Объект,
	                    |	КП_СсылкиПроцессов.Примечание
	                    |ИЗ
	                    |	РегистрСведений.КП_СсылкиПроцессов КАК КП_СсылкиПроцессов
	                    |ГДЕ
	                    |	КП_СсылкиПроцессов.БизнесПроцесс = &БизнесПроцесс");
						
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	ТаблицаОбъектов=Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	
	Возврат ТаблицаОбъектов;
	
КонецФункции

// Функция получает таблицу учетных записей и пользователей
// Параметры:
//	 Нет 
// Возвращаемое значение: Таблица значений
Функция ПолучитьТаблицуУчетныхЗаписейИПользователей() Экспорт

	
	ТаблицаСоответствия=Новый ТаблицаЗначений;
	ТаблицаСоответствия.Колонки.Добавить("Пользователь");
	ТаблицаСоответствия.Колонки.Добавить("УчетнаяЗапись");

	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	Пользователи.Ссылка
	                    |ИЗ
	                    |	Справочник.Пользователи КАК Пользователи
	                    |ГДЕ
	                    |	Пользователи.ПометкаУдаления = ЛОЖЬ");
						
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
		
	Пока Выборка.Следующий() Цикл
		Пользователь=Выборка.Ссылка;
		УчетнаяЗаписьОтправкиПочты=КП_ОбщееСервер.ЗагрузитьНастройкуПользователя("СистемаСообщений", "СообщенияЭлПочта", , СокрЛП(Пользователь));
		Если ЗначениеЗаполнено(УчетнаяЗаписьОтправкиПочты) Тогда
			НоваяСтрока=ТаблицаСоответствия.Добавить();
			НоваяСтрока.Пользователь=Пользователь;
			НоваяСтрока.УчетнаяЗапись=УчетнаяЗаписьОтправкиПочты;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаСоответствия;
	
КонецФункции

// Функция выполняет текст функции
// Параметры:
//	 ТекстФункции - текст функции
//	 СсылкаНаОбъект - ссылка на объект
// Возвращаемое значение: Таблица значений
Функция ВыполнитьТекстФункции(ТекстФункции, СсылкаНаОбъект) Экспорт	
	
	Попытка
		РезультатВыполнения="<>";
		Выполнить(ТекстФункции);
		
		ПрограммнаяТаблицаЗначений=РезультатВыполнения;
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка выполнения программной функции для передачи данных в шаблон: '; en='Error in program function: ';")+ОписаниеОшибки()+Символы.ПС+СокрЛП(ТекстФункции));
		ПрограммнаяТаблицаЗначений=Новый ТаблицаЗначений;
		
	КонецПопытки;
	
	Возврат ПрограммнаяТаблицаЗначений;
	
КонецФункции

#КонецОбласти
