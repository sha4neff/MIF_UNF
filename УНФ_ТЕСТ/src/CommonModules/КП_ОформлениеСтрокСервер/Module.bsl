// Общий модуль (выполняется на стороне сервера) продукта "Конструктор процессов для 1С:УНФ"
// Разработчик Компания "Аналитика. Проекты и решения" +7 495 005-1653, https://kp-unf.ru

Процедура УстановитьОформлениеСтрокЦветом(Список, ИмяКолонкиСписка, ИмяОформляемойКолонки, ТипЦвета) Экспорт
		
	ТаблицаЦветовОбщая=КП_ОформлениеСтрокСерверПС.ПолучитьТаблицуЦветов();
	
	Для Каждого СтрокаТЧ Из ТаблицаЦветовОбщая Цикл
		СсылкаНаЦвет=СтрокаТЧ.Ссылка;
		КП_ОформлениеСтрокСервер.ДобавитьНовыйЦветВОформление(Список, ИмяКолонкиСписка, ИмяОформляемойКолонки, СсылкаНаЦвет, ТипЦвета);	
	КонецЦикла;
			
КонецПроцедуры

Процедура ДобавитьНовыйЦветВОформление(Список, ИмяКолонкиЦвета, ИмяОформляемойКолонки, СсылкаНаЦвет, ИмяПараметраЦвета) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЦветТекста=Новый Цвет(СсылкаНаЦвет.Red, СсылкаНаЦвет.Green, СсылкаНаЦвет.Blue);
	
	ЭлементОформления=Список.УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных(ИмяКолонкиЦвета);
	ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение=СсылкаНаЦвет;
	ЭлементОтбора.Использование=Истина;	
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра(ИмяПараметраЦвета, ЦветТекста);
	
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(ИмяОформляемойКолонки);
	ПолеОформления.Использование = Истина;
	
КонецПроцедуры

Процедура УстановитьШрифтовоеОформление(Список, ИмяОформляемойКолонки) Экспорт
	
	ШрифтЖирныйОбычный=Новый Шрифт(,,Истина);
	ШрифтЖирныйНаклонный=Новый Шрифт(,,Истина,Истина);
	ШрифтНаклонный=Новый Шрифт(,,,Истина);
	ШрифтОбычный=Новый Шрифт;
	
	//создадим четыре варианта отборов по одному для каждого шрифта
		
	ДобавитьВариантШрифтов(Список, ШрифтОбычный, Ложь, Ложь, ИмяОформляемойКолонки);
	ДобавитьВариантШрифтов(Список, ШрифтЖирныйОбычный, Истина, Ложь, ИмяОформляемойКолонки);
	ДобавитьВариантШрифтов(Список, ШрифтНаклонный, Ложь, Истина, ИмяОформляемойКолонки);
	ДобавитьВариантШрифтов(Список, ШрифтЖирныйНаклонный, Истина, Истина, ИмяОформляемойКолонки);
	
КонецПроцедуры

Процедура ДобавитьВариантШрифтов(Список, ШрифтЗаголовка, ЭтоЖирныйШрифт, ЭтоНаклонныйШрифт, ИмяОформляемойКолонки)

	ЭлементОформления=Список.УсловноеОформление.Элементы.Добавить();

	ГруппаЭлементовОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
 	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора=ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ШрифтЖирный");
	ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение=ЭтоЖирныйШрифт;
	ЭлементОтбора.Использование=Истина;	
	
	ЭлементОтбора=ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементОтбора.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("ШрифтНаклонный");
	ЭлементОтбора.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение=ЭтоНаклонныйШрифт;
	ЭлементОтбора.Использование=Истина;	
		
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтЗаголовка);
	
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(ИмяОформляемойКолонки);
	ПолеОформления.Использование = Истина;	
	
КонецПроцедуры

Функция ПолучитьСтруктуруЦвета(ЦветСсылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЦветСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат=Новый Структура("Red, Green, Blue", ЦветСсылка.Red, ЦветСсылка.Green, ЦветСсылка.Blue);
	Возврат Результат;
	
КонецФункции

Функция ИспользованиеВключено() Экспорт
	Значение=ПолучитьФункциональнуюОпцию("КП_ИспользоватьЦветовоеОформление");
	Возврат Значение;
КонецФункции

Функция ПолучитьСтруктуруЦветаОбъекта(ОбъектСсылка, ПользовательСсылка, ВозвращатьЦвет=Ложь) Экспорт
			
	Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
		//новый документ
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
		
	РегЦветаОбъектов=РегистрыСведений.КП_ЦветаОбъектов.СоздатьНаборЗаписей();
	РегЦветаОбъектов.Отбор.ОбъектНастройки.Установить(ОбъектСсылка);	
	РегЦветаОбъектов.Отбор.Пользователь.Установить(ПользовательСсылка);	
	РегЦветаОбъектов.Прочитать();
		
	КоличествоПараметров=РегЦветаОбъектов.Количество();
		
	Если КоличествоПараметров=0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат=Новый Структура("ЦветТекста, ЦветФона, ШрифтЖирный, ШрифтНаклонный", Неопределено, Неопределено, Ложь, Ложь);
	
	Запись=РегЦветаОбъектов[0];		
	Результат.ШрифтЖирный=Запись.ШрифтЖирный;
	Результат.ШрифтНаклонный=Запись.ШрифтНаклонный;
	
	Если ВозвращатьЦвет Тогда
		Результат.ЦветТекста=Новый Цвет(Запись.ЦветТекста.Red, Запись.ЦветТекста.Green, Запись.ЦветТекста.Blue);
		Результат.ЦветФона=Новый Цвет(Запись.ЦветФона.Red, Запись.ЦветФона.Green, Запись.ЦветФона.Blue);
	Иначе
		Результат.ЦветТекста=Запись.ЦветТекста;
		Результат.ЦветФона=Запись.ЦветФона;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписатьСтруктуруЦветаОбъекта(ОбъектСсылка, СтруктураЦвета, ПользовательСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РегЦветаОбъектов=РегистрыСведений.КП_ЦветаОбъектов.СоздатьНаборЗаписей();
	РегЦветаОбъектов.Отбор.ОбъектНастройки.Установить(ОбъектСсылка);
	РегЦветаОбъектов.Отбор.Пользователь.Установить(ПользовательСсылка);
	
	РегЦветаОбъектов.Прочитать();
		
	КоличествоПараметров=РегЦветаОбъектов.Количество();
		
	Если КоличествоПараметров>0 Тогда
		ЗаписьНастройки=РегЦветаОбъектов[0];
	Иначе
		ЗаписьНастройки=РегЦветаОбъектов.Добавить();
		ЗаписьНастройки.ОбъектНастройки=ОбъектСсылка;
		ЗаписьНастройки.Пользователь=ПользовательСсылка;
	КонецЕсли;

	ЗаписьНастройки.ЦветТекста=СтруктураЦвета.ЦветТекста;
	ЗаписьНастройки.ЦветФона=СтруктураЦвета.ЦветФона;
	ЗаписьНастройки.ШрифтНаклонный=СтруктураЦвета.ШрифтНаклонный;
	ЗаписьНастройки.ШрифтЖирный=СтруктураЦвета.ШрифтЖирный;	
	
	Попытка
		РегЦветаОбъектов.Записать(Истина);		
	Исключение
		КП_ОбщееСервер.ЗаписатьОшибку(ОписаниеОшибки());
		Возврат Ложь;		
	КонецПопытки;
		
	Возврат Истина;
	
КонецФункции

Функция ПолучитьСписокИспользуемыхЦветов(ПользовательСсылка)
	
	Список=Новый СписокЗначений;
		
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_ЦветаОбъектов.ЦветТекста КАК ЦветТекста,
	                    |	КП_ЦветаОбъектов.ЦветФона КАК ЦветФона
	                    |ИЗ
	                    |	РегистрСведений.КП_ЦветаОбъектов КАК КП_ЦветаОбъектов
	                    |ГДЕ
	                    |	КП_ЦветаОбъектов.Пользователь = &Пользователь");
	
	Запрос.УстановитьПараметр("Пользователь", ПользовательСсылка);
		
	Выборка=Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ЦветТекста) И Список.НайтиПоЗначению(Выборка.ЦветТекста)=Неопределено Тогда
			Список.Добавить(Выборка.ЦветТекста);
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.ЦветФона) И Список.НайтиПоЗначению(Выборка.ЦветФона)=Неопределено Тогда
			Список.Добавить(Выборка.ЦветФона);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Список;
	
КонецФункции

Функция ПолучитьМассивЦветовОбъекта(ОбъектСсылка, ПользовательСсылка) Экспорт
	
	СтруктураЦвета=КП_ОформлениеСтрокСервер.ПолучитьСтруктуруЦветаОбъекта(ОбъектСсылка, ПользовательСсылка);
	
	МассивНастройкиЦветов=Новый Массив;
	
	Если СтруктураЦвета<>Неопределено Тогда
		МассивНастройкиЦветов.Добавить(СтруктураЦвета.ЦветТекста);
		МассивНастройкиЦветов.Добавить(СтруктураЦвета.ЦветФона);
		МассивНастройкиЦветов.Добавить(СтруктураЦвета.ШрифтЖирный);
		МассивНастройкиЦветов.Добавить(СтруктураЦвета.ШрифтНаклонный);	
	КонецЕсли;
	
	Возврат МассивНастройкиЦветов;
	
КонецФункции

Процедура УстановитьОформлениеСписка(ЭлементСписок, ИмяРеквизита) Экспорт
	
	Если КП_ОформлениеСтрокСервер.ИспользованиеВключено() Тогда
		КП_ОформлениеСтрокСервер.УстановитьОформлениеСтрокЦветом(ЭлементСписок, "ЦветТекста", ИмяРеквизита, "ЦветТекста");
		КП_ОформлениеСтрокСервер.УстановитьОформлениеСтрокЦветом(ЭлементСписок, "ЦветФона", ИмяРеквизита, "ЦветФона");
		КП_ОформлениеСтрокСервер.УстановитьШрифтовоеОформление(ЭлементСписок, ИмяРеквизита);
	КонецЕсли;

КонецПроцедуры

Функция УдалитьОформлениеСпискаОбъектов(СписокОбъектов, ПользовательСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Для Каждого ЭлементСписка Из СписокОбъектов Цикл
		ОбъектСсылка=ЭлементСписка.Значение;
		Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
			Продолжить;
		КонецЕсли;		
		РегЦветаОбъектов=РегистрыСведений.КП_ЦветаОбъектов.СоздатьНаборЗаписей();
		РегЦветаОбъектов.Отбор.ОбъектНастройки.Установить(ОбъектСсылка);
		РегЦветаОбъектов.Отбор.Пользователь.Установить(ПользовательСсылка);
		РегЦветаОбъектов.Прочитать();
		Попытка
			РегЦветаОбъектов.Очистить();
			РегЦветаОбъектов.Записать(Истина);		
		Исключение
			КП_ОбщееСервер.ЗаписатьОшибку(ОписаниеОшибки());
			ОтменитьТранзакцию();
			Возврат Ложь;		
		КонецПопытки;
		
	КонецЦикла; //по списку объектов
	
	ЗафиксироватьТранзакцию();
		
	Возврат Истина;
	
КонецФункции
