#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УчетПоКомпании = Константы.УчетПоКомпании.Получить();

	Если Параметры.Свойство("АдресЗапасовДокумента") Тогда

		ТаблицаЗапасов = ПолучитьИзВременногоХранилища(Параметры.АдресЗапасовДокумента);

		ТаблицаЗапасов.Колонки.Добавить("Отметка", Новый ОписаниеТипов("Булево"));
		ТаблицаЗапасов.ЗаполнитьЗначения(Истина, "Отметка");

		Для Каждого СтрокаТЧ Из ТаблицаЗапасов Цикл

			ЗаполнитьЗначенияСвойств(ОтобранныеЗапасы.Добавить(), СтрокаТЧ);

		КонецЦикла;

	КонецЕсли;

	Если Параметры.Свойство("НалогообложениеНДС") Тогда
		НалогообложениеНДС = Параметры.НалогообложениеНДС;
	Иначе
		НалогообложениеНДС = Неопределено;
	КонецЕсли;

	Если Параметры.Свойство("СуммаВключаетНДС") Тогда
		СуммаВключаетНДС = Параметры.СуммаВключаетНДС;
		ИспользуетсяНДС = Истина;
		ОрганизацияДокумента = Параметры.ОрганизацияДокумента;
	Иначе
		ИспользуетсяНДС = Ложь;
	КонецЕсли;

	Если Параметры.Свойство("ТипНоменклатуры") Тогда
		Если ЗначениеЗаполнено(Параметры.ТипНоменклатуры) Тогда
			ТипНоменклатуры = Параметры.ТипНоменклатуры;

			МассивТипНоменклатуры = Новый Массив;
			Для Каждого ЭлементТипНоменклатуры Из ТипНоменклатуры Цикл
				Если Параметры.Свойство("ИсключитьТипНоменклатурыРабота") И ЭлементТипНоменклатуры.Значение
					= Перечисления.ТипыНоменклатуры.Работа Тогда
					Продолжить;
				КонецЕсли;
				МассивТипНоменклатуры.Добавить(ЭлементТипНоменклатуры.Значение);
			КонецЦикла;

			МассивОграниченияТипНоменклатуры = Новый ФиксированныйМассив(МассивТипНоменклатуры);
			НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипНоменклатуры", МассивОграниченияТипНоменклатуры);
			НовыйПараметр2 = Новый ПараметрВыбора("Дополнительно.ОграничениеТипа", МассивОграниченияТипНоменклатуры);
			НовыйМассив = Новый Массив;
			НовыйМассив.Добавить(НовыйПараметр);
			НовыйМассив.Добавить(НовыйПараметр2);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элементы.ОтобранныеЗапасыНоменклатура.ПараметрыВыбора = НовыеПараметры;
		Иначе
			ТипНоменклатуры = Неопределено;
		КонецЕсли;
	Иначе
		ТипНоменклатуры = Неопределено;
	КонецЕсли;

	ИспользуютсяХарактеристики = Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить();
	ИспользуютсяПартии = Константы.ФункциональнаяОпцияИспользоватьПартии.Получить();

	Если Параметры.Свойство("Контрагент") Тогда

		Контрагент = Параметры.Контрагент;

	КонецЕсли;

	Параметры.Свойство("УникальныйИдентификаторФормыВладельца", УникальныйИдентификаторФормыВладельца);

КонецПроцедуры

// Процедура обработка подбора по команде Добавить
//
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)

	Если Не ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда

		МассивВыбранныхДокументов = Новый Массив;
		МассивВыбранныхДокументов.Добавить(ВыбранноеЗначение);

	Иначе

		МассивВыбранныхДокументов = ВыбранноеЗначение;

	КонецЕсли;

	Для Каждого ДокументПоступления Из МассивВыбранныхДокументов Цикл

		МассивНайденныхДокументов = ОтобранныеДокументы.НайтиСтроки(Новый Структура("ДокументПоступления",
			ДокументПоступления));

		Если МассивНайденныхДокументов.Количество() > 0 Тогда

			ТекстСообщения = СтрШаблон(НСтр(
				"ru = 'Документ %1 уже присутствует в списке выбранных документов.'"), ДокументПоступления);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);

			Продолжить;

		КонецЕсли;

		НоваяСтрока = ОтобранныеДокументы.Добавить();
		НоваяСтрока.Отметка = Истина;
		НоваяСтрока.ДокументПоступления = ДокументПоступления;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура обработчик события включения/выключения опции
// Отображать Номенклатуру Только Для ТекущегоДокумента
//
&НаКлиенте
Процедура ОтображатьНоменклатуруТолькоДляТекущегоДокументаПриИзменении(Элемент)

	УстановитьВидимостьОтобранныхЗапасов(Элементы.ОтобранныеДокументы.ТекущиеДанные);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтобранныеДокументы

// Процедура обработчик события активизации строки 
// в списке отобранных документов
//
&НаКлиенте
Процедура ОтобранныеДокументыПриАктивизацииСтроки(Элемент)

	УстановитьВидимостьОтобранныхЗапасов(Элементы.ОтобранныеДокументы.ТекущиеДанные);

КонецПроцедуры

// Процедура добавления документа в список значений
// выбранных документов
//
&НаКлиенте
Процедура СписокДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
		
	// 1. Тут определить тип добавляемого документа
	// 2. Открыть список для выбора

	СписокТиповДокументов = Новый СписокЗначений;
	СписокТиповДокументов.Добавить("АвансовыйОтчет", "Авансовый отчет");
	СписокТиповДокументов.Добавить("ПриходнаяНакладная", "Приходная накладная");

	Оповещение = Новый ОписаниеОповещения("СписокДокументовПередНачаломДобавленияЗавершение", ЭтотОбъект);
	СписокТиповДокументов.ПоказатьВыборЭлемента(Оповещение, "Выберите тип документа для добавления");

	Отказ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовПередНачаломДобавленияЗавершение(ВыбранныйЭлемент, Параметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыВыбора = Новый Структура;

	Если Не УчетПоКомпании Тогда

		ПараметрыВыбора.Вставить("Отбор", Новый Структура("Организация", ОрганизацияДокумента));

	КонецЕсли;

	ОткрытьФорму(СтрШаблон("Документ.%1.ФормаВыбора", ВыбранныйЭлемент.Значение), ПараметрыВыбора, ЭтотОбъект);

КонецПроцедуры

// Процедура - обработчик события ОбработкаВыбора табличного поля ОтобранныеДокументы
//
&НаКлиенте
Процедура ОтобранныеДокументыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл

		СтруктураПоиска = Новый Структура("ДокументПоступления", ЭлементМассива);

		МассивНайденныхСтрок = ОтобранныеДокументы.НайтиСтроки(СтруктураПоиска);

		Если МассивНайденныхСтрок.Количество() < 1 Тогда

			НоваяСтрока = ОтобранныеДокументы.Добавить();
			НоваяСтрока.Отметка = Истина;
			НоваяСтрока.ДокументПоступления = ЭлементМассива;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтобранныеЗапасы

// Процедура расчитывает сумму по строке в зависимости
// от устуновленного количества
&НаКлиенте
Процедура ОтобранныеЗапасыКоличествоПриИзменении(Элемент)

	РассчитатьСуммуВСтрокеТабличнойЧасти("Запасы");

КонецПроцедуры

// Процедура расчитывает сумму по строке в зависимости
// от устуновленной цены
&НаКлиенте
Процедура ОтобранныеЗапасыЦенаПриИзменении(Элемент)

	РассчитатьСуммуВСтрокеТабличнойЧасти();

КонецПроцедуры

// Процедура расчитывает цену по строке в зависимости
// от установленной суммы
&НаКлиенте
Процедура ОтобранныеЗапасыСуммаПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;

	Если СтрокаТабличнойЧасти.Количество <> 0 Тогда
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
	КонецЕсли;

	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры

// Процедура пересчитывает сумму НДС в зависимости
// от измененной ставки НДС
&НаКлиенте
Процедура ОтобранныеЗапасыСтавкаНДСПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;

	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры


&НаКлиенте
Процедура ОтобранныеЗапасыСуммаНДСПриИзменении(Элемент)

	СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;

	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры

// Процедура - обработчик события "Выбор" табличного поля "ОтобранныеЗапасы"
//
&НаКлиенте
Процедура ОтобранныеЗапасыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ТекущаяСтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;

	Если Не ТекущаяСтрокаТабличнойЧасти = Неопределено Тогда

		Если ТипЗнч(ТекущаяСтрокаТабличнойЧасти.ДокументПоступления) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда

			ОткрытьФорму("Документ.ПриходнаяНакладная.ФормаОбъекта", Новый Структура("Ключ",
				ТекущаяСтрокаТабличнойЧасти.ДокументПоступления));

		ИначеЕсли ТипЗнч(ТекущаяСтрокаТабличнойЧасти.ДокументПоступления) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда

			ОткрытьФорму("Документ.АвансовыйОтчет.ФормаОбъекта", Новый Структура("Ключ",
				ТекущаяСтрокаТабличнойЧасти.ДокументПоступления));

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура установки флажка во всех строках
// табличного поля Отобранные запасы
//
&НаКлиенте
Процедура ВыделитьВсеПозиции(Команда)

	Для Каждого Строчка Из ОтобранныеЗапасы Цикл

		Строчка.Отметка = Истина;

	КонецЦикла;

КонецПроцедуры

// Процедура снятия флажка со всех строк
// табличного поля Отобранные запасы
//
&НаКлиенте
Процедура СнятьВыделениеСоВсехПозиций(Команда)

	Для Каждого Строчка Из ОтобранныеЗапасы Цикл

		Строчка.Отметка = Ложь;

	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки ОК.
//
&НаКлиенте
Процедура ОК(Команда)

	АдресЗапасовВХранилище = ЗаписатьПодборВХранилище();

	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("АдресЗапасовВХранилище", АдресЗапасовВХранилище);
	ПараметрыПодбора.Вставить("ДобавлятьНовыеПозицииВПодвалТаблицы", ДобавлятьНовыеПозицииВПодвалТаблицы);

	Оповестить("ПодборПоДокументамПроизведен", ПараметрыПодбора, УникальныйИдентификаторФормыВладельца);

	Закрыть();

КонецПроцедуры

// Процедура открытия множественного подбора по документа
//
&НаКлиенте
Процедура МножественныйПодборДокументов(Команда)
	
	// 1. Тут определить тип добавляемого документа
	// 2. Открыть список для выбора

	СписокТиповДокументов = Новый СписокЗначений;
	СписокТиповДокументов.Добавить("АвансовыйОтчет", "Авансовый отчет");
	СписокТиповДокументов.Добавить("ПриходнаяНакладная", "Приходная накладная");

	Оповещение = Новый ОписаниеОповещения("МножественныйПодборДокументовЗавершение", ЭтотОбъект);
	СписокТиповДокументов.ПоказатьВыборЭлемента(Оповещение, "Выберите тип документа для добавления");

КонецПроцедуры

&НаКлиенте
Процедура МножественныйПодборДокументовЗавершение(ВыбранныйЭлемент, Параметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыВыбора.Вставить("ЗакрыватьПриВыборе", Ложь);

	Если Не УчетПоКомпании Тогда

		ПараметрыВыбора.Вставить("Отбор", Новый Структура("Организация", ОрганизацияДокумента));

	КонецЕсли;

	ОткрытьФорму(СтрШаблон("Документ.%1.ФормаВыбора", ВыбранныйЭлемент.Значение), ПараметрыВыбора, ЭтотОбъект);

КонецПроцедуры

// Процедура заполняет массив документов отмеченными 
// и передает его в процедуру заполнения таблчиного поля
// Отобранные запасы
&НаКлиенте
Процедура ЗаполнитьПоОтобраннымДокументам(Команда)

	Если ОтобранныеЗапасы.Количество() > 0 Тогда

		ТекстВопроса = НСтр("ru = 'Табличная часть будит очищена и повторно заполнена. Продолжить?'");

		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоОтобраннымДокументамЗавершение", ЭтотОбъект), ТекстВопроса,
			РежимДиалогаВопрос.ДаНет, 0);
		Возврат;

	КонецЕсли;

	ЗавершитьЗаполнениеПоОтобраннымДокументам();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтобраннымДокументамЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Ответ = Результат;

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗавершитьЗаполнениеПоОтобраннымДокументам();
	КонецЕсли;

КонецПроцедуры

// Процедура заполняет массив документов текущим документов,
// вне зависимости от отметки, и передает массив в 
// процедуру заполнения табличного поля 
// Отобранные запасы
&НаКлиенте
Процедура ЗаполнитьПоТекущемуДокументу(Команда)

	ТекущаяСтрокаДокументовПоступлений = Элементы.ОтобранныеДокументы.ТекущиеДанные;

	Если ТекущаяСтрокаДокументовПоступлений = Неопределено Тогда

		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Выделите строку с документом и повторите попытку заполнить'"), , "ОтобранныеДокументы", , );

		Возврат;

	КонецЕсли;

	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(ТекущаяСтрокаДокументовПоступлений.ДокументПоступления);

	ЗаполнитьСписокНоменклатуры(МассивДокументов);

КонецПроцедуры

// Процедура очищает табличное поле Отобранные запасы
//
&НаКлиенте
Процедура ОчиститьОтобранныеЗапасы(Команда)

	ОтобранныеЗапасы.Очистить();

КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаписатьПодборВХранилище()

	Возврат ПоместитьВоВременноеХранилище(ОтобранныеЗапасы.Выгрузить(ОтобранныеЗапасы.НайтиСтроки(
		Новый Структура("Отметка", Истина))), УникальныйИдентификаторФормыВладельца);

КонецФункции

// Процедура заполняет табличную часть Номенклатура отобранная -
// Параметры:
//  МассивДокументов - Массив - массив документов, по которым происходит заполнение
//  в зависимости от способа заполнения: по всем документам, по одному, по отмеченным.
&НаСервере
Процедура ЗаполнитьСписокНоменклатуры(МассивДокументов)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА КАК Отметка,
	|	АвансовыйОтчетЗапасы.Ссылка КАК ДокументПоступления,
	|	АвансовыйОтчетЗапасы.Номенклатура,
	|	АвансовыйОтчетЗапасы.Характеристика,
	|	АвансовыйОтчетЗапасы.Партия,
	|	АвансовыйОтчетЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	АвансовыйОтчетЗапасы.Количество,
	|	АвансовыйОтчетЗапасы.Цена,
	|	АвансовыйОтчетЗапасы.Сумма,
	|	АвансовыйОтчетЗапасы.СтавкаНДС,
	|	АвансовыйОтчетЗапасы.СуммаНДС,
	|	АвансовыйОтчетЗапасы.Всего,
	|	АвансовыйОтчетЗапасы.ЗаказПокупателя,
	|	1 КАК Коэффициент,
	|	АвансовыйОтчетЗапасы.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	АвансовыйОтчетЗапасы.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АвансовыйОтчет.Запасы КАК АвансовыйОтчетЗапасы
	|ГДЕ
	|	АвансовыйОтчетЗапасы.Ссылка В (&МассивДокументов)
	|	И &УсловиеОтбораНоменклатурыДляАвансовогоОтчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ПриходнаяНакладнаяЗапасы.Ссылка,
	|	ПриходнаяНакладнаяЗапасы.Номенклатура,
	|	ПриходнаяНакладнаяЗапасы.Характеристика,
	|	ПриходнаяНакладнаяЗапасы.Партия,
	|	ПриходнаяНакладнаяЗапасы.ЕдиницаИзмерения,
	|	ПриходнаяНакладнаяЗапасы.Количество,
	|	ПриходнаяНакладнаяЗапасы.Цена,
	|	ПриходнаяНакладнаяЗапасы.Сумма,
	|	ПриходнаяНакладнаяЗапасы.СтавкаНДС,
	|	ПриходнаяНакладнаяЗапасы.СуммаНДС,
	|	ПриходнаяНакладнаяЗапасы.Всего,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяЗапасы.Заказ ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА ПриходнаяНакладнаяЗапасы.Заказ.ЗаказПокупателя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	КОНЕЦ,
	|	1,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.НалогообложениеНДС,
	|	ПриходнаяНакладнаяЗапасы.Ссылка.СуммаВключаетНДС
	|ИЗ
	|	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка В (&МассивДокументов)
	|	И &УсловиеОтбораНоменклатурыДляПриходнойНакладной");

	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);

	Если ЗаполнятьТолькоПоУказаннойНоменклатуре Тогда

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляАвансовогоОтчета",
			"АвансовыйОтчетЗапасы.Номенклатура В(&МассивНоменклатуры)");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляПриходнойНакладной",
			"ПриходнаяНакладнаяЗапасы.Номенклатура В(&МассивНоменклатуры)");
		Запрос.УстановитьПараметр("МассивНоменклатуры", ОтобраннаяНоменклатура.Выгрузить());

	Иначе

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляАвансовогоОтчета", "Истина");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораНоменклатурыДляПриходнойНакладной", "Истина");

	КонецЕсли;

	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл

		Если ДобавлятьНовыеПозицииВПодвалТаблицы Тогда

			ЗаполнитьЗначенияСвойств(ОтобранныеЗапасы.Добавить(), ВыборкаЗапроса);

		Иначе

			Цена = ВыборкаЗапроса.Цена;
			Если ВыборкаЗапроса.СуммаВключаетНДС <> СуммаВключаетНДС Тогда

				Цена = Окр(УправлениеНебольшойФирмойСервер.ПересчитатьСуммуПриИзмененииФлаговНДС(Цена,
					СуммаВключаетНДС, ВыборкаЗапроса.СтавкаНДС), 2);

			КонецЕсли;

			СтруктураПоиска = Новый Структура("ДокументПоступления, Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, СтавкаНДС, ЗаказПокупателя, Цена",
				ВыборкаЗапроса.ДокументПоступления, ВыборкаЗапроса.Номенклатура, ВыборкаЗапроса.Характеристика,
				ВыборкаЗапроса.Партия, ВыборкаЗапроса.ЕдиницаИзмерения, ВыборкаЗапроса.СтавкаНДС,
				ВыборкаЗапроса.ЗаказПокупателя, Цена); //Цена должна совпадать, иначе две строки и пусть определяют нужную цену для долей распределения

			СтрокаДубликата = ОтобранныеЗапасы.НайтиСтроки(СтруктураПоиска);
			
			// Пользователь руками может создать дубл. строку
			// мешать не будим, ведь это не ведет к ошибочным действиям
			// просто добавим данные в первую найденную строку
			Если СтрокаДубликата.Количество() > 0 Тогда 
				
				// Подсчет на сервере, не уходя на клиента
				СтрокаДубликата[0].Количество = СтрокаДубликата[0].Количество + ВыборкаЗапроса.Количество;

				Если ВыборкаЗапроса.СуммаВключаетНДС = СуммаВключаетНДС Тогда

					СтрокаДубликата[0].Сумма = СтрокаДубликата[0].Количество * СтрокаДубликата[0].Цена;

				ИначеЕсли ВыборкаЗапроса.СуммаВключаетНДС И Не СуммаВключаетНДС Тогда

					СтрокаДубликата[0].Сумма = СтрокаДубликата[0].Сумма + Окр((ВыборкаЗапроса.Сумма
						/ ((ВыборкаЗапроса.СтавкаНДС.Ставка + 100) / 100)), 2);

				ИначеЕсли ВыборкаЗапроса.СуммаВключаетНДС И Не СуммаВключаетНДС Тогда

					СтрокаДубликата[0].Сумма = СтрокаДубликата[0].Сумма + Окр((ВыборкаЗапроса.Сумма
						- ВыборкаЗапроса.Сумма / ((ВыборкаЗапроса.СтавкаНДС.Ставка + 100) / 100)), 2);

				КонецЕсли;

				СтрокаДубликата[0].СуммаНДС = СтрокаДубликата[0].СуммаНДС + ВыборкаЗапроса.СуммаНДС;
				СтрокаДубликата[0].Всего = СтрокаДубликата[0].Всего + ВыборкаЗапроса.Всего;

			Иначе
				
				// Новая строка
				НоваяСтрока = ОтобранныеЗапасы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапроса,
					"ДокументПоступления, Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Количество, СтавкаНДС, ЗаказПокупателя");

				НоваяСтрока.Отметка = Истина;
				Если ВыборкаЗапроса.СуммаВключаетНДС = СуммаВключаетНДС Тогда

					НоваяСтрока.Цена = Цена;
					НоваяСтрока.Сумма = ВыборкаЗапроса.Сумма;
					НоваяСтрока.СуммаНДС = ВыборкаЗапроса.СуммаНДС;
					НоваяСтрока.Всего = ВыборкаЗапроса.Всего;

				ИначеЕсли ВыборкаЗапроса.СуммаВключаетНДС И Не СуммаВключаетНДС Тогда

					НоваяСтрока.Цена = Цена;
					НоваяСтрока.Сумма = Окр(ВыборкаЗапроса.Сумма / ((ВыборкаЗапроса.СтавкаНДС.Ставка + 100) / 100), 2);
					НоваяСтрока.СуммаНДС = ВыборкаЗапроса.СуммаНДС;
					НоваяСтрока.Всего = ВыборкаЗапроса.Всего;

				ИначеЕсли Не ВыборкаЗапроса.СуммаВключаетНДС И СуммаВключаетНДС Тогда
					СтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(ВыборкаЗапроса.Номенклатура.ВидСтавкиНДС);
					НоваяСтрока.Цена = Цена;
					НоваяСтрока.Сумма = Окр(ВыборкаЗапроса.Сумма + (ВыборкаЗапроса.Сумма * ?(ЗначениеЗаполнено(
						СтавкаНДС), СтавкаНДС.Ставка, 0) / 100), 2);
					НоваяСтрока.СуммаНДС = ВыборкаЗапроса.СуммаНДС;
					НоваяСтрока.Всего = ВыборкаЗапроса.Всего;

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Процедура изменяет видимость строк в табличном поле Отобранная номенклатура
//
&НаКлиенте
Процедура УстановитьВидимостьОтобранныхЗапасов(ТекущиеДанные)

	Если ТекущиеДанные = Неопределено Или Не ОтображатьНоменклатуруТолькоДляТекущегоДокумента Тогда

		Элементы.ОтобранныеЗапасы.ОтборСтрок = Новый ФиксированнаяСтруктура;
		Элементы.ОтобранныеЗапасы.Обновить();

	Иначе

		Элементы.ОтобранныеЗапасы.ОтборСтрок = Новый ФиксированнаяСтруктура("ДокументПоступления",
			ТекущиеДанные.ДокументПоступления);

	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ЗавершитьЗаполнениеПоОтобраннымДокументам()
	Перем МассивДокументов, СтрокаДокументаПоступления;

	ОтобранныеЗапасы.Очистить();

	МассивДокументов = Новый Массив;
	Для Каждого СтрокаДокументаПоступления Из ОтобранныеДокументы Цикл

		Если Не СтрокаДокументаПоступления.Отметка Тогда

			Продолжить;

		КонецЕсли;

		МассивДокументов.Добавить(СтрокаДокументаПоступления.ДокументПоступления);

	КонецЦикла;

	ЗаполнитьСписокНоменклатуры(МассивДокументов);

КонецПроцедуры

// Рассчитывается сумма НДС в строке табличной части.
//
&НаКлиенте
Процедура РассчитатьСуммуНДС(СтрокаТабличнойЧасти)

	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);

	СтрокаТабличнойЧасти.СуммаНДС = ?(
		СуммаВключаетНДС, СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
		СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);

КонецПроцедуры

// Процедура рассчитывает сумму в строке табличной части.
//
&НаКлиенте
Процедура РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти = Неопределено)

	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = Элементы.ОтобранныеЗапасы.ТекущиеДанные;
	КонецЕсли;

	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	РассчитатьСуммуНДС(СтрокаТабличнойЧасти);
	СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);

КонецПроцедуры

#КонецОбласти

