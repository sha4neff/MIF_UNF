#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ИнтерфейсПечати

Функция ОписатьПравилаЗаполненияПодписей() Экспорт
	
	РеквизитыОбъекта = Новый Соответствие;
	
	РеквизитыОбъекта.Вставить("ПодписьПроверяющего","Организация.ПодписьГлавногоБухгалтера");
	РеквизитыОбъекта.Вставить("ПодписьМОЛ1",		"СтруктурнаяЕдиница.ПодписьМОЛ");
	РеквизитыОбъекта.Вставить("Комиссия", 			"ЭтоКомиссия");
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

Функция ТекстЗапросаУниверсальный()
	
	Возврат
	"
	// :::Шапка
	|ВЫБРАТЬ
	|	ИнвентаризацияЗапасов.Ссылка КАК Ссылка
	|	,ИнвентаризацияЗапасов.Номер КАК Номер
	|	,ИнвентаризацияЗапасов.Дата КАК ДатаДокумента
	|	,ИнвентаризацияЗапасов.Дата КАК ДатаНачалаИнвентаризации
	|	,ИнвентаризацияЗапасов.ДатаОкончания КАК ДатаОкончания
	|	,ИнвентаризацияЗапасов.Организация
	|	,ИнвентаризацияЗапасов.СтруктурнаяЕдиница.Представление КАК ПредставлениеПодразделения
	|	,ИнвентаризацияЗапасов.Организация.Префикс КАК Префикс
	|	,ИнвентаризацияЗапасов.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|	,ИнвентаризацияЗапасов.ДокументОснованиеДата КАК ДокументОснованиеДата
	|	,ИнвентаризацияЗапасов.ВидЦенностей КАК ВидЦенностей
	|	,ИнвентаризацияЗапасов.ФормаСобственностиЦенностей КАК ФормаСобственностиЦенностей
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ1 КАК ПодписьМОЛ1
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ1.РасшифровкаПодписи КАК РасшифровкаПодписиМОЛ1
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ1.Должность КАК ДолжностьМОЛ1
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ2 КАК ПодписьМОЛ2
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ2.РасшифровкаПодписи КАК РасшифровкаПодписиМОЛ2
	|	,ИнвентаризацияЗапасов.ПодписьМОЛ2.Должность КАК ДолжностьМОЛ2
	|	,ИнвентаризацияЗапасов.ПодписьПроверяющего КАК ПодписьПроверяющего
	|	,ИнвентаризацияЗапасов.ПодписьПроверяющего.РасшифровкаПодписи КАК РасшифровкаПодписиПроверяющего
	|	,ИнвентаризацияЗапасов.ПодписьПроверяющего.Должность КАК ДолжностьПроверяющего
	|ИЗ Документ.ИнвентаризацияЗапасов КАК ИнвентаризацияЗапасов
	|ГДЕ ИнвентаризацияЗапасов.Ссылка = &ТекущийДокумент
	|
	// :::Табличная часть
	|;Выбрать
	|	НомерСтроки КАК Номер
	|	,КлючСвязи
	|	,Номенклатура
	|	,Выбор КОГДА (ВЫРАЗИТЬ(Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """" 
	|		ТОГДА Запасы.Номенклатура.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КОНЕЦ КАК ПредставлениеНоменклатуры
	|	,Характеристика
	|	,Номенклатура.Артикул КАК Артикул
	|	,Номенклатура.Код КАК ТоварКод
	|	,Номенклатура.Код КАК Код
	|	,ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование
	|	,ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
	|	,Номенклатура.СчетУчетаЗапасов.Код КАК СубСчет
	|	,Количество КАК ФактКоличество
	|	,КоличествоУчет КАК БухКоличество
	|	,Отклонение КАК Отклонение
	|	,ВЫРАЗИТЬ(ВЫБОР КОГДА &ВалютаНациональная = &ВалютаУчета ТОГДА Запасы.Цена
	|			ИНАЧЕ Запасы.Цена * КурсВалютыУправленческогоУчета.Курс / КурсВалютыУправленческогоУчета.Кратность КОНЕЦ
	|		КАК Число(15, 2)) КАК Цена
	|	,ВЫРАЗИТЬ(ВЫБОР КОГДА &ВалютаНациональная = &ВалютаУчета ТОГДА Запасы.Сумма
	|			ИНАЧЕ Запасы.Сумма * КурсВалютыУправленческогоУчета.Курс / КурсВалютыУправленческогоУчета.Кратность КОНЕЦ
	|		КАК ЧИСЛО(15, 2)) КАК ФактСумма
	|	,ВЫРАЗИТЬ(ВЫБОР КОГДА &ВалютаНациональная = &ВалютаУчета ТОГДА Запасы.СуммаУчет
	|			ИНАЧЕ Запасы.СуммаУчет * КурсВалютыУправленческогоУчета.Курс / КурсВалютыУправленческогоУчета.Кратность КОНЕЦ
	|		КАК ЧИСЛО(15, 2)) КАК БухСумма
	|	,Цена КАК ЦенаБезПересчета
	|	,Сумма КАК СуммаБезПересчета
	|	,СуммаУчет КАК СуммаПоУчету
	|ИЗ Документ.ИнвентаризацияЗапасов.Запасы КАК Запасы
	|	,РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &ВалютаУчета) КАК КурсВалютыУправленческогоУчета
	|ГДЕ Запасы.Ссылка = &ТекущийДокумент
	|УПОРЯДОЧИТЬ ПО Запасы.НомерСтроки
	|
	// ::: Подписи комиссии
	|;Выбрать
	|	ПодписиКомиссии.ЭтоПодписьПредседателяКомиссии КАК ЭтоПодписьПредседателяКомиссии
	|	,ПодписиКомиссии.ПодписьЧленаКомиссии.Должность КАК Должность
	|	,ПодписиКомиссии.ПодписьЧленаКомиссии.РасшифровкаПодписи КАК РасшифровкаПодписи
	|ИЗ Справочник.Комиссии.ПодписиКомиссии КАК ПодписиКомиссии
	|ГДЕ ПодписиКомиссии.Ссылка = &Комиссия
	|УПОРЯДОЧИТЬ ПО ПодписиКомиссии.ЭтоПодписьПредседателяКомиссии УБЫВ // Председатель обязательно первый!
	|
	// ::: Серийные номера
	|;Выбрать
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер
	|	,СерийныеНомера.КлючСвязи КАК КлючСвязи
	|ИЗ Документ.ИнвентаризацияЗапасов.СерийныеНомера КАК СерийныеНомера
	|ГДЕ СерийныеНомера.Ссылка = &ТекущийДокумент
	|";
	
КонецФункции

Функция ДанныеБланкаТоварногоНаполнения(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияЗапасов.Ссылка КАК Ссылка,
	|	ИнвентаризацияЗапасов.Дата КАК ДатаДокумента,
	|	""Инвентаризация запасов"" КАК ПредставлениеРегистратора,
	|	""Запасы"" КАК ТипНоменклатурыТаблицы,
	|	ИнвентаризацияЗапасов.СтруктурнаяЕдиница КАК ПредставлениеСклада,
	|	ИнвентаризацияЗапасов.Ячейка КАК ПредставлениеЯчейки,
	|	ИнвентаризацияЗапасов.Номер,
	|	ИнвентаризацияЗапасов.Организация.Префикс КАК Префикс,
	|	ИнвентаризацияЗапасов.Запасы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура.Склад КАК Склад,
	|		Номенклатура.Ячейка КАК Ячейка,
	|		НЕОПРЕДЕЛЕНО КАК Содержание,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ИнвентаризацияЗапасов.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(100))) = """"
	|				ТОГДА ИнвентаризацияЗапасов.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ИнвентаризацияЗапасов.Запасы.Номенклатура.НаименованиеПолное
	|		КОНЕЦ КАК ПредставлениеНоменклатуры,
	|		Номенклатура.Артикул КАК Артикул,
	|		Номенклатура.Код КАК Код,
	|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|		Количество КАК Количество,
	|		Характеристика,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		КлючСвязи
	|	) КАК ТаблицаЗапасы,
	|	ИнвентаризацияЗапасов.СерийныеНомера.(
	|		СерийныйНомер,
	|		КлючСвязи
	|	) КАК ТаблицаСерийныеНомера
	|ИЗ
	|	Документ.ИнвентаризацияЗапасов КАК ИнвентаризацияЗапасов
	|ГДЕ
	|	ИнвентаризацияЗапасов.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура СформироватьИНВ3(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, ЗаполнятьФактическиеДанные)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ВалютаУчета			= Константы.ВалютаУчета.Получить();
	ВалютаНациональная	= Константы.НациональнаяВалюта.Получить();
	ДанныеПечати		= Новый Структура;
	
	Запрос				= Новый Запрос(ТекстЗапросаУниверсальный());
	Запрос.УстановитьПараметр("ВалютаУчета", 		ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", ВалютаНациональная);
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		Запрос.УстановитьПараметр("ТекущийДокумент",	ТекущийДокумент);
		Запрос.УстановитьПараметр("Комиссия", 			ТекущийДокумент.Комиссия);
		Запрос.УстановитьПараметр("Дата", 				ТекущийДокумент.Дата);
		
		РезультатЗапроса	= Запрос.ВыполнитьПакет();
		Шапка				= РезультатЗапроса[0].Выбрать();
		ВыборкаСтрокТовары	= РезультатЗапроса[1].Выбрать();
		ВыборкаКомиссия		= РезультатЗапроса[2].Выбрать();
		
		// :::Шапка (1-я страница формы)
		Шапка.Следующий();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации",	ПредставлениеОрганизации);
		ДанныеПечати.Вставить("НомерДокумента",				ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс));
		ДанныеПечати.Вставить("ОрганизацияПоОКПО",			СведенияОбОрганизации.КодПоОКПО);
		ДанныеПечати.Вставить("ДатаДокумента",				Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ДатаОкончанияИнвентаризации",?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДатаОкончанияЛокально", 		?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДолжностьМОЛ1",				Шапка.ДолжностьМОЛ1);
		ДанныеПечати.Вставить("ФИОМОЛ1",					Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("ДолжностьМОЛ2",				Шапка.ДолжностьМОЛ2);
		ДанныеПечати.Вставить("ФИОМОЛ2",					Шапка.РасшифровкаПодписиМОЛ2);
		
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// :::Заголовок таблицы (2-я страница формы)
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		
		ИтогФактКоличество = 0;
		ИтогФактСумма      = 0;
		ИтогФактСуммаВсего = 0;
		ИтогБухКоличество  = 0;
		ИтогБухСумма       = 0;
		
		КолвоСтрокПоСтранице = 0;
		КолвоПоСтранице      = 0;
		СуммаЛиста           = 0;
		ИтогоКолво           = 0;
		
		НомерСтраницы = 2;
		Ном = 0;
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("НомерСтраницы", Нстр("ru ='Страница '") + НомерСтраницы);
		
		ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		// :::Строки
		ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
		
		СтрокаСПодвалом = Новый Массив;
		ПараметрыНоменклатуры = Новый Структура;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ДанныеПечати.Очистить();
			
			Ном = Ном + 1;
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ДанныеПечати.Вставить("Номер", Ном);
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокТовары.ПредставлениеНоменклатуры);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокТовары.Характеристика);
			ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокТовары.Код);
			ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
			ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры));
			
			Если НЕ ЗаполнятьФактическиеДанные Тогда
				
				ДанныеПечати.Вставить("ФактКоличество", Неопределено);
				ДанныеПечати.Вставить("ФактСумма", Неопределено);
				
			КонецЕсли;
			
			СтрокаСПодвалом.Очистить();
			СтрокаСПодвалом.Добавить(ОбластьСтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ОбластьПодвалСтраницы);
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				Если ЗаполнятьФактическиеДанные Тогда
					
					КолвоПоСтранице = УправлениеНебольшойФирмойСервер.КоличествоПрописью(КолвоПоСтранице);
					СуммаЛиста = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаЛиста, ВалютаНациональная);
					
					ДанныеПечати.Вставить("ИтогоФактКоличество", ИтогФактКоличество);
					ДанныеПечати.Вставить("ИтогоФактСумма", ИтогФактСумма);
					ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", КолвоПоСтранице);
					ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", СуммаЛиста);
					
				КонецЕсли;
				
				ДанныеПечати.Вставить("ИтогоБухКоличество", ИтогБухКоличество);
				ДанныеПечати.Вставить("ИтогоБухСумма", ИтогБухСумма);
				ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0"));
				
				ОбластьПодвалСтраницы.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ДанныеПечати.Вставить("НомерСтраницы", Нстр("ru ='Страница '") + НомерСтраницы);
				ОбластьЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
				ИтогФактКоличество = 0;
				ИтогФактСумма      = 0;
				ИтогБухКоличество  = 0;
				ИтогБухСумма       = 0;
				
				КолвоСтрокПоСтранице = 0;
				КолвоПоСтранице      = 0;
				СуммаЛиста           = 0;
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
			Если ЗаполнятьФактическиеДанные Тогда
				
				ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.ФактКоличество;
				ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.ФактСумма;
				ИтогФактСуммаВсего = ИтогФактСуммаВсего + ВыборкаСтрокТовары.ФактСумма;
				
			КонецЕсли;
			
			ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.БухКоличество;
			ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.БухСумма;
			ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.ФактКоличество;
			
			КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
			КолвоПоСтранице      = КолвоПоСтранице      + ВыборкаСтрокТовары.ФактКоличество;
			СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.ФактСумма;
			
		КонецЦикла;
		
		// :::Итоги (последней страницы)
		ДанныеПечати.Очистить();
		
		Если ЗаполнятьФактическиеДанные Тогда
			
			ДанныеПечати.Вставить("ИтогоФактКоличество", ИтогФактКоличество);
			ДанныеПечати.Вставить("ИтогоФактСумма", ИтогФактСумма);
			ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", УправлениеНебольшойФирмойСервер.КоличествоПрописью(КолвоПоСтранице));
			ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаЛиста, ВалютаНациональная));
			
		КонецЕсли;
		
		ДанныеПечати.Вставить("ИтогоБухКоличество", ИтогБухКоличество);
		ДанныеПечати.Вставить("ИтогоБухСумма", ИтогБухСумма);
		ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0"));
		
		ОбластьПодвалСтраницы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
		
		// :::Подвал
		ОбластьМакетаИтогиОписи = Макет.ПолучитьОбласть("ИтогиОписи");
		
		Если ЗаполнятьФактическиеДанные Тогда
			
			ДанныеПечати.Вставить("ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью", УправлениеНебольшойФирмойСервер.КоличествоПрописью(ИтогоКолво));
			ДанныеПечати.Вставить("СуммаФактическиНаСтраницеПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтогФактСуммаВсего, ВалютаНациональная));
			
		КонецЕсли;
		
		ДанныеПечати.Вставить("КоличествоПорядковыхНомеровНаСтраницеПрописью", ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0"));
		
		ОбластьМакетаИтогиОписи.Параметры.Заполнить(Шапка);
		ОбластьМакетаИтогиОписи.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогиОписи);
		
		// :::Комиссия
		ОбластьМакетаКомиссия = Макет.ПолучитьОбласть("Комиссия");
		
		ДанныеПечати.Очистить();
		
		ЭтоПервыйЧленКомиссии = Истина;
		Пока ВыборкаКомиссия.Следующий() Цикл
			
			ЗаголовокПодписи = "";
			Если ВыборкаКомиссия.ЭтоПодписьПредседателяКомиссии Тогда
				
				ЗаголовокПодписи = НСтр("ru ='Председатель комиссии:'");
				
			ИначеЕсли ЭтоПервыйЧленКомиссии Тогда
				
				ЗаголовокПодписи = НСтр("ru ='Члены комиссии:'");
				ЭтоПервыйЧленКомиссии = Ложь;
				
			Иначе
			КонецЕсли;
			
			ДанныеПечати.Вставить("ЗаголовокПодписи", ЗаголовокПодписи);
			ДанныеПечати.Вставить("Должность", ВыборкаКомиссия.Должность);
			ДанныеПечати.Вставить("РасшифровкаПодписи", ВыборкаКомиссия.РасшифровкаПодписи);
			
			ОбластьМакетаКомиссия.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакетаКомиссия);
			
		КонецЦикла;
		
		// :::Ответственные по описи
		ОбластьМакетаОтветственные = Макет.ПолучитьОбласть("ОтветственныеЛица");
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("НачальныйНомерПоПорядку", 1);
		ДанныеПечати.Вставить("НомерКонца",						ВыборкаСтрокТовары.Количество());
		ДанныеПечати.Вставить("ДолжностьМОЛ1",					Шапка.ДолжностьМОЛ1);
		ДанныеПечати.Вставить("ФИОМОЛ1",						Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("ДолжностьМОЛ2",					Шапка.ДолжностьМОЛ2);
		ДанныеПечати.Вставить("ФИОМОЛ2",						Шапка.РасшифровкаПодписиМОЛ2);
		ДанныеПечати.Вставить("ДатаДокумента",					Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ДолжностьПроверяющего",			Шапка.ДолжностьПроверяющего);
		ДанныеПечати.Вставить("РасшифровкаПодписиПроверяющего",	Шапка.РасшифровкаПодписиПроверяющего);
		
		ОбластьМакетаОтветственные.Параметры.Заполнить(Шапка);
		ОбластьМакетаОтветственные.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаОтветственные);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьИНВ19(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, ЗаполнятьФактическимиЦенами)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ВалютаУчета			= Константы.ВалютаУчета.Получить();
	ВалютаНациональная	= Константы.НациональнаяВалюта.Получить();
	ДанныеПечати		= Новый Структура;
	
	Запрос				= Новый Запрос(ТекстЗапросаУниверсальный());
	Запрос.УстановитьПараметр("ВалютаУчета", 		ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", ВалютаНациональная);
	
	// Получение областей макета.
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоТаблицы");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		ДанныеПечати.Очистить();
		
		Запрос.УстановитьПараметр("ТекущийДокумент",	ТекущийДокумент);
		Запрос.УстановитьПараметр("Дата",				ТекущийДокумент.Дата);
		Запрос.УстановитьПараметр("Комиссия", 			ТекущийДокумент.Комиссия);
		
		РезультатЗапроса	= Запрос.ВыполнитьПакет();
		Шапка				= РезультатЗапроса[0].Выбрать();
		ВыборкаСтрокТовары	= РезультатЗапроса[1].Выбрать();
		ВыборкаКомиссия		= РезультатЗапроса[2].Выбрать();
		
		Шапка.Следующий();
		
		// :::Шапка (1-я страница формы)
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации",	ПредставлениеОрганизации);
		ДанныеПечати.Вставить("НомерДокумента",				ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс));
		ДанныеПечати.Вставить("ОрганизацияПоОКПО",			СведенияОбОрганизации.КодПоОКПО);
		ДанныеПечати.Вставить("ДатаДокумента",				Шапка.ДатаДокумента);
		ДанныеПечати.Вставить("ДатаНачалаИнвентаризации",	Шапка.ДатаНачалаИнвентаризации);
		ДанныеПечати.Вставить("ДатаОкончанияИнвентаризации",?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДатаОкончанияЛокально", 		?(ЗначениеЗаполнено(Шапка.ДатаОкончания), Шапка.ДатаОкончания, Шапка.ДатаДокумента));
		ДанныеПечати.Вставить("ДолжностьМОЛ1",				Шапка.ДолжностьМОЛ1);
		ДанныеПечати.Вставить("ФИОМОЛ1",					Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("ДолжностьМОЛ2",				Шапка.ДолжностьМОЛ2);
		ДанныеПечати.Вставить("ФИОМОЛ2",					Шапка.РасшифровкаПодписиМОЛ2);
		
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.Заполнить(ДанныеПечати);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// :::Заголовок таблицы (2-я страница формы)
		НомерСтраницы   = 2;
		НомерСтроки     = 1;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		ИтогоРезультатИзлишекКоличество   = 0;
		ИтогоРезультатИзлишекСумма        = 0;
		ИтогоРезультатНедостачаКоличество = 0;
		ИтогоРезультатНедостачаСумма      = 0;
		
		ИтогоСписаниеНедостачКолонка1Количество = 0;
		ИтогоСписаниеНедостачКолонка1Сумма      = 0;
		ИтогоПриходИзлишковКоличество           = 0;
		ИтогоПриходИзлишковСумма                = 0;
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("НомерСтраницы", Нстр("ru ='Страница '") + НомерСтраницы);
		
		ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
		
		// :::Строки
		СтрокаСПодвалом = Новый Массив;
		ПараметрыНоменклатуры = Новый Структура;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ДанныеПечати.Очистить();
			Разница		= 0;
			РазницаСумм = 0;
			
			ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокТовары.ПредставлениеНоменклатуры);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокТовары.Характеристика);
			ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("Код", ВыборкаСтрокТовары.Код);
			ПараметрыНоменклатуры.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
			ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(ПараметрыНоменклатуры));
			
			Разница = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
			Если Разница = 0 Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если ЗаполнятьФактическимиЦенами Тогда
				
				Цена = ВыборкаСтрокТовары.Цена;
				
			ИначеЕсли ВыборкаСтрокТовары.БухКоличество = 0 Тогда
				
				Цена = 0;
				
			Иначе
				
				Цена = Окр(ВыборкаСтрокТовары.БухСумма / ВыборкаСтрокТовары.БухКоличество, 2);
				
			КонецЕсли;
			
			РазницаСумм = Цена * Разница;
			Если Разница < 0 Тогда
				
				ДанныеПечати.Вставить("РезультатНедостачаКоличество",		- Разница);
				ДанныеПечати.Вставить("РезультатНедостачаСумма",			- РазницаСумм);
				ДанныеПечати.Вставить("РезультатИзлишекКоличество",			0);
				ДанныеПечати.Вставить("РезультатИзлишекСумма",				0);
				
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Количество", - Разница);
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Сумма",		- РазницаСумм);
				ДанныеПечати.Вставить("ПриходИзлишковКоличество",			0);
				ДанныеПечати.Вставить("ПриходИзлишковСумма",				0);
				
				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + ( - Разница);
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + ( - РазницаСумм);
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + 0;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + 0;
				
				ИтогоСписаниеНедостачКолонка1Количество = ИтогоСписаниеНедостачКолонка1Количество	+ ( - Разница);
				ИтогоСписаниеНедостачКолонка1Сумма		= ИтогоСписаниеНедостачКолонка1Сумма		+ ( - РазницаСумм);
				ИтогоПриходИзлишковКоличество			= ИтогоПриходИзлишковКоличество				+ 0;
				ИтогоПриходИзлишковСумма				= ИтогоПриходИзлишковСумма					+ 0;
				
			Иначе
				
				ДанныеПечати.Вставить("РезультатНедостачаКоличество",		0);
				ДанныеПечати.Вставить("РезультатНедостачаСумма",			0);
				ДанныеПечати.Вставить("РезультатИзлишекКоличество",			Разница);
				ДанныеПечати.Вставить("РезультатИзлишекСумма",				РазницаСумм);
				
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Количество", 0);
				ДанныеПечати.Вставить("СписаниеНедостачКолонка1Сумма",		0);
				ДанныеПечати.Вставить("ПриходИзлишковКоличество",			Разница);
				ДанныеПечати.Вставить("ПриходИзлишковСумма",				РазницаСумм);
				
				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + 0;
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + 0;
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + Разница;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + РазницаСумм;
				
				ИтогоСписаниеНедостачКолонка1Количество	= ИтогоСписаниеНедостачКолонка1Количество	+ 0;
				ИтогоСписаниеНедостачКолонка1Сумма		= ИтогоСписаниеНедостачКолонка1Сумма		+ 0;
				ИтогоПриходИзлишковКоличество			= ИтогоПриходИзлишковКоличество				+ Разница;
				ИтогоПриходИзлишковСумма				= ИтогоПриходИзлишковСумма					+ РазницаСумм;
				
			КонецЕсли;
			
			// :::Проверка вывода
			СтрокаСПодвалом.Очистить();
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			Если НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				Если НЕ КоличествоСтрок = 1 Тогда
					
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Вывод заголовка таблицы.
					НомерСтраницы = НомерСтраницы + 1;
					ДанныеПечати.Вставить("НомерСтраницы", Нстр("ru ='Страница '") + НомерСтраницы);
					
					ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		// :::Итог (по странице)
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("ИтогоРезультатИзлишекКоличество",	ИтогоРезультатИзлишекКоличество);
		ДанныеПечати.Вставить("ИтогоРезультатИзлишекСумма",			ИтогоРезультатИзлишекСумма);
		ДанныеПечати.Вставить("ИтогоРезультатНедостачаКоличество",	ИтогоРезультатНедостачаКоличество);
		ДанныеПечати.Вставить("ИтогоРезультатНедостачаСумма",		ИтогоРезультатНедостачаСумма);
		
		ДанныеПечати.Вставить("ИтогоПриходИзлишковКоличество",		ИтогоПриходИзлишковКоличество);
		ДанныеПечати.Вставить("ИтогоПриходИзлишковСумма",			ИтогоПриходИзлишковСумма);
		ДанныеПечати.Вставить("ИтогоСписаниеНедостачКолонка1Количество", ИтогоСписаниеНедостачКолонка1Количество);
		ДанныеПечати.Вставить("ИтогоСписаниеНедостачКолонка1Сумма",	ИтогоСписаниеНедостачКолонка1Сумма);
		
		ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
		
		// :::Подвал
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьИнвентаризациюЗапасов(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати)
	Перем ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ВалютаУчета			= Константы.ВалютаУчета.Получить();
	ВалютаНациональная	= Константы.НациональнаяВалюта.Получить();
	ДанныеПечати		= Новый Структура;
	
	Запрос				= Новый Запрос(ТекстЗапросаУниверсальный());
	Запрос.УстановитьПараметр("ВалютаУчета", 		ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", ВалютаНациональная);
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		ДанныеПечати.Очистить();
		
		Запрос.УстановитьПараметр("ТекущийДокумент",	ТекущийДокумент);
		Запрос.УстановитьПараметр("Дата",				ТекущийДокумент.Дата);
		Запрос.УстановитьПараметр("Комиссия", 			ТекущийДокумент.Комиссия);
		
		РезультатЗапроса		= Запрос.ВыполнитьПакет();
		Шапка					= РезультатЗапроса[0].Выбрать();
		ВыборкаСтрокТовары		= РезультатЗапроса[1].Выбрать();
		ВыборкаКомиссия			= РезультатЗапроса[2].Выбрать();
		ВыборкаСерийныеНомера	= РезультатЗапроса[3].Выбрать();
		
		Шапка.Следующий();
		
		// :::Шапка
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
		ШаблонЗаголовка = Нстр("ru ='Инвентаризация запасов № %1 от %2'");
		
		ДанныеПечати.Вставить("ТекстЗаголовка", СтрШаблон(ШаблонЗаголовка, НомерДокумента, Формат(Шапка.ДатаДокумента, "ДЛФ=DD")));
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// :::Поставщик
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		
		СведенияОбОрганизации    = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ПредставлениеОрганизации = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		ДанныеПечати.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		ДанныеПечати.Вставить("ПредставлениеПодразделения", Шапка.ПредставлениеПодразделения);
		ДанныеПечати.Вставить("ВалютаНаименование", Строка(ВалютаУчета));
		ДанныеПечати.Вставить("Валюта", ВалютаУчета);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// :::Шапка таблицы
		ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
		
		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;
		
		// :::Табличная часть
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		
		ПараметрыНоменклатуры = Новый Структура;
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ДанныеПечати.Очистить();
			
			ДанныеПечати.Вставить("НомерСтроки", ВыборкаСтрокТовары.Номер);
			
			ПараметрыНоменклатуры.Очистить();
			ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокТовары.ПредставлениеНоменклатуры);
			ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокТовары.Характеристика);
			ПараметрыНоменклатуры.Вставить("ПредставлениеАртикула", ВыборкаСтрокТовары.Артикул);
			ПараметрыНоменклатуры.Вставить("ПредставлениеСерийногоНомера", РаботаССерийнымиНомерами.СтрокаСерийныеНомераИзВыборки(ВыборкаСерийныеНомера, ВыборкаСтрокТовары.КлючСвязи));
			ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
			
			ДанныеПечати.Вставить("Отклонение", ВыборкаСтрокТовары.Отклонение);
			ДанныеПечати.Вставить("Количество", ВыборкаСтрокТовары.ФактКоличество);
			ДанныеПечати.Вставить("КоличествоПоУчету", ВыборкаСтрокТовары.БухКоличество);
			ДанныеПечати.Вставить("ЕдиницаИзмеренияНаименование", ВыборкаСтрокТовары.ЕдиницаИзмеренияНаименование);
			ДанныеПечати.Вставить("Цена", ВыборкаСтрокТовары.ЦенаБезПересчета);
			ДанныеПечати.Вставить("Сумма", ВыборкаСтрокТовары.СуммаБезПересчета);
			ДанныеПечати.Вставить("СуммаПоУчету", ВыборкаСтрокТовары.СуммаПоУчету);
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.СуммаБезПересчета;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			
		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("Всего", УправлениеНебольшойФирмойСервер.ФорматСумм(ИтогСуммы));
		ДанныеПечати.Вставить("ВсегоПоУчету", УправлениеНебольшойФирмойСервер.ФорматСумм(ИтогСуммыПоУчету));
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ДанныеПечати.Очистить();
		ДанныеПечати.Вставить("РасшифровкаПодписиМОЛ1", Шапка.РасшифровкаПодписиМОЛ1);
		ДанныеПечати.Вставить("РасшифровкаПодписиМОЛ2", Шапка.РасшифровкаПодписиМОЛ2);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ОписаниеПечатнойФормы = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "БланкТоварногоНаполнения");
	Если ОписаниеПечатнойФормы <> Неопределено Тогда
		
		ОписаниеПечатнойФормы.ТабличныйДокумент = Новый ТабличныйДокумент;
		ОписаниеПечатнойФормы.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьБланкТоварногоНаполнения.КлючПараметровПечати();
		ОписаниеПечатнойФормы.ПолныйПутьКМакету = Обработки.ПечатьБланкТоварногоНаполнения.ПолныйПутьКМакету();
		ОписаниеПечатнойФормы.СинонимМакета = Обработки.ПечатьБланкТоварногоНаполнения.ПредставлениеПФ();
		
		ДанныеОбъектовПечати = ДанныеБланкаТоварногоНаполнения(МассивОбъектов, ОбъектыПечати);
		Обработки.ПечатьБланкТоварногоНаполнения.СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ3");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ3";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ3";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-3 (Инвентаризационная опись товаров)'");
		
		СформироватьИНВ3(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Истина);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ3БезФактическихДанных");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ3";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ3";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-3 (Инвентаризационная опись с пустыми фактическими данными)'");
		
		СформироватьИНВ3(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Ложь);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ19");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ19";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ19";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-19 (Сличительная ведомость)'");
		
		СформироватьИНВ19(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Истина);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИНВ19_УчетныеЦены");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИНВ19";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИНВ19";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='ИНВ-19 (Сличительная ведомость, суммы по данным учета)'");
		
		СформироватьИНВ19(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати, Ложь);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИнвентаризацияЗапасов");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияЗапасов_ИнвентаризацияЗапасов";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ИнвентаризацияЗапасов.ПФ_MXL_ИнвентаризацияЗапасов";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='Инвентаризация запасов'");
		
		СформироватьИнвентаризациюЗапасов(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры // Печать()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризацияЗапасов,ИНВ3,ИНВ3БезФактическихДанных,ИНВ19,ИНВ19_УчетныеЦены";
	КомандаПечати.Представление = ПечатьДокументовУНФ.ПредставлениеКомплектаДокументов();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИнвентаризацияЗапасов";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризация запасов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 4;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ3";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-3 (Инвентаризационная опись товаров)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 7;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ3БезФактическихДанных";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-3 (Инвентаризационная опись с пустыми фактическими данными)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ19";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-19 (Сличительная ведомость)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 14;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ19_УчетныеЦены";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-19 (Сличительная ведомость). Суммы по данным учета'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 15;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БланкТоварногоНаполнения";
	КомандаПечати.Представление = Обработки.ПечатьБланкТоварногоНаполнения.ПредставлениеПФ();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 17;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли