#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылкаПередачаТоваровМеждуОрганизациями	 - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - .
//  СтруктураДополнительныеСвойства					 - Структура - .
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = ПолучитьТекстЗапросаИнициализироватьДанные(); // (обратно через "Ctrl"+"-")
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.Дляпроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	Запрос.УстановитьПараметр("ИспользоватьСерийныеНомера", СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера);
	
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	Запрос.УстановитьПараметр("СписаниеЗапасов", НСтр("ru = 'Списание запасов'"));
	
	Запрос.УстановитьПараметр("ВалютаУчета", СтруктураДополнительныеСвойства.ВалютаУчета);
	Запрос.УстановитьПараметр("ВалютаНациональная", СтруктураДополнительныеСвойства.НациональнаяВалюта);
	Запрос.УстановитьПараметр("ВалютаРасчетов", СтруктураДополнительныеСвойства.Договор.ВалютаРасчетов);
	
	// Перед выполнением запроса проверим, необходим ли пересчет из валюты в валюту
	РасчетыПроведениеДокументов.МодифицироватьЗапросДляПересчетаВВалюту(ДокументСсылкаПередачаТоваровМеждуОрганизациями, Запрос, СтруктураДополнительныеСвойства);
	
	Запрос.ВыполнитьПакет();
		
	// Формирование проводок документа.
	УправлениеНебольшойФирмойСервер.СформироватьТаблицуПроводок(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	// Как приходная накладная:
	СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	// Как расходная накладная:
	СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	
	СформироватьТаблицаЗакупки(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаПродажи(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаЗапасы(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	
	// Кассовый метод
	РасчетыПроведениеДокументов.СформироватьВременнаяТаблицаПредоплатаДляКассовогоМетода(СтруктураДополнительныеСвойства, Метаданные.РегистрыНакопления.РасчетыСПокупателями.Имя);
	СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	// Конец Кассовый метод
	
	// Серийные номера
	СформироватьТаблицаСерийныеНомера(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСерийныеНомераКРасходу(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	// Серийные номера
	
	СформироватьТаблицаУправленческий(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	
	// Взаиморасчеты
	СформироватьТаблицаОплатаДокументов(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	СформироватьТаблицаСуммыДокументовРегламентированныйУчет(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Определить документ передачи товаров между организациями
//
// Параметры:
//  ОрганизацияВладелец	 - СправочникСсылка.Организации - .
//  ОрганизацияПродавец	 - СправочникСсылка.Организации - .
//  Дата				 - Дата - .
//
Процедура ОпределитьДокументПередачиТоваровМеждуОрганизациями(ОрганизацияВладелец, ОрганизацияПродавец, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациями.Дата = &Дата
	|	И ПередачаТоваровМеждуОрганизациями.Организация = &ОрганизацияВладелец
	|	И ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = &ОрганизацияПродавец";
	Запрос.УстановитьПараметр("Дата", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ОрганизацияВладелец", ОрганизацияВладелец);
	Запрос.УстановитьПараметр("ОрганизацияПродавец", ОрганизацияПродавец);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ПередачаТоваровМеждуОрганизациями = Документы.ПередачаТоваровМеждуОрганизациями.СоздатьДокумент();
	ПередачаТоваровМеждуОрганизациями.Заполнить(Неопределено);
	ПередачаТоваровМеждуОрганизациями.Дата = НачалоДня(Дата);
	ПередачаТоваровМеждуОрганизациями.Организация = ОрганизацияВладелец;
	ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель = ОрганизацияПродавец;
	ПередачаТоваровМеждуОрганизациями.ВидОперации = Перечисления.ВидыОперацийПередачаТоваровМеждуОрганизациями.АвтоТребуетЗаполнения;
	ПередачаТоваровМеждуОрганизациями.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры

// Нужно заполнять документы передач товаров между организациями
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации - .
//  ДатаПроверки - Дата - .
// 
// Возвращаемое значение:
//  Булево - признак необходимости заполнять документы передач товаров между организациями
//
Функция НужноЗаполнятьДокументыПередачТоваровМеждуОрганизациями(Организация, ДатаПроверки) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ПередачаТоваровМеждуОрганизациями") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РезервыТоваровОрганизацийОстатки.Организация КАК Получатель
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			&ДатаПроверки,
	|			Организация = &Организация) КАК РезервыТоваровОрганизацийОстатки");
	
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#Область ИнтерфейсПечати

// Сформировать печатные формы объектов
//
// Параметры:
//  МассивОбъектов - Массив - ссылки на объекты которые нужно распечатать
//  ПараметрыПечати - Структура - дополнительные параметры печати
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - Структура - параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ВозможныеВарианты = Обработки.ПечатьТОРГ12.МатрицаВозможныхВариантов();
	Для каждого СтрокаТаблицы Из ВозможныеВарианты Цикл
		
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм,
			Обработки.ПечатьТОРГ12.ИдентификаторПечатнойФормы(СтрокаТаблицы.ВключаяУслуги,
				СтрокаТаблицы.ИспользоватьФаксимиле));
			
		Если ПечатнаяФорма = Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = Обработки.ПечатьТОРГ12.КлючПараметровПечати();
		ПечатнаяФорма.ПолныйПутьКМакету = Обработки.ПечатьТОРГ12.ПолныйПутьКМакету();
		ПечатнаяФорма.СинонимМакета = Обработки.ПечатьТОРГ12.ПредставлениеПФ(СтрокаТаблицы.ВключаяУслуги,
			СтрокаТаблицы.ИспользоватьФаксимиле);
		
		ДанныеОбъектовПечати = ДанныеДокументовРегУчет(МассивОбъектов, СтрокаТаблицы.ИспользоватьФаксимиле, Истина);
		Обработки.ПечатьТОРГ12.СформироватьПФ(ПечатнаяФорма, ДанныеОбъектовПечати, ОбъектыПечати,
			СтрокаТаблицы.ВключаяУслуги);
		
	КонецЦикла;
	
	// Параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ЗначениеИдентификатора = "ТОРГ12,Обработка.ПечатьСчетФактура.СчетФактура,Обработка.ПечатьСчетФактура.УниверсальныйПередаточныйДокумент";
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = ЗначениеИдентификатора;
	КомандаПечати.Представление = ПечатьДокументовУНФ.ПредставлениеКомплектаДокументов();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 1;
	
	ВозможныеВарианты = Обработки.ПечатьТОРГ12.МатрицаВозможныхВариантов();
	Для каждого СтрокаТаблицы Из ВозможныеВарианты Цикл
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = Обработки.ПечатьТОРГ12.ИдентификаторПечатнойФормы(СтрокаТаблицы.ВключаяУслуги, СтрокаТаблицы.ИспользоватьФаксимиле);
		КомандаПечати.Представление = Обработки.ПечатьТОРГ12.ПредставлениеПФ(СтрокаТаблицы.ВключаяУслуги, СтрокаТаблицы.ИспользоватьФаксимиле);
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Порядок = 10;
		
		Если СтрокаТаблицы.ИспользоватьФаксимиле Тогда
			
			КомандаПечати.МестоРазмещения = "ПодменюПечатьФаксимиле";
			КомандаПечати.Порядок = КомандаПечати.Порядок + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВидимости = Новый Массив;
	ЗначениеВидимости.Добавить(Перечисления.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю);
	ЗначениеВидимости.Добавить(Перечисления.ВидыОперацийРасходнаяНакладная.ВозвратПоставщику);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.СчетФактура";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Ложь, Ложь);
	КомандаПечати.ФункциональныеОпции = "ПередачаТоваровНаКомиссию,ПриемТоваровНаКомиссию,ИспользуетсяОСНО,ИспользоватьСчетаФактурыИсходящие";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", ЗначениеВидимости, ВидСравнения.ВСписке);
	КомандаПечати.Порядок = 29;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Истина, Ложь);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", ЗначениеВидимости, ВидСравнения.ВСписке);
	КомандаПечати.Порядок = 32;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.УниверсальныйПередаточныйДокументФаксимиле";
	КомандаПечати.Представление = Обработки.ПечатьСчетФактура.ПредставлениеПФ(Истина, Истина);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ПодменюПечатьФаксимиле";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидОперации", ЗначениеВидимости, ВидСравнения.ВСписке);
	КомандаПечати.Порядок = 33;
	
КонецПроцедуры

// Данные документов (регламентированный учет)
//
// Параметры:
//  МассивОбъектов				 - Массив - .
//  ИспользоватьФаксимиле		 - Булево - .
//  ПечатнаяФормаТолькоВРублях	 - Булево - .
// 
// Возвращаемое значение:
//  ТаблицаЗначений - .
//
Функция ДанныеДокументовРегУчет(МассивОбъектов, ИспользоватьФаксимиле, ПечатнаяФормаТолькоВРублях = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ПечатнаяФормаТолькоВРублях", ПечатнаяФормаТолькоВРублях);
	Запрос.УстановитьПараметр("ШтукаНаименование", Справочники.КлассификаторЕдиницИзмерения.шт.Наименование);
	Запрос.УстановитьПараметр("ШтукаКод", Справочники.КлассификаторЕдиницИзмерения.шт.Код);
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка,
	|	ПередачаТоваровМеждуОрганизациями.Дата КАК ДатаДокумента,
	|	ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Номер КАК СТРОКА(12)) КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ФаксимилеПустая,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Продажа) КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Организация
	|	КОНЕЦ КАК Организация,
	|	ПередачаТоваровМеждуОрганизациями.Организация.Префикс КАК Префикс,
	|	ПередачаТоваровМеждуОрганизациями.Организация.ФайлЛоготип КАК Логотип,
	|	ПередачаТоваровМеждуОрганизациями.Организация.ФайлФаксимильнаяПечать КАК ФаксимилеПечати,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Организация.ЦифровойИндексОбособленногоПодразделения
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Подразделение.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПередачаТоваровМеждуОрганизациями.Подразделение.ГоловнаяОрганизация = ПередачаТоваровМеждуОрганизациями.Организация
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Подразделение.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА &ИспользоватьФаксимиле = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ДаНет.Да)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ДаНет.Нет)
	|	КОНЕЦ КАК ИспользоватьФаксимиле,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Организация
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Подразделение.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПередачаТоваровМеждуОрганизациями.Подразделение.ГоловнаяОрганизация = ПередачаТоваровМеждуОрганизациями.Организация
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Подразделение
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Организация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НеОблагаетсяНДС)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУПД,
	|	ЛОЖЬ КАК ЭтоСводныйСчетФактура,
	|	ЛОЖЬ КАК ЭтоКорректировка,
	|	ПередачаТоваровМеждуОрганизациями.БанковскийСчет КАК БанковскийСчет,
	|	ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациями.Подразделение) КАК ПредставлениеПодразделения,
	|	ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациями.СтруктурнаяЕдиница) КАК ПредставлениеСкладаСписания,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Организация
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Подразделение.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ПередачаТоваровМеждуОрганизациями.Подразделение.ГоловнаяОрганизация = ПередачаТоваровМеждуОрганизациями.Организация
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Подразделение
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Организация
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель.ГоловнойКонтрагент
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель.ГоловнойКонтрагент
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель
	|	КОНЕЦ КАК Покупатель,
	|	ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель КАК ОбособленноеПодразделениеПокупателя,
	|	ПередачаТоваровМеждуОрганизациями.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель КАК Грузополучатель,
	|	ПередачаТоваровМеждуОрганизациями.АдресДоставки КАК АдресДоставки,
	|	ПередачаТоваровМеждуОрганизациями.КонтактноеЛицоПодписант.Наименование КАК РасшифровкаПодписиКонтрагента,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьДата КАК ДоверенностьДата,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ПередачаТоваровМеждуОрганизациями.Договор.Представление КАК Основание,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях = ИСТИНА
	|			ТОГДА НациональнаяВалюта.Значение
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.ВалютаДокумента
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях = ИСТИНА
	|			ТОГДА НациональнаяВалюта.Значение.НаименованиеПолное
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.ВалютаДокумента.НаименованиеПолное
	|	КОНЕЦ КАК ВалютаНаименование,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях = ИСТИНА
	|			ТОГДА НациональнаяВалюта.Значение.Код
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.ВалютаДокумента.Код
	|	КОНЕЦ КАК ВалютаКод,
	|	ПередачаТоваровМеждуОрганизациями.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПередачаТоваровМеждуОрганизациями.НДСВключатьВСтоимость КАК НДСВключатьВСтоимость,
	|	ПередачаТоваровМеждуОрганизациями.Курс КАК Курс,
	|	ПередачаТоваровМеждуОрганизациями.Кратность КАК Кратность,
	|	ПередачаТоваровМеждуОрганизациями.ОснованиеПечати КАК ПредставлениеОснования,
	|	ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка КАК ОснованиеПечатиСсылка,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка.НомерДоговора
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка.Номер
	|	КОНЕЦ КАК ОснованиеНомер,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка.ДатаДоговора
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.ОснованиеПечатиСсылка.Дата
	|	КОНЕЦ КАК ОснованиеДата,
	|	НЕОПРЕДЕЛЕНО КАК ТранспортнаяНакладнаяНомер,
	|	НЕОПРЕДЕЛЕНО КАК ТранспортнаяНакладнаяДата,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьРуководителя.Факсимиле КАК ФаксимилеРуководителя,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьГлавногоБухгалтера.Факсимиле КАК ФаксимилеГлавногоБухгалтера,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	ПередачаТоваровМеждуОрганизациями.ПодписьКладовщика.Факсимиле КАК ФаксимилеКладовщика,
	|	0 КАК Вес,
	|	0 КАК Объем,
	|	ПередачаТоваровМеждуОрганизациями.Запасы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Содержание КАК Содержание,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА ПередачаТоваровМеждуОрганизациями.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ПредставлениеНоменклатуры,
	|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|		Номенклатура.Код КАК ЗапасКод,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|					И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|					И ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|				ТОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Запасы.Номенклатура.ЕдиницаИзмерения.Наименование
	|		КОНЕЦ КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|					И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|					И ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|				ТОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Запасы.Номенклатура.ЕдиницаИзмерения.Код
	|		КОНЕЦ КАК ЕдиницаИзмеренияПоОКЕИ_Код,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|					И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|					И ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|				ТОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Запасы.Номенклатура.ЕдиницаИзмерения
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмерения КАК ВидУпаковки,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|					И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|					И ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.КлассификаторЕдиницИзмерения
	|				ТОГДА 1
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ КАК КоличествоВОдномМесте,
	|		Количество КАК КоличествоМест,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|					И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|				ТОГДА ПередачаТоваровМеждуОрганизациями.Запасы.ЕдиницаИзмерения.Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК КоэффициентЕдиницыИзмерения,
	|		Количество КАК Количество,
	|		СтавкаНДС КАК СтавкаНДС,
	|		Вес КАК МассаБрутто,
	|		ВЫРАЗИТЬ((ПередачаТоваровМеждуОрганизациями.Запасы.СуммаАвтоматическойСкидки + ПередачаТоваровМеждуОрганизациями.Запасы.СуммаСкидкиНаценки) * ПередачаТоваровМеждуОрганизациями.Курс / ПередачаТоваровМеждуОрганизациями.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаСкидкиПоСтроке,
	|		ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Запасы.Цена * ПередачаТоваровМеждуОрганизациями.Курс / ПередачаТоваровМеждуОрганизациями.Кратность КАК ЧИСЛО(15, 2)) КАК Цена,
	|		ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Запасы.Сумма * ПередачаТоваровМеждуОрганизациями.Курс / ПередачаТоваровМеждуОрганизациями.Кратность КАК ЧИСЛО(15, 2)) КАК Сумма,
	|		ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Запасы.СуммаНДС * ПередачаТоваровМеждуОрганизациями.Курс / ПередачаТоваровМеждуОрганизациями.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|		ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.Запасы.Всего * ПередачаТоваровМеждуОрганизациями.Курс / ПередачаТоваровМеждуОрганизациями.Кратность КАК ЧИСЛО(15, 2)) КАК Всего
	|	) КАК ТаблицаЗапасы,
	|	ПередачаТоваровМеждуОрганизациями.ДобавленныеНаборы.(
	|		НоменклатураНабора КАК НоменклатураНабора,
	|		ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.ДобавленныеНаборы.НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА ПередачаТоваровМеждуОрганизациями.ДобавленныеНаборы.НоменклатураНабора.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациями.ДобавленныеНаборы.НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ЗапасНабора,
	|		НоменклатураНабора.ВариантПечатиНабора КАК ВариантПечатиНабора,
	|		НоменклатураНабора.ТипНоменклатуры КАК ТипНоменклатурыНабора,
	|		НоменклатураНабора.Артикул КАК АртикулНабора,
	|		НоменклатураНабора.Код КАК КодНабора,
	|		НоменклатураНабора.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНабора,
	|		НоменклатураНабора.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияНабора,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.ДобавленныеНаборы.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.ТолькоНабор)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВыводитьИтоги
	|	) КАК ТаблицаДобавленныеНаборы,
	|	НЕОПРЕДЕЛЕНО КАК НоменклатураДоставки,
	|	НЕОПРЕДЕЛЕНО КАК ПредставлениеНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК КодНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК АртикулНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК СтоимостьДоставки,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСДоставки,
	|	НЕОПРЕДЕЛЕНО КАК СуммаНДСДоставки
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями,
	|	Константа.НациональнаяВалюта КАК НациональнаяВалюта,
	|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаТоваровМеждуОрганизациями.Запасы.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ МаксНомерСтрокиЗапасы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.Содержание КАК СТРОКА(1000)) КАК Содержание,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК ПредставлениеНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.Код КАК ЗапасКод,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.Артикул КАК Артикул,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|				И ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Наименование
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|				И ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору.Код
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияПоОКЕИ_Код,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|				И ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения КАК ВидУпаковки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				И ПечатьПользовательскихЕдиницИзмерения.Значение <> ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				И ПечатьПользовательскихЕдиницИзмерения.Значение = ЗНАЧЕНИЕ(Перечисление.ПечатьПользовательскихЕдиницИзмерения.ФормироватьПечатныйДокументВПользовательскойЕдинице)
	|				И ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.ЕдиницаИзмеренияПоКлассификатору <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.КлассификаторЕдиницИзмерения
	|			ТОГДА 1
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК КоличествоВОдномМесте,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество КАК КоличествоМест,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Вес КАК Вес,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаАвтоматическойСкидки + ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаСкидкиНаценки КАК СуммаСкидкиПоСтроке,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Цена КАК Цена,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Сумма КАК Сумма,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС КАК СуммаНДС,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Всего КАК Всего,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка КАК Ссылка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НоменклатураНабора КАК НоменклатураНабора,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЛОЖЬ КАК ЭтоНабор,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И ПередачаТоваровМеждуОрганизациямиЗапасы.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.НаборИКомплектующие)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеобходимоВыделитьКакСоставНабора,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаПроисхождения КАК СтранаСсылка,
	|	ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаПроисхождения) КАК СтранаПредставление,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаПроисхождения.Код КАК СтранаКод,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НомерГТД.РегистрационныйНомер КАК ПредставлениеГТД
	|ПОМЕСТИТЬ ВременнаяТаблица_ПередачаТоваровМеждуОрганизациямиЗапасы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы,
	|	Константа.ПечатьПользовательскихЕдиницИзмерения КАК ПечатьПользовательскихЕдиницИзмерения
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&МассивОбъектов)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Содержание КАК Содержание,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ПредставлениеНоменклатуры КАК ПредставлениеНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЗапасКод КАК ЗапасКод,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЗапасКод КАК Код,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Артикул КАК Артикул,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмеренияПоОКЕИ_Наименование КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмеренияПоОКЕИ_Код КАК ЕдиницаИзмеренияПоОКЕИ_Код,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика КАК Характеристика,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ВидУпаковки КАК ВидУпаковки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Количество КАК Количество,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КоэффициентЕдиницыИзмерения КАК КоэффициентЕдиницыИзмерения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КоличествоВОдномМесте КАК КоличествоВОдномМесте,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КоличествоМест КАК КоличествоМест,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Вес КАК МассаБрутто,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &НациональнаяВалюта
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаСкидкиПоСтроке
	|		ИНАЧЕ ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаСкидкиПоСтроке * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаСкидкиПоСтроке,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &НациональнаяВалюта
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Цена
	|					КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|						ТОГДА ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.Цена * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Количество = 0
	|								ТОГДА СуммыДокументовРегламентированныйУчет.Всего - СуммыДокументовРегламентированныйУчет.НДС
	|							ИНАЧЕ ВЫРАЗИТЬ((СуммыДокументовРегламентированныйУчет.Всего - СуммыДокументовРегламентированныйУчет.НДС) / ПередачаТоваровМеждуОрганизациямиЗапасы.Количество КАК ЧИСЛО(15, 2))
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Цена
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &НациональнаяВалюта
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Сумма
	|					КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|						ТОГДА ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.Сумма * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.СуммаВключаетНДС
	|								ТОГДА ВЫРАЗИТЬ(СуммыДокументовРегламентированныйУчет.Всего КАК ЧИСЛО(15, 2))
	|							ИНАЧЕ ВЫРАЗИТЬ(СуммыДокументовРегламентированныйУчет.Всего - СуммыДокументовРегламентированныйУчет.НДС КАК ЧИСЛО(15, 2))
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &НациональнаяВалюта
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС
	|					КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|						ТОГДА ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовРегламентированныйУчет.НДС
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ПечатнаяФормаТолькоВРублях
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &НациональнаяВалюта
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Всего
	|					КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|						ТОГДА ВЫРАЗИТЬ(ПередачаТоваровМеждуОрганизациямиЗапасы.Всего * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовРегламентированныйУчет.Всего
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Всего
	|	КОНЕЦ КАК Всего,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка КАК Ссылка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НоменклатураНабора КАК НоменклатураНабора,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ЭтоНабор КАК ЭтоНабор,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НеобходимоВыделитьКакСоставНабора КАК НеобходимоВыделитьКакСоставНабора,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаСсылка КАК СтранаСсылка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаПредставление КАК СтранаПредставление,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаКод КАК СтранаКод,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.ПредставлениеГТД КАК ПредставлениеГТД,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ТоварнаяНоменклатураВЭД.Код
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КодТНВЭД
	|ИЗ
	|	ВременнаяТаблица_ПередачаТоваровМеждуОрганизациямиЗапасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовРегламентированныйУчет КАК СуммыДокументовРегламентированныйУчет
	|		ПО ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = СуммыДокументовРегламентированныйУчет.Регистратор
	|			И ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки = СуммыДокументовРегламентированныйУчет.НомерСтрокиДокумента
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	Результат = МассивРезультатов[0].Выгрузить();
	
	ТЗСтрок = МассивРезультатов[3].Выгрузить();
	Для Каждого ТекущаяСтрока Из Результат Цикл
		
		НайденныеСтроки = ТЗСтрок.НайтиСтроки(Новый Структура("Ссылка", ТекущаяСтрока.Ссылка));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ТекущаяСтрока.ТаблицаЗапасы = ТЗСтрок.Скопировать(НайденныеСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
	// Наборы
	НаборыСервер.КомпоноватьТабличнуюЧастьПоНаборам(Результат, "ТаблицаЗапасы");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеНаОсновании

// Добавляет во временную таблицу все позиции таблицы "Запасы",
// в т.ч. позицию услуги доставки
//
// Параметры:
//  ПередачаТоваровМеждуОрганизациями                  - ДокументСсылка.ПередачаТоваровМеждуОрганизациями, Массив
// 
// Возвращаемое значение:
//   - МенеджерВременныхТаблиц
//
Функция ВТПередачаТоваровМеждуОрганизациямиЗапасы(Знач ПередачаТоваровМеждуОрганизациями) Экспорт
	
	Если ТипЗнч(ПередачаТоваровМеждуОрганизациями) <> Тип("Массив") Тогда
		ПередачаТоваровМеждуОрганизациями = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПередачаТоваровМеждуОрганизациями);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПередачаТоваровМеждуОрганизациями", ПередачаТоваровМеждуОрганизациями);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	ПередачаТоваровМеждуОрганизациями.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациями.СтавкаНДС КАК СтавкаНДС,
	|	ПередачаТоваровМеждуОрганизациями.СуммаНДС КАК СуммаНДС,
	|	ПередачаТоваровМеждуОрганизациями.Всего КАК Всего
	|ПОМЕСТИТЬ ВТПередачаТоваровМеждуОрганизациямиЗапасы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациями
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка В(&ПередачаТоваровМеждуОрганизациями)";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       описание 1 параметра процедуры см. ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения.
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       описание 2 параметра процедуры см. ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения.
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	Возврат;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаИнициализироватьДанные()
	
	ТекстЗапроса = 
	
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ВестиУчетРасходовПоДоговорамОбслуживания,
	|	ПередачаТоваровМеждуОрганизациями.Договор.ДоговорОбслуживанияНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПередачаТоваровМеждуОрганизациями.Организация КАК Организация,
	|	ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ПередачаТоваровМеждуОрганизациями.КонтрагентВладелец КАК КонтрагентВладелец,
	|	ПередачаТоваровМеждуОрганизациями.КонтрагентПолучатель КАК КонтрагентПолучатель,
	|	ПередачаТоваровМеждуОрганизациями.ВалютаДокумента КАК ВалютаДокумента,
	|	ПередачаТоваровМеждуОрганизациями.Дата КАК Дата,
	|	ПередачаТоваровМеждуОрганизациями.Договор.ВалютаРасчетов КАК ДоговорВалютаРасчетов,
	|	ПередачаТоваровМеждуОрганизациями.Договор.РасчетыВУсловныхЕдиницах КАК ДоговорРасчетыВУсловныхЕдиницах,
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка,
	|	ПередачаТоваровМеждуОрганизациями.Дата КАК Период,
	|	ПередачаТоваровМеждуОрганизациями.СпособЗачетаПредоплаты КАК СпособЗачетаПредоплаты,
	|	ПередачаТоваровМеждуОрганизациями.Договор КАК Договор,
	|	ПередачаТоваровМеждуОрганизациями.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК ВестиРасчетыПоДокументам,
	|	ЛОЖЬ КАК ВестиРасчетыПоЗаказам,
	|	ПередачаТоваровМеждуОрганизациями.Кратность КАК Кратность,
	|	ПередачаТоваровМеждуОрганизациями.Курс КАК Курс
	|ПОМЕСТИТЬ ВременнаяТаблицаШапка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВременнаяТаблицаКурсыВалютСрезПоследних
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, Валюта В (&ВалютаУчета, &ВалютаНациональная)) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка КАК Документ,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаШапка,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.СтруктурнаяЕдиница.ОрдерныйСклад КАК СтруктурнаяЕдиницаШапкаОрдерныйСклад,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Организация КАК Организация,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.КонтрагентВладелец КАК КонтрагентВладелец,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.КонтрагентПолучатель КАК Контрагент,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ПоложениеСклада КАК ПоложениеСклада,
	|	ИСТИНА КАК ВестиРасчетыПоДоговорам,
	|	ИСТИНА КАК ВестиРасчетыПоДокументам,
	|	ЛОЖЬ КАК ВестиРасчетыПоЗаказам,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Договор КАК Договор,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Ответственный КАК Ответственный,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.СчетУчетаНаценки КАК СчетУчетаНаценки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.РозничныйВидЦен КАК РозничныйВидЦен,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены КАК ВалютаЦены,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.СчетУчетаВРознице КАК СчетУчетаВРознице,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПеремещениеВРозницуСуммовойУчет,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Дата КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК КоррОрганизация,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НЕОПРЕДЕЛЕНО КАК КоррСтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.ОрдерныйСклад
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрдерныйСклад,
	|	ВЫБОР
	|		КОГДА &УчетПоЯчейкам
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ячейка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.СчетУчетаВРознице
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.СчетУчетаЗапасов
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.РозницаСуммовойУчет)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СтруктурнаяЕдиница.СчетУчетаВРознице.Валютный
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.СчетУчетаЗапасов.Валютный
	|	КОНЕЦ КАК СчетУчетаВалютный,
	|	НЕОПРЕДЕЛЕНО КАК КоррСчетУчета,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура КАК Номенклатура,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НоменклатураНабора КАК НоменклатураНабора,
	|	НЕОПРЕДЕЛЕНО КАК КоррНоменклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.ХарактеристикаНабора
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ХарактеристикаНабора,
	|	НЕОПРЕДЕЛЕНО КАК КоррХарактеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	НЕОПРЕДЕЛЕНО КАК КоррПартия,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	ЛОЖЬ КАК ЗаказНаряд,
	|	НЕОПРЕДЕЛЕНО КАК КоррЗаказ,
	|	ЛОЖЬ КАК ТоварыНаКомиссии,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.НаправлениеДеятельности.СчетУчетаВыручкиОтПродаж КАК СчетУчетаПродажи,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.НаправлениеДеятельности.СчетУчетаСебестоимостиПродаж КАК СчетУчетаСебестоимость,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Количество
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Количество * ПередачаТоваровМеждуОрганизациямиЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|					ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность)
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСЗакупкиПродажи,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Всего * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Всего * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаРасходов * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаРасходов * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасходов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаРасходов * КурсыРегВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность / (ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаРасходов
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРасходовВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Себестоимость * КурсыРегВалюты.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Себестоимость * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыУпрВалюты.Кратность / (КурсыУпрВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Себестоимость,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Всего КАК СуммаРасчетовПринятыеПереданные,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВключатьРасходыВСебестоимость КАК ВключатьРасходыВСебестоимость,
	|	ИСТИНА КАК ФиксированнаяСтоимость,
	|	ВЫРАЗИТЬ(&ОприходованиеЗапасов КАК СТРОКА(100)) КАК СодержаниеПроводки,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.КонтрагентПолучатель.СчетУчетаРасчетовСПокупателем КАК СчетУчетаРасчетовСПокупателем,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.КонтрагентВладелец.СчетУчетаРасчетовСПоставщиком КАК СчетУчетаРасчетовСПоставщиком,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.КонтрагентВладелец.СчетУчетаРасчетовСПоставщиком.Валютный КАК СчетУчетаРасчетовСПоставщикомВалютный,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.НомерГТД КАК НомерГТД,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Всего * КурсыРегВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность / (ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Всего
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Всего
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Всего * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / КурсыРегВалюты.Кратность
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРег,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * КурсыРегВалюты.Курс * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Кратность / (ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс * КурсыРегВалюты.Кратность)
	|					ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСВал,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.НДСВключатьВСтоимость
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.ВалютаДокумента = &ВалютаНациональная
	|						ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС
	|					ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС * ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Курс / КурсыРегВалюты.Кратность
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДСРег,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.КлючСвязи КАК КлючСвязи,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка.Подразделение КАК ПодразделениеПродажи,
	|	0 КАК СуммаАвтоматическойСкидки,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ПроизвольныйНоминал
	|				ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Сумма / ВЫБОР
	|						КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ИспользоватьСерийныеНомера
	|							ТОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Количество
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			ИНАЧЕ ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.Номинал / ВЫБОР
	|					КОГДА ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ИспользоватьСерийныеНомера
	|						ТОГДА 1
	|					ИНАЧЕ 1 / ПередачаТоваровМеждуОрганизациямиЗапасы.Количество
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК НоминалСертификата,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ПроизвольныйНоминал КАК ПроизвольныйНоминал,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.СчетУчетаЗатрат КАК СчетУчетаЗатрат,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Номенклатура.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельностиПродажи,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Цена КАК Цена,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаНДС КАК СуммаНДСВалютаДокумента,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Всего КАК ВсегоВалютаДокумента,
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.СуммаСкидкиНаценки КАК СуммаСкидкиНаценки
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Запасы КАК ПередачаТоваровМеждуОрганизациямиЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыУпрВалюты
	|		ПО (КурсыУпрВалюты.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыРегВалюты
	|		ПО (КурсыРегВалюты.Валюта = &ВалютаНациональная),
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиЗапасы.Ссылка = &Ссылка
	|	И ПередачаТоваровМеждуОрганизациямиЗапасы.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка.Дата КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаДокумента.Ссылка.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТаблицаДокумента.Ссылка.КонтрагентВладелец КАК КонтрагентВладелец,
	|	ТаблицаДокумента.Ссылка.КонтрагентПолучатель КАК КонтрагентПолучатель,
	|	ИСТИНА КАК ВестиРасчетыПоДоговорам,
	|	ИСТИНА КАК ВестиРасчетыПоДокументам,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.РасчетыСПокупателями) КАК СчетУчетаРасчетовСПокупателем,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.РасчетыСПоставщиками) КАК СчетУчетаРасчетовСПоставщиком,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.РасчетыПоАвансамПолученным) КАК СчетУчетаАвансовПокупателя,
	|	ЗНАЧЕНИЕ(ПланСчетов.Управленческий.РасчетыПоАвансамВыданным) КАК СчетУчетаАвансовПоставщику,
	|	ТаблицаДокумента.Ссылка.Организация КАК ОрганизацияВНУ,
	|	ТаблицаДокумента.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДокумента.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаДокумента.Ссылка.Договор КАК Договор,
	|	ТаблицаДокумента.Ссылка.Договор.ВалютаРасчетов КАК ВалютаРасчетов,
	|	ТаблицаДокумента.Заказ КАК Заказ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее) КАК НаправлениеДеятельностиПродажи,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс) КАК ТипРасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг) КАК ТипРасчетовКуда,
	|	&Ссылка КАК ДокументКуда,
	|	ТаблицаДокумента.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходСоСчета
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходСоСчета).Статья
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеНаСчет
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеНаСчет).Статья
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеВКассу
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеВКассу).Статья
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходИзКассы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходИзКассы).Статья
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаПоставщикам)
	|	КОНЕЦ КАК Статья,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходСоСчета
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходСоСчета).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеНаСчет
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеНаСчет).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеВКассу
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеВКассу).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходИзКассы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходИзКассы).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.АвансовыйОтчет
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.АвансовыйОтчет).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.Взаимозачет
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.Взаимозачет).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ОперацияПоПлатежнымКартам
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ОперацияПоПлатежнымКартам).Дата
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ЧекККМ
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ЧекККМ).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДокументДата,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Документ) = ТИП(Документ.ОперацияПоПлатежнымКартам)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоЭквайринговаяОперация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходСоСчета
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходСоСчета).ЭквайринговыйТерминал
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеНаСчет
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеНаСчет).ЭквайринговыйТерминал
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ОперацияПоПлатежнымКартам
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ОперацияПоПлатежнымКартам).ЭквайринговыйТерминал
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ЧекККМ
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ЧекККМ).ЭквайринговыйТерминал
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭквайринговыеТерминалы.ПустаяСсылка)
	|	КОНЕЦ КАК ЭквайринговыйТерминал,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходСоСчета
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходСоСчета).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеНаСчет
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеНаСчет).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ПоступлениеВКассу
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ПоступлениеВКассу).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.РасходИзКассы
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.РасходИзКассы).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.АвансовыйОтчет
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.АвансовыйОтчет).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.Взаимозачет
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.Взаимозачет).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ОперацияПоПлатежнымКартам
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ОперацияПоПлатежнымКартам).Дата
	|			КОГДА ТаблицаДокумента.Документ ССЫЛКА Документ.ЧекККМ
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Документ.ЧекККМ).Дата
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ, ДЕНЬ) КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА КонстантаВалютаУчета.Значение = &ВалютаРасчетов
	|			ТОГДА ТаблицаДокумента.СуммаРасчетов
	|		КОГДА КонстантаВалютаУчета.Значение = КонстантаНациональнаяВалюта.Значение
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Курс * КурсыВалютУчетаСрезПоследних.Кратность / (КурсыВалютУчетаСрезПоследних.Курс * ТаблицаДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаДокумента.СуммаРасчетов КАК СуммаВал,
	|	ТаблицаДокумента.ОплатаСертификатом КАК ОплатаСертификатом,
	|	ТаблицаДокумента.НомерСертификата КАК НомерСертификата,
	|	ЕСТЬNULL(Номенклатура.Номинал, 0) КАК НоминалСертификата,
	|	ТаблицаДокумента.Ссылка.Договор.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.СуммаРасчетов * ТаблицаДокумента.Курс / ТаблицаДокумента.Кратность КАК ЧИСЛО(15, 2)) КАК СуммаРубПоКурсуАванса,
	|	ТаблицаДокумента.Ссылка.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Справочник.Номенклатура).ИспользоватьСерийныеНомера
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьСерийныеНомера,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Документ ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Справочник.Номенклатура).СчетУчетаДоходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ПустаяСсылка)
	|	КОНЕЦ КАК СчетУчетаДоходов,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ОплатаСертификатом
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.Документ ССЫЛКА Справочник.Номенклатура
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Справочник.Номенклатура).Номинал
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Номинал,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ОплатаСертификатом
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.Документ ССЫЛКА Справочник.Номенклатура
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Документ КАК Справочник.Номенклатура).ЧастичноеПогашение
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЧастичноеПогашение,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ОплатаСертификатом
	|			ТОГДА ТаблицаДокумента.СуммаПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСертификата,
	|	ТаблицаДокумента.Курс КАК Курс,
	|	ТаблицаДокумента.Кратность КАК Кратность,
	|	ТаблицаДокумента.СуммаРасчетов КАК СуммаРасчетов,
	|	ТаблицаДокумента.СуммаПлатежа КАК СуммаПлатежа
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплата
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Предоплата КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКурсыВалютСрезПоследних КАК КурсыВалютУчетаСрезПоследних
	|		ПО (КурсыВалютУчетаСрезПоследних.Валюта = &ВалютаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ТаблицаДокумента.Документ = Номенклатура.Ссылка,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта,
	|	Константа.ВалютаУчета КАК КонстантаВалютаУчета
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровМеждуОрганизациямиСерийныеНомера.КлючСвязи КАК КлючСвязи,
	|	ПередачаТоваровМеждуОрганизациямиСерийныеНомера.СерийныйНомер КАК СерийныйНомер
	|ПОМЕСТИТЬ ВременнаяТаблицаСерийныеНомера
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.СерийныеНомера КАК ПередачаТоваровМеждуОрганизациямиСерийныеНомера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ПО (ВременнаяТаблицаЗапасы.КлючСвязи = ПередачаТоваровМеждуОрганизациямиСерийныеНомера.КлючСвязи)
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациямиСерийныеНомера.Ссылка = &Ссылка
	|	И &ИспользоватьСерийныеНомера";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаПередачаТоваровМеждуОрганизациями, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если Не УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;
	
	// МобильноеПриложение
	Если МобильноеПриложениеВызовСервера.НужноОграничитьФункциональность() Тогда
		Возврат;
	КонецЕсли;
	// Конец МобильноеПриложение
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временные таблицы "ДвиженияЗапасыИзменение", "ДвиженияЗапасыНаСкладахИзменение", 
	// "ДвиженияЗапасыКРасходуСоСкладовИзменение", "ДвиженияЗапасыПереданныеИзменение",
	// "ДвиженияЗапасыПринятыеИзменение", "ДвиженияРазмещениеЗаказовИзменение",
	// "ДвиженияПотребностьВЗапасахИзменение содержат записи, необходимо выполнить 
	// контроль реализации товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыНаСкладахИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияРасчетыСПокупателямиИзменение // Для режима зачета аванса Авто тоже выполняем контроль, т.к. может быть более поздняя оплата.
		ИЛИ СтруктураВременныеТаблицы.ДвиженияСерийныеНомераИзменение
		ИЛИ СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение
		Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗапасыНаСкладахИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК ЯчейкаПредставление,
		|	ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ЗапасыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыНаСкладахИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыНаСкладах.Остатки(
		|				&МоментКонтроля,  Организация В (&МассивОрганизаций) И 
		|				(СтруктурнаяЕдиница, Номенклатура, Характеристика, Партия, Ячейка) В
		|					(ВЫБРАТЬ
		|						
		|						ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыНаСкладахИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыНаСкладахИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыНаСкладахИзменение.Ячейка КАК Ячейка
		|					ИЗ
		|						ДвиженияЗапасыНаСкладахИзменение КАК ДвиженияЗапасыНаСкладахИзменение)) КАК ЗапасыНаСкладахОстатки
		|		ПО ДвиженияЗапасыНаСкладахИзменение.СтруктурнаяЕдиница = ЗапасыНаСкладахОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыНаСкладахИзменение.Номенклатура = ЗапасыНаСкладахОстатки.Номенклатура
		|			И ДвиженияЗапасыНаСкладахИзменение.Характеристика = ЗапасыНаСкладахОстатки.Характеристика
		|			И ДвиженияЗапасыНаСкладахИзменение.Партия = ЗапасыНаСкладахОстатки.Партия
		|			И ДвиженияЗапасыНаСкладахИзменение.Ячейка = ЗапасыНаСкладахОстатки.Ячейка
		|			И (ЕСТЬNULL(ЗапасыНаСкладахОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияЗапасыИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчетаПредставление,
		|	ДвиженияЗапасыИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияЗапасыИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияЗапасыИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателяПредставление,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	ЗапасыОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасы,
		|	ЕСТЬNULL(ЗапасыОстатки.СуммаОстаток, 0) КАК СуммаОстатокЗапасы
		|ИЗ
		|	ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(&МоментКонтроля,Организация В (&МассивОрганизаций)
		|			И ( СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|						ДвиженияЗапасыИзменение.СчетУчета КАК СчетУчета,
		|						ДвиженияЗапасыИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыИзменение.ЗаказПокупателя КАК ЗаказПокупателя
		|					ИЗ
		|						ДвиженияЗапасыИзменение КАК ДвиженияЗапасыИзменение)) КАК ЗапасыОстатки
		|		ПО  ДвиженияЗапасыИзменение.СтруктурнаяЕдиница = ЗапасыОстатки.СтруктурнаяЕдиница
		|			И ДвиженияЗапасыИзменение.СчетУчета = ЗапасыОстатки.СчетУчета
		|			И ДвиженияЗапасыИзменение.Номенклатура = ЗапасыОстатки.Номенклатура
		|			И ДвиженияЗапасыИзменение.Характеристика = ЗапасыОстатки.Характеристика
		|			И ДвиженияЗапасыИзменение.Партия = ЗапасыОстатки.Партия
		|			И ДвиженияЗапасыИзменение.ЗаказПокупателя = ЗапасыОстатки.ЗаказПокупателя
		|			И (ЕСТЬNULL(ЗапасыОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияРасчетыСПокупателямиИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияРасчетыСПокупателямиИзменение.Организация КАК ОрганизацияПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Контрагент КАК КонтрагентПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Договор КАК ДоговорПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Договор.ВалютаРасчетов КАК ВалютаПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Документ КАК ДокументПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.Заказ КАК ЗаказПредставление,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетовПредставление,
		|	ЛОЖЬ КАК ДвиженияДенежныхДокументов,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПередЗаписью КАК СуммаПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаПриЗаписи КАК СуммаПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаИзменение КАК СуммаИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПередЗаписью КАК СуммаВалПередЗаписью,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПриЗаписи КАК СуммаВалПриЗаписи,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение КАК СуммаВалИзменение,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалПриЗаписи - ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаПолученныхАвансов,
		|	ДвиженияРасчетыСПокупателямиИзменение.СуммаВалИзменение + ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаНепогашеннойЗадолженности,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) КАК СуммаВалОстаток,
		|	ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов КАК ТипРасчетов
		|ИЗ
		|	ДвиженияРасчетыСПокупателямиИзменение КАК ДвиженияРасчетыСПокупателямиИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПокупателями.Остатки(&МоментКонтроля, ) КАК РасчетыСПокупателямиОстатки
		|		ПО ДвиженияРасчетыСПокупателямиИзменение.Организация = РасчетыСПокупателямиОстатки.Организация
		|			И ДвиженияРасчетыСПокупателямиИзменение.Контрагент = РасчетыСПокупателямиОстатки.Контрагент
		|			И ДвиженияРасчетыСПокупателямиИзменение.Договор = РасчетыСПокупателямиОстатки.Договор
		|			И ДвиженияРасчетыСПокупателямиИзменение.Документ = РасчетыСПокупателямиОстатки.Документ
		|			И ДвиженияРасчетыСПокупателямиИзменение.Заказ = РасчетыСПокупателямиОстатки.Заказ
		|			И ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = РасчетыСПокупателямиОстатки.ТипРасчетов
		|			И (ВЫБОР
		|				КОГДА ДвиженияРасчетыСПокупателямиИзменение.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)
		|					ТОГДА ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) > 0
		|				ИНАЧЕ ЕСТЬNULL(РасчетыСПокупателямиОстатки.СуммаВалОстаток, 0) < 0
		|			КОНЕЦ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияСерийныеНомераИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияСерийныеНомераИзменение.СерийныйНомер КАК СерийныйНомерПредставление,
		|	ДвиженияСерийныеНомераИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаПредставление,
		|	ДвиженияСерийныеНомераИзменение.Номенклатура КАК НоменклатураПредставление,
		|	ДвиженияСерийныеНомераИзменение.Характеристика КАК ХарактеристикаПредставление,
		|	ДвиженияСерийныеНомераИзменение.Партия КАК ПартияПредставление,
		|	ДвиженияСерийныеНомераИзменение.Ячейка КАК ЯчейкаПредставление,
		|	СерийныеНомераОстатки.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы,
		|	СерийныеНомераОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияСерийныеНомераИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(СерийныеНомераОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыНаСкладах,
		|	ЕСТЬNULL(СерийныеНомераОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыНаСкладах
		|ИЗ
		|	ДвиженияСерийныеНомераИзменение КАК ДвиженияСерийныеНомераИзменение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерийныеНомера.Остатки(&МоментКонтроля, ) КАК СерийныеНомераОстатки
		|		ПО ДвиженияСерийныеНомераИзменение.СерийныйНомер = СерийныеНомераОстатки.СерийныйНомер
		|			И ДвиженияСерийныеНомераИзменение.СтруктурнаяЕдиница = СерийныеНомераОстатки.СтруктурнаяЕдиница
		|			И ДвиженияСерийныеНомераИзменение.Номенклатура = СерийныеНомераОстатки.Номенклатура
		|			И ДвиженияСерийныеНомераИзменение.Характеристика = СерийныеНомераОстатки.Характеристика
		|			И ДвиженияСерийныеНомераИзменение.Партия = СерийныеНомераОстатки.Партия
		|			И ДвиженияСерийныеНомераИзменение.Ячейка = СерийныеНомераОстатки.Ячейка
		|			И (ЕСТЬNULL(СерийныеНомераОстатки.КоличествоОстаток, 0) < 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		Запрос.УстановитьПараметр("МассивОрганизаций", 
			РегистрыСведений.НастройкаПередачиТоваровМеждуОрганизациями.ПолучитьСписокОрганизацийДляОстатков(ДополнительныеСвойства.ДляПроведения.Организация));
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если НЕ МассивРезультатов[0].Пустой()
			ИЛИ НЕ МассивРезультатов[1].Пустой()
			ИЛИ НЕ МассивРезультатов[2].Пустой()
			ИЛИ НЕ МассивРезультатов[3].Пустой()
			ИЛИ НЕ МассивРезультатов[4].Пустой()
			Тогда
			
			ДокументОбъектРасходнаяНакладная = ДокументСсылкаПередачаТоваровМеждуОрганизациями.ПолучитьОбъект()
			
		КонецЕсли;
		
		// Отрицательный остаток запасов на складе.
		Если НЕ МассивРезультатов[0].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[0].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыНаСкладах(ДокументОбъектРасходнаяНакладная, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток учета запасов.
		Если НЕ МассивРезультатов[1].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[1].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасы(ДокументОбъектРасходнаяНакладная, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		
		// Отрицательный остаток по расчетам с покупателями.
		Если НЕ МассивРезультатов[2].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[7].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструРасчетыСПокупателями(ДокументОбъектРасходнаяНакладная, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по серийным номерам.
		Если НЕ МассивРезультатов[3].Пустой() Тогда
			ВыборкаИзРезультатаЗапроса = МассивРезультатов[8].Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомера(ДокументОбъектРасходнаяНакладная, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
		// Отрицательный остаток по остаткам запасов в разрезе номеров ГТД.
		Если Константы.КонтролироватьОстаткиПоНомерамГТД.Получить() Тогда
			
			Если НЕ МассивРезультатов[4].Пустой() Тогда
				
				ВыборкаИзРезультатаЗапроса = МассивРезультатов[9].Выбрать();
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыВРазрезеГТД(ДокументОбъектРасходнаяНакладная, ВыборкаИзРезультатаЗапроса, Отказ);
				
			КонецЕсли;
			
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКонтроль()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПоставщиками(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", ДокументСсылкаПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПередПоставщиком", НСтр("ru='Возникновение обязательств перед поставщиком'"));
	Запрос.УстановитьПараметр("ЗачетАванса", НСтр("ru='Зачет предоплаты'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетам(СтруктураДополнительныеСвойства, ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	РасчетыПроведениеДокументов.ПересчитатьТаблицыПоКурсамВалют(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	РасчетыПроведениеДокументов.ПоместитьПересчитанныеТаблицыВМенеджерВременныхТаблиц(СтруктураДополнительныеСвойства);
	ПолучатьРеквизитыРасчетов = Истина;
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПоставщиками.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПоставщиками.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПоставщиками КАК ВременнаяТаблицаРасчетыСПоставщиками";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПоставщиками(Запрос.МенеджерВременныхТаблиц, Истина, НомерЗапроса, ПолучатьРеквизитыРасчетов);
	
	Результат = Запрос.ВыполнитьПакет()[НомерЗапроса].Выгрузить();
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(Результат, "Сумма,СуммаВал,СуммаРег");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками", Результат);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаРасчетыСПокупателями(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПокупателя", НСтр("ru='Возникновение обязательств покупателя'"));
	Запрос.УстановитьПараметр("ВозникновениеОбязательствПокупателяПоДоставке", НСтр("ru='Возникновение обязательств покупателя по доставке'"));
	Запрос.УстановитьПараметр("ВозникновениеАвансаПокупателя", НСтр("ru='Возникновение аванса покупателя'"));
	Запрос.УстановитьПараметр("ЗачетАванса", НСтр("ru='Зачет предоплаты'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	
	Для Каждого КлючИЗначение Из СтруктураДополнительныеСвойства.ДляСертификатов Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ПараметрыДокумента.Вставить("ЭтоРасчетыСПоставщиком", Ложь);
	РасчетыПроведениеДокументов.СформироватьДвиженияПоВзаиморасчетам(СтруктураДополнительныеСвойства, ДокументСсылкаПередачаТоваровМеждуОрганизациями, Запрос.Параметры);
	РасчетыПроведениеДокументов.ПересчитатьТаблицыПоКурсамВалют(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	РасчетыПроведениеДокументов.ПоместитьПересчитанныеТаблицыВМенеджерВременныхТаблиц(СтруктураДополнительныеСвойства);
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаРасчетыСПокупателями.Организация КАК Организация,
	|	ВременнаяТаблицаРасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаРасчетыСПокупателями.Договор КАК Договор,
	|	ВременнаяТаблицаРасчетыСПокупателями.Документ КАК Документ,
	|	ВременнаяТаблицаРасчетыСПокупателями.Заказ КАК Заказ,
	|	ВременнаяТаблицаРасчетыСПокупателями.ТипРасчетов КАК ТипРасчетов
	|ИЗ
	|	ВременнаяТаблицаРасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Ложь, НомерЗапроса);
	Результат = Запрос.ВыполнитьПакет()[НомерЗапроса].Выгрузить();
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(Результат, "Сумма,СуммаВал,СуммаРег");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПокупателями", Результат);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыНаСкладах(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасыНаСкладах.Период КАК Период,
	|	ТаблицаЗапасыНаСкладах.Организация КАК Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия КАК Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка КАК Ячейка,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК КоличествоИнт
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	(ТаблицаЗапасыНаСкладах.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|			ИЛИ ТаблицаЗапасыНаСкладах.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И НЕ ТаблицаЗапасыНаСкладах.ОрдерныйСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.Организация,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.ОрганизацияПолучатель,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка,
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество),
	|	СУММА(ТаблицаЗапасыНаСкладах.Количество)
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	НЕ ТаблицаЗапасыНаСкладах.ПеремещениеВРозницуСуммовойУчет
	|	И НЕ ТаблицаЗапасыНаСкладах.ОрдерныйСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период,
	|	ТаблицаЗапасыНаСкладах.ОрганизацияПолучатель,
	|	ТаблицаЗапасыНаСкладах.Номенклатура,
	|	ТаблицаЗапасыНаСкладах.Характеристика,
	|	ТаблицаЗапасыНаСкладах.Партия,
	|	ТаблицаЗапасыНаСкладах.СтруктурнаяЕдиница,
	|	ТаблицаЗапасыНаСкладах.Ячейка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыНаСкладах", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗапасыНаСкладах()

Процедура СформироватьТаблицаЗапасыВРазрезеГТД(СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"
	// :::::::::: [0] Запасы собственные (продажа)
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасыНаСкладах.НомерСтроки) КАК НомерСтроки
	|	,ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|	,ТаблицаЗапасыНаСкладах.Период КАК Период
	|	,ТаблицаЗапасыНаСкладах.Организация КАК Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура КАК Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика КАК Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия КАК Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД КАК НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения КАК СтранаПроисхождения
	|	,СУММА(ТаблицаЗапасыНаСкладах.Количество) КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасыНаСкладах
	|ГДЕ
	|	ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.Россия)
	|	И ТаблицаЗапасыНаСкладах.СтранаПроисхождения <> Значение(Справочник.СтраныМира.ПустаяСсылка)
	|	И ТаблицаЗапасыНаСкладах.НомерГТД <> Значение(Справочник.НомераГТД.ПустаяСсылка)
	|	И (ТаблицаЗапасыНаСкладах.Партия = Значение(Справочник.ПартииНоменклатуры.ПустаяСсылка) ИЛИ ТаблицаЗапасыНаСкладах.Партия.Статус = Значение(Перечисление.СтатусыПартий.СобственныеЗапасы))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасыНаСкладах.Период
	|	,ТаблицаЗапасыНаСкладах.Организация
	|	,ТаблицаЗапасыНаСкладах.Номенклатура
	|	,ТаблицаЗапасыНаСкладах.Характеристика
	|	,ТаблицаЗапасыНаСкладах.Партия
	|	,ТаблицаЗапасыНаСкладах.НомерГТД
	|	,ТаблицаЗапасыНаСкладах.СтранаПроисхождения";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", РезультатЗапроса[0].Выгрузить());
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаУправленческий(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаУправленческий.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУправленческий.Период КАК Период,
	|	ТаблицаУправленческий.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ТаблицаУправленческий.СчетУчетаРасчетовСПокупателем КАК СчетДт,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СчетУчетаРасчетовСПокупателем.Валютный
	|			ТОГДА ТаблицаУправленческий.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СчетУчетаРасчетовСПокупателем.Валютный
	|			ТОГДА ТаблицаУправленческий.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалДт,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.ТоварыНаКомиссии
	|			ТОГДА ТаблицаУправленческий.СчетУчетаРасчетовСПоставщиком
	|		ИНАЧЕ ТаблицаУправленческий.СчетУчетаПродажи
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.ТоварыНаКомиссии
	|			ТОГДА &ВалютаУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.ТоварыНаКомиссии
	|			ТОГДА ТаблицаУправленческий.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ТаблицаУправленческий.Сумма КАК Сумма,
	|	&ОтражениеВыручки КАК Содержание
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаУправленческий
	|ГДЕ
	|	ТаблицаУправленческий.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаУправленческий.НомерСтроки,
	|	ТаблицаУправленческий.Период,
	|	ТаблицаУправленческий.ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ТаблицаУправленческий.СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СчетУчетаВалютный
	|			ТОГДА ТаблицаУправленческий.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СчетУчетаВалютный
	|			ТОГДА ТаблицаУправленческий.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаУправленческий.СчетУчетаРасчетовСПоставщиком,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаУправленческий.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаУправленческий.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаУправленческий.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаУправленческий.Сумма,
	|	&ОприходованиеЗапасов
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаУправленческий
	|ГДЕ
	|	НЕ ТаблицаУправленческий.ВключатьРасходыВСебестоимость
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
		
	Запрос.УстановитьПараметр("ВалютаУчета", Константы.ВалютаУчета.Получить());
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	Запрос.УстановитьПараметр("ОтражениеВыручки", НСтр("ru = 'Выручка от продажи'"));
	
	Для Каждого КлючИЗначение Из СтруктураДополнительныеСвойства.ДляСертификатов Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяПроводка = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяПроводка, Выборка);
	КонецЦикла;
	
КонецПроцедуры // СформироватьТаблицаУправленческий()

// Формирует таблицу значений, содержащую данные для проведения по регистру "ОплатаДокументов".
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаОплатаДокументов(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	РасчетыПроведениеДокументов.СформироватьТаблицаОплатаДокументовНакладные(ДокументСсылка, СтруктураДополнительныеСвойства, Неопределено);
	
КонецПроцедуры

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗакупки(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗакупки.Период КАК Период,
	|	ТаблицаЗакупки.ОрганизацияПолучатель КАК Организация,
	|	ТаблицаЗакупки.Номенклатура КАК Номенклатура,
	|	ТаблицаЗакупки.Характеристика КАК Характеристика,
	|	ТаблицаЗакупки.Партия КАК Партия,
	|	ТаблицаЗакупки.Заказ КАК ЗаказПоставщику,
	|	ТаблицаЗакупки.Документ КАК Документ,
	|	ТаблицаЗакупки.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаЗакупки.Количество) КАК Количество,
	|	СУММА(ТаблицаЗакупки.СуммаНДСЗакупкиПродажи) КАК СуммаНДС,
	|	СУММА(ТаблицаЗакупки.Сумма) КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗакупки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗакупки.Период,
	|	ТаблицаЗакупки.ОрганизацияПолучатель,
	|	ТаблицаЗакупки.Номенклатура,
	|	ТаблицаЗакупки.Характеристика,
	|	ТаблицаЗакупки.Партия,
	|	ТаблицаЗакупки.Заказ,
	|	ТаблицаЗакупки.Документ,
	|	ТаблицаЗакупки.СтавкаНДС";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗакупки", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗакупки()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаПродажи(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродажи.Период КАК Период,
	|	ТаблицаПродажи.Организация КАК Организация,
	|	ТаблицаПродажи.Контрагент КАК Контрагент,
	|	ТаблицаПродажи.Номенклатура КАК Номенклатура,
	|	ТаблицаПродажи.Характеристика КАК Характеристика,
	|	ТаблицаПродажи.Партия КАК Партия,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ТаблицаПродажи.Документ КАК Документ,
	|	ТаблицаПродажи.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПродажи.ПодразделениеПродажи КАК Подразделение,
	|	ТаблицаПродажи.Ответственный КАК Ответственный,
	|	СУММА(ТаблицаПродажи.Количество) КАК Количество,
	|	СУММА(ТаблицаПродажи.Количество) КАК КоличествоИнт,
	|	СУММА(ТаблицаПродажи.СуммаНДСЗакупкиПродажи) КАК СуммаНДС,
	|	СУММА(ТаблицаПродажи.Сумма) КАК Сумма,
	|	СУММА(ТаблицаПродажи.Сумма) КАК СуммаИнт,
	|	СУММА(ТаблицаПродажи.СуммаНДСЗакупкиПродажи) КАК СуммаНДСИнт,
	|	СУММА(ТаблицаПродажи.Сумма + ТаблицаПродажи.СуммаСкидкиНаценки + ТаблицаПродажи.СуммаАвтоматическойСкидки) КАК СуммаБезСкидки,
	|	СУММА(ТаблицаПродажи.Сумма + ТаблицаПродажи.СуммаСкидкиНаценки + ТаблицаПродажи.СуммаАвтоматическойСкидки) КАК СуммаБезСкидкиИнт,
	|	0 КАК Себестоимость,
	|	0 КАК СебестоимостьИнт,
	|	ТаблицаПродажи.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаПродажи.ХарактеристикаНабора КАК ХарактеристикаНабора
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаПродажи
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПродажи.Период,
	|	ТаблицаПродажи.Организация,
	|	ТаблицаПродажи.Контрагент,
	|	ТаблицаПродажи.Номенклатура,
	|	ТаблицаПродажи.Характеристика,
	|	ТаблицаПродажи.Партия,
	|	ТаблицаПродажи.Документ,
	|	ТаблицаПродажи.СтавкаНДС,
	|	ТаблицаПродажи.ПодразделениеПродажи,
	|	ТаблицаПродажи.Ответственный,
	|	ТаблицаПродажи.НоменклатураНабора,
	|	ТаблицаПродажи.ХарактеристикаНабора";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПродажи", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПродажи()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасы(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаЗапасы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический) КАК СценарийПланирования,
	|	ЛОЖЬ КАК Возврат,
	|	ТаблицаЗапасы.Документ КАК Документ,
	|	ТаблицаЗапасы.Документ КАК ДокументПродажи,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПродажи,
	|	ТаблицаЗапасы.ПодразделениеПродажи КАК Подразделение,
	|	ТаблицаЗапасы.Ответственный КАК Ответственный,
	|	ТаблицаЗапасы.ПодразделениеПродажи КАК ПодразделениеПродажи,
	|	ТаблицаЗапасы.НаправлениеДеятельностиПродажи КАК НаправлениеДеятельности,
	|	ТаблицаЗапасы.СчетУчетаСебестоимость КАК СчетУчетаСебестоимость,
	|	ТаблицаЗапасы.КоррОрганизация КАК КоррОрганизация,
	|	ЕСТЬNULL(ТаблицаЗапасы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(ТаблицаЗапасы.КоррСтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета КАК КоррСчетУчета,
	|	ТаблицаЗапасы.ТоварыНаКомиссии КАК ТоварыНаКомиссии,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаЗапасы.КоррНоменклатура КАК КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаЗапасы.КоррХарактеристика КАК КоррХарактеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.КоррПартия КАК КоррПартия,
	|	ИСТИНА КАК НеУчитыватьЗаказыПриПередачеНаКомиссию,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК КоррЗаказПокупателя,
	|	СУММА(ТаблицаЗапасы.Количество) КАК Количество,
	|	0 КАК Резерв,
	|	ТаблицаЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаЗапасы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаЗапасы.Сумма) КАК Сумма,
	|	0 КАК Себестоимость,
	|	ЛОЖЬ КАК ФиксированнаяСтоимость,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|			ТОГДА ТаблицаЗапасы.СчетУчетаЗатрат
	|		ИНАЧЕ ТаблицаЗапасы.СчетУчетаСебестоимость
	|	КОНЕЦ КАК СчетДт,
	|	ТаблицаЗапасы.СчетУчета КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	0 КАК СуммаВалДт,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВалКт,
	|	ВЫРАЗИТЬ(&СписаниеЗапасов КАК СТРОКА(100)) КАК Содержание,
	|	ВЫРАЗИТЬ(&СписаниеЗапасов КАК СТРОКА(100)) КАК СодержаниеПроводки,
	|	ТаблицаЗапасы.ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы,
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|ГДЕ
	|	ТаблицаЗапасы.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.Документ,
	|	ТаблицаЗапасы.ПодразделениеПродажи,
	|	ТаблицаЗапасы.Ответственный,
	|	ТаблицаЗапасы.НаправлениеДеятельностиПродажи,
	|	ТаблицаЗапасы.СчетУчетаСебестоимость,
	|	ТаблицаЗапасы.КоррОрганизация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.ТоварыНаКомиссии,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.НоменклатураНабора,
	|	ТаблицаЗапасы.ХарактеристикаНабора,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.КоррПартия,
	|	ТаблицаЗапасы.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|			ТОГДА ТаблицаЗапасы.СчетУчетаЗатрат
	|		ИНАЧЕ ТаблицаЗапасы.СчетУчетаСебестоимость
	|	КОНЕЦ,
	|	ТаблицаЗапасы.ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаЗапасы.Документ,
	|	ТаблицаЗапасы.ПодразделениеПродажи,
	|	ТаблицаЗапасы.СчетУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗапасы.НомерСтроки),
	|	ТаблицаЗапасы.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаЗапасы.ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СценарииПланирования.Фактический),
	|	ЛОЖЬ,
	|	ТаблицаЗапасы.Документ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаЗапасы.ПодразделениеПродажи,
	|	ТаблицаЗапасы.Ответственный,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаЗапасы.НаправлениеДеятельностиПродажи,
	|	ТаблицаЗапасы.СчетУчетаСебестоимость,
	|	ТаблицаЗапасы.КоррОрганизация,
	|	ЕСТЬNULL(ТаблицаЗапасы.СтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	|	ЕСТЬNULL(ТаблицаЗапасы.КоррСтруктурнаяЕдиница, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.ТоварыНаКомиссии,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.НоменклатураНабора,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.ХарактеристикаНабора,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррПартия,
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
	|	СУММА(ТаблицаЗапасы.Количество),
	|	0,
	|	ТаблицаЗапасы.СтавкаНДС,
	|	СУММА(ТаблицаЗапасы.СуммаНДС),
	|	СУММА(ТаблицаЗапасы.Сумма),
	|	0,
	|	ИСТИНА,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.СчетУчетаРасчетовСПоставщиком,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаЗапасы.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаЗапасы.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(&СписаниеЗапасов КАК СТРОКА(100)),
	|	ВЫРАЗИТЬ(&СписаниеЗапасов КАК СТРОКА(100)),
	|	ТаблицаЗапасы.ТипНоменклатуры
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы,
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|ГДЕ
	|	ТаблицаЗапасы.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Период,
	|	ТаблицаЗапасы.ОрганизацияПолучатель,
	|	ТаблицаЗапасы.Документ,
	|	ТаблицаЗапасы.ПодразделениеПродажи,
	|	ТаблицаЗапасы.Ответственный,
	|	ТаблицаЗапасы.НаправлениеДеятельностиПродажи,
	|	ТаблицаЗапасы.СчетУчетаСебестоимость,
	|	ТаблицаЗапасы.КоррОрганизация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.КоррСтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.КоррСчетУчета,
	|	ТаблицаЗапасы.ТоварыНаКомиссии,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.НоменклатураНабора,
	|	ТаблицаЗапасы.ХарактеристикаНабора,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.КоррНоменклатура,
	|	ТаблицаЗапасы.КоррХарактеристика,
	|	ТаблицаЗапасы.КоррПартия,
	|	ТаблицаЗапасы.СтавкаНДС,
	|	ТаблицаЗапасы.СчетУчетаРасчетовСПоставщиком,
	|	ТаблицаЗапасы.ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаВалютный
	|			ТОГДА ТаблицаЗапасы.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаЗапасы.ВалютаРасчетов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЗапасы.СчетУчетаРасчетовСПоставщикомВалютный
	|			ТОГДА ТаблицаЗапасы.СуммаВал
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаЗапасы.СчетУчета";
	
	Запрос.УстановитьПараметр("ОприходованиеЗапасов", НСтр("ru = 'Оприходование запасов'"));
	Запрос.УстановитьПараметр("СписаниеЗапасов", НСтр("ru = 'Списание запасов'"));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасы", Результат);
	
	СформироватьТаблицаЗапасыПродажа(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // СформироватьТаблицаЗапасы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗапасыПродажа(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Установка исключительной блокировки контролируемых остатков запасов.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Организация КАК Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя КАК ЗаказПокупателя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаЗапасы.Организация КАК Организация,
	|		ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|		ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|		ТаблицаЗапасы.Характеристика КАК Характеристика,
	|		ТаблицаЗапасы.Партия КАК Партия,
	|		ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|	ГДЕ
	|		ТаблицаЗапасы.Заказ <> НЕОПРЕДЕЛЕНО
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаЗапасы.Организация,
	|		ТаблицаЗапасы.СтруктурнаяЕдиница,
	|		ТаблицаЗапасы.СчетУчета,
	|		ТаблицаЗапасы.Номенклатура,
	|		ТаблицаЗапасы.Характеристика,
	|		ТаблицаЗапасы.Партия,
	|		ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	ИЗ
	|		ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы) КАК ТаблицаЗапасы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗапасы.Организация,
	|	ТаблицаЗапасы.СтруктурнаяЕдиница,
	|	ТаблицаЗапасы.СчетУчета,
	|	ТаблицаЗапасы.Номенклатура,
	|	ТаблицаЗапасы.Характеристика,
	|	ТаблицаЗапасы.Партия,
	|	ТаблицаЗапасы.ЗаказПокупателя";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();
	
	// Получение остатков запасов по стоимости.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ЗапасыОстатки.СуммаОстаток) КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|		ЗапасыОстатки.СуммаОстаток КАК СуммаОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				&МоментКонтроля,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						ТаблицаЗапасы.Организация КАК Организация,
	|						ТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.СчетУчета КАК СчетУчета,
	|						ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|						ТаблицаЗапасы.Характеристика КАК Характеристика,
	|						ТаблицаЗапасы.Партия КАК Партия,
	|						ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия,
	|	ЗапасыОстатки.ЗаказПокупателя";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Исключая));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЗапасыОстатки = РезультатЗапроса.Выгрузить();
	ТаблицаЗапасыОстатки.Индексы.Добавить("Организация,СтруктурнаяЕдиница,СчетУчета,Номенклатура,Характеристика,Партия,ЗаказПокупателя");
	
	ВременнаяТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.СкопироватьКолонки();
	
	Для н = 0 По СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы.Количество() - 1 Цикл
		
		СтрокаТаблицаЗапасы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы[н];
		
		Если СтрокаТаблицаЗапасы.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			
			СтрокаТаблицыПриход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриход, СтрокаТаблицаЗапасы);
			Продолжить;
			
		КонецЕсли; 
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Организация", СтрокаТаблицаЗапасы.Организация);
		СтруктураДляПоиска.Вставить("СтруктурнаяЕдиница", СтрокаТаблицаЗапасы.СтруктурнаяЕдиница);
		СтруктураДляПоиска.Вставить("СчетУчета", СтрокаТаблицаЗапасы.СчетУчета);
		СтруктураДляПоиска.Вставить("Номенклатура", СтрокаТаблицаЗапасы.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", СтрокаТаблицаЗапасы.Характеристика);
		СтруктураДляПоиска.Вставить("Партия", СтрокаТаблицаЗапасы.Партия);
		
		КоличествоТребуетсяРезерв = ?(ЗначениеЗаполнено(СтрокаТаблицаЗапасы.Резерв), СтрокаТаблицаЗапасы.Резерв, 0);
		КоличествоТребуетсяСвободныйОстаток = ?(ЗначениеЗаполнено(СтрокаТаблицаЗапасы.Количество), СтрокаТаблицаЗапасы.Количество, 0);
		
		Если КоличествоТребуетсяРезерв > 0 Тогда
			
			КоличествоТребуетсяСвободныйОстаток = КоличествоТребуетсяСвободныйОстаток - КоличествоТребуетсяРезерв;
			
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", СтрокаТаблицаЗапасы.ЗаказПокупателя);
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяРезерв Тогда
				
				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяРезерв / КоличествоОстаток , 2, 1);
				
				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяРезерв;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;
				
			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяРезерв Тогда
				
				СуммаКСписанию = СуммаОстаток;
				
				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;
				
			Иначе
				СуммаКСписанию = 0;
			КонецЕсли;
			
			// Расход. Запасы.
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяРезерв;
			
			// Сформируем проводки.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.Сумма = СуммаКСписанию;
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ТоварыНаКомиссии Тогда
			
			ИначеЕсли Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				// Продвигаем доходы и расходы.
				СтрокаДоходыИРасходы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДоходыИРасходы, СтрокаТаблицаЗапасы);
				
				СтрокаДоходыИРасходы.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.ПодразделениеПродажи;
				Если СтрокаТаблицаЗапасы.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
					СтрокаДоходыИРасходы.СчетУчета = СтрокаТаблицаЗапасы.СчетДт;
				Иначе
					СтрокаДоходыИРасходы.СчетУчета = СтрокаТаблицаЗапасы.СчетУчетаСебестоимость;
				КонецЕсли;
				СтрокаДоходыИРасходы.СуммаДоходов = 0;
				СтрокаДоходыИРасходы.СуммаДоходовИнт = 0;
				СтрокаДоходыИРасходы.СуммаРасходов = СуммаКСписанию;
				СтрокаДоходыИРасходы.Сумма = СуммаКСписанию;
				СтрокаДоходыИРасходы.СуммаРасходовИнт = СуммаКСписанию;
				
				СтрокаДоходыИРасходы.СодержаниеПроводки = НСтр("ru='Отражение расходов'");
				
			КонецЕсли;
			
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
			
				// Продвигаем себестоимость продаж.
				Если Не СтрокаТаблицаЗапасы.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат") Тогда
					СтрокаПродажи = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПродажи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПродажи, СтрокаТаблицаЗапасы);
					СтрокаПродажи.Количество = 0;
					СтрокаПродажи.Сумма = 0;
					СтрокаПродажи.СуммаНДС = 0;
					СтрокаПродажи.Себестоимость = СуммаКСписанию;
					СтрокаПродажи.КоличествоИнт = 0;
					СтрокаПродажи.СуммаИнт = 0;
					СтрокаПродажи.СуммаНДСИнт = 0;
					СтрокаПродажи.СебестоимостьИнт = СуммаКСписанию;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если КоличествоТребуетсяСвободныйОстаток > 0 Тогда
			
			СтруктураДляПоиска.Вставить("ЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());
			
			МассивСтрокОстатков = ТаблицаЗапасыОстатки.НайтиСтроки(СтруктураДляПоиска);
			
			КоличествоОстаток = 0;
			СуммаОстаток = 0;
			
			Если МассивСтрокОстатков.Количество() > 0 Тогда
				КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток;
				СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток;
			КонецЕсли;
			
			Если КоличествоОстаток > 0 И КоличествоОстаток > КоличествоТребуетсяСвободныйОстаток Тогда
				
				СуммаКСписанию = Окр(СуммаОстаток * КоличествоТребуетсяСвободныйОстаток / КоличествоОстаток , 2, 1);
				
				МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоТребуетсяСвободныйОстаток;
				МассивСтрокОстатков[0].СуммаОстаток = МассивСтрокОстатков[0].СуммаОстаток - СуммаКСписанию;
				
			ИначеЕсли КоличествоОстаток = КоличествоТребуетсяСвободныйОстаток Тогда
				
				СуммаКСписанию = СуммаОстаток;
				
				МассивСтрокОстатков[0].КоличествоОстаток = 0;
				МассивСтрокОстатков[0].СуммаОстаток = 0;
				
			Иначе
				СуммаКСписанию = 0;
			КонецЕсли;
			
			// Расход. Запасы.
			СтрокаТаблицыРасход = ВременнаяТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыРасход, СтрокаТаблицаЗапасы);
			
			СтрокаТаблицыРасход.Сумма = СуммаКСписанию;
			СтрокаТаблицыРасход.Количество = КоличествоТребуетсяСвободныйОстаток;
			СтрокаТаблицыРасход.ЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();
			
			// Сформируем проводки.
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				СтрокаТаблицаУправленческий = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУправленческий.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицаУправленческий, СтрокаТаблицаЗапасы);
				СтрокаТаблицаУправленческий.Сумма = СуммаКСписанию;
			КонецЕсли;
			
			Если СтрокаТаблицаЗапасы.ТоварыНаКомиссии Тогда
							
			ИначеЕсли Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
				
				// Продвигаем доходы и расходы.
				СтрокаДоходыИРасходы = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДоходыИРасходы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДоходыИРасходы, СтрокаТаблицаЗапасы);
				
				СтрокаДоходыИРасходы.СтруктурнаяЕдиница = СтрокаТаблицаЗапасы.ПодразделениеПродажи;
				Если СтрокаТаблицаЗапасы.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат") Тогда
					СтрокаДоходыИРасходы.СчетУчета = СтрокаТаблицаЗапасы.СчетДт;
				Иначе
					СтрокаДоходыИРасходы.СчетУчета = СтрокаТаблицаЗапасы.СчетУчетаСебестоимость;
				КонецЕсли;
				СтрокаДоходыИРасходы.СуммаДоходов = 0;
				СтрокаДоходыИРасходы.СуммаРасходов = СуммаКСписанию;
				СтрокаДоходыИРасходы.СуммаДоходовИнт = 0;
				СтрокаДоходыИРасходы.СуммаРасходовИнт = СуммаКСписанию;
				СтрокаДоходыИРасходы.Сумма = СуммаКСписанию;
				
				СтрокаДоходыИРасходы.СодержаниеПроводки = НСтр("ru='Отражение расходов'");
				
			КонецЕсли;
			
			Если Окр(СуммаКСписанию, 2, 1) <> 0 Тогда
			
				// Продвигаем себестоимость продаж.
				Если Не СтрокаТаблицаЗапасы.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат") Тогда
					СтрокаПродажи = СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПродажи.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПродажи, СтрокаТаблицаЗапасы);
					СтрокаПродажи.Количество = 0;
					СтрокаПродажи.Сумма = 0;
					СтрокаПродажи.СуммаНДС = 0;
					СтрокаПродажи.Себестоимость = СуммаКСписанию;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(ВременнаяТаблицаЗапасы, "Количество,Сумма");
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗапасы = ВременнаяТаблицаЗапасы;
	
КонецПроцедуры // СформироватьТаблицаЗапасыПродажа()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходы(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	// Установка исключительной блокировки остатков подарочных сертификатов и создание временной таблицы
	Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПодарочныеСертификаты Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Документ КАК ПодарочныйСертификат,
		|	ТаблицаДокумента.НомерСертификата КАК НомерСертификата
		|ИЗ
		|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
		|ГДЕ
		|	НЕ ТаблицаДокумента.ЧастичноеПогашение
		|	И ТаблицаДокумента.ОплатаСертификатом
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.НомерСертификата,
		|	ТаблицаДокумента.Документ";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
			// Создадим пустую временную таблицу, чтобы избежать
			// ошибок при обращениях к ней в других процедурах
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	НЕОПРЕДЕЛЕНО КАК ПодарочныйСертификат,
			|	НЕОПРЕДЕЛЕНО КАК НомерСертификата,
			|	0 КАК СуммаОстаток
			|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиСертификатов";
			Запрос.Выполнить();
			
		Иначе
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПодарочныеСертификаты");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
			
			Для Каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
				ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
			КонецЦикла;
			Блокировка.Заблокировать();
			
			Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера Тогда
				
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
				Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВложенныйЗапрос.ПодарочныйСертификат КАК ПодарочныйСертификат,
				|	ВложенныйЗапрос.НомерСертификата КАК НомерСертификата,
				|	СУММА(ВложенныйЗапрос.СуммаОстаток) КАК СуммаОстаток
				|ПОМЕСТИТЬ ВременнаяТаблицаОстаткиСертификатов
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
				|		ПодарочныеСертификатыОстатки.НомерСертификата КАК НомерСертификата,
				|		ПодарочныеСертификатыОстатки.СуммаОстаток КАК СуммаОстаток
				|	ИЗ
				|		РегистрНакопления.ПодарочныеСертификаты.Остатки(, ) КАК ПодарочныеСертификатыОстатки
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаПредоплата КАК ВременнаяТаблицаПредоплата
				|			ПО ПодарочныеСертификатыОстатки.ПодарочныйСертификат = ВременнаяТаблицаПредоплата.Документ
				|				И ПодарочныеСертификатыОстатки.НомерСертификата = ВременнаяТаблицаПредоплата.НомерСертификата
				|				И (ВременнаяТаблицаПредоплата.ОплатаСертификатом)
				|				И (НЕ ВременнаяТаблицаПредоплата.ЧастичноеПогашение)
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПодарочныеСертификаты.ПодарочныйСертификат,
				|		ПодарочныеСертификаты.НомерСертификата,
				|		ВЫБОР
				|			КОГДА ПодарочныеСертификаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
				|				ТОГДА ПодарочныеСертификаты.Сумма
				|			ИНАЧЕ -ПодарочныеСертификаты.Сумма
				|		КОНЕЦ
				|	ИЗ
				|		РегистрНакопления.ПодарочныеСертификаты КАК ПодарочныеСертификаты
				|	ГДЕ
				|		ПодарочныеСертификаты.Регистратор = &Ссылка) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.ПодарочныйСертификат,
				|	ВложенныйЗапрос.НомерСертификата";
				
				Запрос.Выполнить();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаДоходыИРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДоходыИРасходы.Период КАК Период,
	|	ТаблицаДоходыИРасходы.Организация КАК Организация,
	|	ТаблицаДоходыИРасходы.ПодразделениеПродажи КАК СтруктурнаяЕдиница,
	|	ТаблицаДоходыИРасходы.НаправлениеДеятельностиПродажи КАК НаправлениеДеятельности,
	|	ТаблицаДоходыИРасходы.Заказ КАК ЗаказПокупателя,
	|	ТаблицаДоходыИРасходы.СчетУчетаПродажи КАК СчетУчета,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ВЫРАЗИТЬ(&Выручка КАК СТРОКА(100)) КАК СодержаниеПроводки,
	|	СУММА(ТаблицаДоходыИРасходы.Сумма) КАК СуммаДоходов,
	|	0 КАК СуммаРасходов,
	|	СУММА(ТаблицаДоходыИРасходы.Сумма) КАК Сумма
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДоходыИРасходы
	|ГДЕ
	|	 НЕ ТаблицаДоходыИРасходы.ТоварыНаКомиссии
	|	И ТаблицаДоходыИРасходы.Сумма <> 0
	|	И НЕ ТаблицаДоходыИРасходы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДоходыИРасходы.Период,
	|	ТаблицаДоходыИРасходы.НомерСтроки,
	|	ТаблицаДоходыИРасходы.Организация,
	|	ТаблицаДоходыИРасходы.ПодразделениеПродажи,
	|	ТаблицаДоходыИРасходы.НаправлениеДеятельностиПродажи,
	|	ТаблицаДоходыИРасходы.Заказ,
	|	ТаблицаДоходыИРасходы.СчетУчетаПродажи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаДокумента.НомерСтроки,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА &ОтрицательнаяКурсоваяРазницаСчетУчета
	|		ИНАЧЕ &ПоложительнаяКурсоваяРазницаСчетУчета
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	ВременнаяТаблицаКурсовыхРазницРасчетыСПоставщиками КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	1,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее),
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА &ПоложительнаяКурсоваяРазницаСчетУчета
	|		ИНАЧЕ &ОтрицательнаяКурсоваяРазницаСчетУчета
	|	КОНЕЦ,
	|	ТаблицаДокумента.Валюта,
	|	&КурсоваяРазница,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаКурсовойРазницы > 0
	|			ТОГДА ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИНАЧЕ -ТаблицаДокумента.СуммаКурсовойРазницы
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Дата КАК Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Организация КАК Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Валюта КАК Валюта,
	|		СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) КАК СуммаКурсовойРазницы
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ТаблицаДокумента.Дата КАК Дата,
	|			ТаблицаДокумента.Организация КАК Организация,
	|			ТаблицаДокумента.Валюта КАК Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы КАК СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Долг)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаДокумента.Дата,
	|			ТаблицаДокумента.Организация,
	|			ТаблицаДокумента.Валюта,
	|			ТаблицаДокумента.СуммаКурсовойРазницы
	|		ИЗ
	|			ВременнаяТаблицаКурсовыхРазницРасчетыСПокупателями КАК ТаблицаДокумента
	|		ГДЕ
	|			ТаблицаДокумента.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетов.Аванс)) КАК ТаблицаКурсовыхРазницРасчетыСПокупателями
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Дата,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Организация,
	|		ТаблицаКурсовыхРазницРасчетыСПокупателями.Валюта
	|	
	|	ИМЕЮЩИЕ
	|		(СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) >= 0.005
	|			ИЛИ СУММА(ТаблицаКурсовыхРазницРасчетыСПокупателями.СуммаКурсовойРазницы) <= -0.005)) КАК ТаблицаДокумента";
	
	Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПодарочныеСертификаты Тогда
		Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера Тогда
			
			Запрос.Текст = Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	4,
			|	0,
			|	ТаблицаДоходыИРасходы.Период,
			|	ТаблицаДоходыИРасходы.Организация,
			|	ТаблицаДоходыИРасходы.Подразделение,
			|	НЕОПРЕДЕЛЕНО,
			|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
			|	ТаблицаДоходыИРасходы.СчетУчетаДоходов,
			|	НЕОПРЕДЕЛЕНО,
			|	ВЫРАЗИТЬ(&ОтражениеДоходов КАК СТРОКА(100)),
			|	СУММА(ВЫБОР
			|			КОГДА ТаблицаДоходыИРасходы.ИспользоватьСерийныеНомера
			|				ТОГДА ЕСТЬNULL(ПодарочныеСертификатыОстатки.СуммаОстаток, 0) - ТаблицаДоходыИРасходы.Сумма
			|			ИНАЧЕ ТаблицаДоходыИРасходы.Номинал - ТаблицаДоходыИРасходы.Сумма
			|		КОНЕЦ),
			|	0,
			|	СУММА(ВЫБОР
			|			КОГДА ТаблицаДоходыИРасходы.ИспользоватьСерийныеНомера
			|				ТОГДА ЕСТЬNULL(ПодарочныеСертификатыОстатки.СуммаОстаток, 0) - ТаблицаДоходыИРасходы.Сумма
			|			ИНАЧЕ ТаблицаДоходыИРасходы.Номинал - ТаблицаДоходыИРасходы.Сумма
			|		КОНЕЦ)
			|ИЗ
			|	ВременнаяТаблицаПредоплата КАК ТаблицаДоходыИРасходы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиСертификатов КАК ПодарочныеСертификатыОстатки
			|		ПО ТаблицаДоходыИРасходы.Документ = ПодарочныеСертификатыОстатки.ПодарочныйСертификат
			|			И ТаблицаДоходыИРасходы.НомерСертификата = ПодарочныеСертификатыОстатки.НомерСертификата
			|ГДЕ
			|	ТаблицаДоходыИРасходы.ОплатаСертификатом
			|	И НЕ ТаблицаДоходыИРасходы.ЧастичноеПогашение
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаДоходыИРасходы.Организация,
			|	ТаблицаДоходыИРасходы.Подразделение,
			|	ТаблицаДоходыИРасходы.СчетУчетаДоходов,
			|	ТаблицаДоходыИРасходы.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок,
			|	НомерСтроки";
			
		Иначе
			
			Запрос.Текст = Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	4,
			|	0,
			|	ТаблицаДоходыИРасходы.Период,
			|	ТаблицаДоходыИРасходы.Организация,
			|	ТаблицаДоходыИРасходы.Подразделение,
			|	НЕОПРЕДЕЛЕНО,
			|	ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка),
			|	ТаблицаДоходыИРасходы.СчетУчетаДоходов,
			|	НЕОПРЕДЕЛЕНО,
			|	ВЫРАЗИТЬ(&ОтражениеДоходов КАК СТРОКА(100)),
			|	СУММА(ТаблицаДоходыИРасходы.Номинал - ТаблицаДоходыИРасходы.Сумма),
			|	0,
			|	СУММА(ТаблицаДоходыИРасходы.Номинал - ТаблицаДоходыИРасходы.Сумма)
			|ИЗ
			|	ВременнаяТаблицаПредоплата КАК ТаблицаДоходыИРасходы
			|ГДЕ
			|	ТаблицаДоходыИРасходы.ОплатаСертификатом
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаДоходыИРасходы.Организация,
			|	ТаблицаДоходыИРасходы.Подразделение,
			|	ТаблицаДоходыИРасходы.СчетУчетаДоходов,
			|	ТаблицаДоходыИРасходы.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок,
			|	НомерСтроки";
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПоложительнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ОтрицательнаяКурсоваяРазницаСчетУчета", ПланыСчетов.Управленческий.ПрочиеРасходы);
	Запрос.УстановитьПараметр("Выручка", НСтр("ru='Выручка от продажи'"));
	Запрос.УстановитьПараметр("Доставка", НСтр("ru='Выручка от доставки'"));
	Запрос.УстановитьПараметр("ОтражениеДоходов", НСтр("ru='Отражение доходов'"));
	Запрос.УстановитьПараметр("КурсоваяРазница", НСтр("ru='Курсовая разница'"));
	Запрос.УстановитьПараметр("МоментКонтроля", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Исключая));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(Результат, "СуммаДоходов,СуммаРасходов");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходы", Результат);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходы()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыОтложенные(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Документ,
	|	ТаблицаДокумента.НаправлениеДеятельностиПродажи КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.Сумма КАК СуммаДоходов,
	|	ТаблицаДокумента.Сумма КАК НеРаспределено
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.Сумма <> 0
	|	И НЕ ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	СУММА(ТаблицаДокумента.Сумма) КАК СуммаКСписанию
	|ИЗ
	|	ВременнаяТаблицаПредоплатаДляКассовогоМетода КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Статья КАК Статья
	|ИЗ
	|	ВременнаяТаблицаПредоплатаДляКассовогоМетода КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаЗапасыДоходыИРасходыОтложенные = МассивРезультатов[0].Выгрузить();
	ВыборкаРезультатаЗапроса = МассивРезультатов[1].Выбрать();
	
	ТаблицаПредоплатаДоходыИРасходыОтложенные = ТаблицаЗапасыДоходыИРасходыОтложенные.Скопировать();
	ТаблицаПредоплатаДоходыИРасходыОтложенные.Очистить();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		СуммаКСписанию = ВыборкаРезультатаЗапроса.СуммаКСписанию;
		Для каждого СтрокаЗапасыДоходыИРасходыОтложенные Из ТаблицаЗапасыДоходыИРасходыОтложенные Цикл
			Если СуммаКСписанию = 0 Тогда
				Продолжить
			ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.СуммаДоходов <= СуммаКСписанию Тогда
				СтрокаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПредоплатаДоходыИРасходыОтложенные, СтрокаЗапасыДоходыИРасходыОтложенные);
				СуммаКСписанию = СуммаКСписанию - СтрокаЗапасыДоходыИРасходыОтложенные.СуммаДоходов;
			ИначеЕсли СтрокаЗапасыДоходыИРасходыОтложенные.СуммаДоходов > СуммаКСписанию Тогда
				СтрокаПредоплатаДоходыИРасходыОтложенные = ТаблицаПредоплатаДоходыИРасходыОтложенные.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПредоплатаДоходыИРасходыОтложенные, СтрокаЗапасыДоходыИРасходыОтложенные);
				СтрокаПредоплатаДоходыИРасходыОтложенные.СуммаДоходов = СуммаКСписанию;
				СуммаКСписанию = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для каждого СтрокаПредоплатаДоходыИРасходыОтложенные Из ТаблицаПредоплатаДоходыИРасходыОтложенные Цикл
		СтрокаЗапасыДоходыИРасходыОтложенные = ТаблицаЗапасыДоходыИРасходыОтложенные.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЗапасыДоходыИРасходыОтложенные, СтрокаПредоплатаДоходыИРасходыОтложенные);
		СтрокаЗапасыДоходыИРасходыОтложенные.ВидДвижения = ВидДвиженияНакопления.Расход;
		СтрокаЗапасыДоходыИРасходыОтложенные.НеРаспределено = -СтрокаПредоплатаДоходыИРасходыОтложенные.СуммаДоходов;
	КонецЦикла;
	
	ВыборкаРезультатаЗапроса = МассивРезультатов[2].Выбрать();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Статья = ВыборкаРезультатаЗапроса.Статья;
	Иначе
		Статья = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ,
	|	&Статья КАК Статья,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.СуммаДоходов КАК СуммаДоходов
	|ПОМЕСТИТЬ ВременнаяТаблицаПредоплатаДоходыИРасходыОтложенные
	|ИЗ
	|	&Таблица КАК Таблица";
	Запрос.УстановитьПараметр("Таблица", ТаблицаПредоплатаДоходыИРасходыОтложенные);
	Запрос.УстановитьПараметр("Статья", Статья);
	
	Запрос.Выполнить();
	
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(ТаблицаЗапасыДоходыИРасходыОтложенные, "СуммаДоходов");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыОтложенные", ТаблицаЗапасыДоходыИРасходыОтложенные);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыОтложенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыНераспределенные(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Если СтруктураДополнительныеСвойства.СпособЗачетаПредоплаты <> Перечисления.СпособыЗачетаИРаспределенияПлатежей.Авто
		И СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПодарочныеСертификаты Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаДокумента.Период КАК Период,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Документ,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей) КАК Статья,
		|	ТаблицаДокумента.Сумма КАК СуммаДоходов
		|ИЗ
		|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
		|ГДЕ
		|	&КассовыйМетодУчетаДоходовИРасходов
		|	И ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьСерийныеНомера Тогда
			
			Запрос.Текст = Запрос.Текст + "
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
			|	ТаблицаДокумента.Период,
			|	ТаблицаДокумента.Организация,
			|	ВЫБОР
			|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
			|			ТОГДА ТаблицаДокумента.Документ
			|		ИНАЧЕ НЕОПРЕДЕЛЕНО
			|	КОНЕЦ,
			|	ТаблицаДокумента.Статья,
			|	ВЫБОР
			|		КОГДА НЕ ТаблицаДокумента.ОплатаСертификатом
			|			ТОГДА ТаблицаДокумента.Сумма
			|		КОГДА ТаблицаДокумента.ЧастичноеПогашение
			|			ТОГДА ТаблицаДокумента.Сумма
			|		КОГДА ТаблицаДокумента.ИспользоватьСерийныеНомера
			|			ТОГДА ЕСТЬNULL(ПодарочныеСертификатыОстатки.СуммаОстаток, 0)
			|		ИНАЧЕ ТаблицаДокумента.Номинал
			|	КОНЕЦ
			|ИЗ
			|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаОстаткиСертификатов КАК ПодарочныеСертификатыОстатки
			|		ПО ТаблицаДокумента.Документ = ПодарочныеСертификатыОстатки.ПодарочныйСертификат
			|			И ТаблицаДокумента.НомерСертификата = ПодарочныеСертификатыОстатки.НомерСертификата
			|ГДЕ
			|	&КассовыйМетодУчетаДоходовИРасходов
			|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация";
			
		Иначе
			
			Запрос.Текст = Запрос.Текст + "
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
			|	ТаблицаДокумента.Период,
			|	ТаблицаДокумента.Организация,
			|	ВЫБОР
			|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
			|			ТОГДА ТаблицаДокумента.Документ
			|		ИНАЧЕ НЕОПРЕДЕЛЕНО
			|	КОНЕЦ,
			|	ТаблицаДокумента.Статья,
			|	ВЫБОР
			|		КОГДА НЕ ТаблицаДокумента.ОплатаСертификатом
			|			ТОГДА ТаблицаДокумента.Сумма
			|		ИНАЧЕ ТаблицаДокумента.Номинал
			|	КОНЕЦ
			|ИЗ
			|	ВременнаяТаблицаПредоплата КАК ТаблицаДокумента
			|ГДЕ
			|	&КассовыйМетодУчетаДоходовИРасходов
			|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация";
			
		КонецЕсли;
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТаблицаДокумента.Период КАК Период,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ВестиРасчетыПоДокументам
		|			ТОГДА ТаблицаДокумента.Документ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК Документ,
		|	ТаблицаДокумента.Статья КАК Статья,
		|	ТаблицаДокумента.Сумма КАК СуммаДоходов
		|ИЗ
		|	ВременнаяТаблицаПредоплатаДляКассовогоМетода КАК ТаблицаДокумента,
		|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
		|ГДЕ
		|	&КассовыйМетодУчетаДоходовИРасходов
		|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация";
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(Результат, "СуммаДоходов,СуммаРасходов");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыНераспределенные", Результат);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыНераспределенные()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаДоходыИРасходыКассовыйМетод(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаПередачаТоваровМеждуОрганизациями);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КассовыйМетодУчетаДоходовИРасходов", СтруктураДополнительныеСвойства.УчетнаяПолитика.КассовыйМетодУчетаДоходовИРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Период КАК Период,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ОплатаОтПокупателей) КАК Статья,
	|	ТаблицаДокумента.Сумма КАК СуммаДоходов
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ТаблицаДокумента
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И ТаблицаДокумента.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.ДокументДата,
	|	ТаблицаДокумента.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаДокумента.Статья,
	|	-ТаблицаДокумента.Сумма
	|ИЗ
	|	ВременнаяТаблицаПредоплатаДляКассовогоМетода КАК ТаблицаДокумента,
	|	ВременнаяТаблицаШапка КАК ВременнаяТаблицаШапка
	|ГДЕ
	|	&КассовыйМетодУчетаДоходовИРасходов
	|	И НЕ ТаблицаДокумента.ЭтоЭквайринговаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Организация,
	|	Таблица.НаправлениеДеятельности,
	|	Таблица.Статья,
	|	Таблица.СуммаДоходов
	|ИЗ
	|	ВременнаяТаблицаПредоплатаДоходыИРасходыОтложенные КАК Таблица";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	УправлениеНебольшойФирмойСервер.ДобавитьПоляДляПередачиТоваров(Результат, "СуммаДоходов,СуммаРасходов");
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДоходыИРасходыКассовыйМетод", Результат);
	
КонецПроцедуры // СформироватьТаблицаДоходыИРасходыКассовыйМетод()

#Область РаботаССерийнымиНомерами

// Формирует таблицу значений, содержащую данные для проведения по регистру СерийныеНомераГарантии.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСерийныеНомера(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Если ДокументСсылкаПередачаТоваровМеждуОрганизациями.СерийныеНомера.Количество()=0 Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераГарантии", Новый ТаблицаЗначений);
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииСерийныхНомеров.Расход)  КАК Операция,
	|	ВременнаяТаблицаЗапасы.Период КАК Период,
	|	ВременнаяТаблицаЗапасы.Период КАК ДатаСобытия,
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ВременнаяТаблицаЗапасы.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ВременнаяТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВременнаяТаблицаЗапасы.Ячейка КАК Ячейка,
	|	ВременнаяТаблицаЗапасы.ОрдерныйСклад КАК ОрдерныйСклад,
	|	1 КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерийныеНомера КАК СерийныеНомера
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерийныеНомера.КлючСвязи";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераГарантии", РезультатЗапроса);
	Если СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийныхНомеров Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", РезультатЗапроса);
	Иначе
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераОстатки", Новый ТаблицаЗначений);
	КонецЕсли; 
	
КонецПроцедуры // СформироватьТаблицаСерийныеНомера()

// Формирует таблицу значений, содержащую данные для проведения по регистру СерийныеНомераКРасходу.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСерийныеНомераКРасходу(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Если ДокументСсылка.СерийныеНомера.Количество() = 0
			Или Не СтруктураДополнительныеСвойства.УчетнаяПолитика.ОстаткиСерийныхНомеров Тогда
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераКРасходу", Новый ТаблицаЗначений);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаЗапасы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ВременнаяТаблицаЗапасы.Организация КАК Организация,
	|	ВременнаяТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ВременнаяТаблицаЗапасы.Партия КАК Партия,
	|	ВременнаяТаблицаЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	1 КАК Количество
	|ИЗ
	|	ВременнаяТаблицаЗапасы КАК ВременнаяТаблицаЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаСерийныеНомера КАК СерийныеНомера
	|		ПО ВременнаяТаблицаЗапасы.КлючСвязи = СерийныеНомера.КлючСвязи
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаЗапасы.ПоложениеСклада = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|			ТОГДА ВременнаяТаблицаЗапасы.ОрдерныйСклад
	|		ИНАЧЕ ВременнаяТаблицаЗапасы.СтруктурнаяЕдиницаШапкаОрдерныйСклад
	|	КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСерийныеНомераКРасходу", РезультатЗапроса);
	
КонецПроцедуры

#КонецОбласти

// Формирует таблицу значений, содержащую данные для проведения по регистру "СуммыДокументовРегламентированныйУчет".
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаСуммыДокументовРегламентированныйУчет(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства)
	
	Если СтруктураДополнительныеСвойства.ВалютаДокумента <> СтруктураДополнительныеСвойства.НациональнаяВалюта Тогда
		
		РасчетыПроведениеДокументов.СформироватьТаблицаСуммыДокументовРегламентированныйУчет(ДокументСсылкаПередачаТоваровМеждуОрганизациями, СтруктураДополнительныеСвойства);
		
	Иначе
		
		СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаСуммыДокументовРегламентированныйУчет", Новый ТаблицаЗначений);
		
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета, ПараметрыПечати)
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

#КонецОбласти

#КонецЕсли
