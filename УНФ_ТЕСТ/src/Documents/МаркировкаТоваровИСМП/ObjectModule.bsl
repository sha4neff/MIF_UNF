#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Товары.Очистить();
		ШтрихкодыУпаковок.Очистить();
	КонецЕсли;
	
	ИнтеграцияИСМППереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
	ЗаполнитьТабличнуюЧастьТоварыСрокомГодностиВЕТИС();
	
	ИнтеграцияИСМППереопределяемый.ЗаполнитьКодыТНВЭДПоНоменклатуреВТабличнойЧасти(Товары);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	// Обувная продукция
	НепроверяемыеРеквизиты.Добавить("ПринятоеРешение");
	НепроверяемыеРеквизиты.Добавить("КодТаможенногоОргана");
	НепроверяемыеРеквизиты.Добавить("СтранаПроисхождения");
	НепроверяемыеРеквизиты.Добавить("ДатаДекларации");
	НепроверяемыеРеквизиты.Добавить("РегистрационныйНомерДекларации");
	НепроверяемыеРеквизиты.Добавить("Контрагент");
	НепроверяемыеРеквизиты.Добавить("ДатаПроизводства");
	НепроверяемыеРеквизиты.Добавить("ДатаИмпорта");
	НепроверяемыеРеквизиты.Добавить("ДатаПервичногоДокумента");
	НепроверяемыеРеквизиты.Добавить("НомерПервичногоДокумента");
	НепроверяемыеРеквизиты.Добавить("Товары.GTIN");
	
	// Молочная продукция
	НепроверяемыеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
	НепроверяемыеРеквизиты.Добавить("Товары.СрокГодности");
	
	ОбязательныеРеквизиты = Новый Массив;
	
	Если ОтчетПроизводственнойЛинии Тогда
		
		НепроверяемыеРеквизиты.Добавить("Товары");
		
	Иначе
		
		НепроверяемыеРеквизиты.Добавить("ДанныеОтчетаПроизводственнойЛинии");
		
		Если ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
			
			ОбязательныеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
			
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.Табак
				И (Операция = Перечисления.ВидыОперацийИСМП.Агрегация
					Или ИнтеграцияИСМПКлиентСервер.ОперацииНанесенияКодовМаркировки().Найти(Операция) <> Неопределено) Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				НачалоGTINМаркировкиОстатков = ИнтеграцияИСМПСлужебныйКлиентСервер.НачалоGTINМаркировкиОстатков();
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
						И Не СтрНачинаетсяС(СтрокаТовары.GTIN, НачалоGTINМаркировкиОстатков)Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле Номенклатура'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "Номенклатура"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		ИначеЕсли ИнтеграцияИСПовтИсп.ЭтоПродукцияИСМП(ВидПродукции) Тогда
			НепроверяемыеРеквизиты.Добавить("ИдентификаторПроизводственнойЛинии");
			Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС Тогда
				ОбязательныеРеквизиты.Добавить("ПринятоеРешение");
				ОбязательныеРеквизиты.Добавить("КодТаможенногоОргана");
				ОбязательныеРеквизиты.Добавить("ДатаДекларации");
				ОбязательныеРеквизиты.Добавить("РегистрационныйНомерДекларации");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору
				Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика Тогда
				ОбязательныеРеквизиты.Добавить("Контрагент");
				ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ Тогда
				ОбязательныеРеквизиты.Добавить("ДатаПроизводства");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля Тогда
				ОбязательныеРеквизиты.Добавить("СтранаПроисхождения");
				ОбязательныеРеквизиты.Добавить("ДатаИмпорта");
				ОбязательныеРеквизиты.Добавить("ДатаПервичногоДокумента");
				ОбязательныеРеквизиты.Добавить("НомерПервичногоДокумента");
				ОбязательныеРеквизиты.Добавить("Контрагент");
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.GTIN)
						И Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле GTIN'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "GTIN"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли Операция = Перечисления.ВидыОперацийИСМП.Агрегация Тогда
				
				НепроверяемыеРеквизиты.Добавить("Товары.Номенклатура");
				НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
				
				НачалоGTINМаркировкиОстатков = ИнтеграцияИСМПСлужебныйКлиентСервер.НачалоGTINМаркировкиОстатков();
				
				Для Каждого СтрокаТовары Из Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура)
						И Не СтрНачинаетсяС(СтрокаТовары.GTIN, НачалоGTINМаркировкиОстатков)Тогда
						ТекстСообщения = СтрШаблон(
							НСтр(
								"ru = 'В строке %1 табличной части Товары не заполнено поле Номенклатура'"),
								СтрокаТовары.НомерСтроки);
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
							ЭтотОбъект,
							ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
								"Товары", СтрокаТовары.НомерСтроки, "Номенклатура"),,
							Отказ);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			Если ВидПродукции = Перечисления.ВидыПродукцииИС.МолочнаяПродукция
				И (ИнтеграцияИСМПКлиентСервер.ОперацииНанесенияКодовМаркировки().Найти(Операция)<>Неопределено
					Или (ЗначениеЗаполнено(ОперацияНанесения)
						И (Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ
						Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС
						Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля)))Тогда
				ОбязательныеРеквизиты.Добавить("Товары.ИдентификаторПроисхожденияВЕТИС");
				ОбязательныеРеквизиты.Добавить("Товары.СрокГодности");
			КонецЕсли;
		КонецЕсли;
		
		ИнтеграцияИСМППереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
		
		Если Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков
			Или Операция = Перечисления.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц
			Или Операция = Перечисления.ВидыОперацийИСМП.Агрегация
			Или ИнтеграцияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
			НепроверяемыеРеквизиты.Добавить("Товары.КодТНВЭД");
		КонецЕсли;
	
		Если Операция = Перечисления.ВидыОперацийИСМП.Агрегация Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ШтрихкодыУпаковок.ВыгрузитьКолонку("ШтрихкодУпаковки"));
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
			|ИЗ
			|	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
			|ГДЕ
			|	ШтрихкодыУпаковокТоваров.Ссылка В (&Ссылка)
			|	И ШтрихкодыУпаковокТоваров.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Количество() Тогда
				ТекстСообщения = НСтр("ru = 'Для операции Агрегация требуется указание упаковок.
				                            |Откройте форму проверки и подбора и агрегируйте все коды маркировки.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,
					ЭтотОбъект,
					"Операция",,
					Отказ);
			КонецЕсли;
		КонецЕсли;
		
		ИнтеграцияИСМПСлужебный.ПроверитьЗаполнениеШтрихкодовУпаковок(ЭтотОбъект, Отказ);
		
	КонецЕсли;
	
	НепроверяемыеРеквизиты = ОбщегоНазначенияКлиентСервер.РазностьМассивов(НепроверяемыеРеквизиты, ОбязательныеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ЭтоНовый() Тогда
		ЭтоАгрегация = Операция = Перечисления.ВидыОперацийИСМП.Агрегация;
		ЭтоБылаАгрегация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Операция") = Перечисления.ВидыОперацийИСМП.Агрегация;
		Если ЭтоАгрегация<>ЭтоБылаАгрегация Тогда
			ДополнительныеСвойства.Вставить("ТребуетсяПерезаписьСтатусаПоУмолчанию");
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;
	ШтрихкодыУпаковок.Очистить();
	ИдентификаторПроизводственногоЗаказа = "";
	ИдентификаторПроизводственнойЛинии   = "";
	
	ДанныеОтчетаПроизводственнойЛинии.Очистить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияИСМП.ЗаписатьСтатусДокументаИСМППоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеИСМП.ДанныеЗаполненияМаркировкиТоваровИСМП(Организация);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеИСМП.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТоварыСрокомГодностиВЕТИС()
	
	Если ВидПродукции <> Перечисления.ВидыПродукцииИС.МолочнаяПродукция Тогда
		Возврат;
	КонецЕсли;
	
	Идентификаторы = Товары.Выгрузить(,"ИдентификаторПроисхожденияВЕТИС").ВыгрузитьКолонку("ИдентификаторПроисхожденияВЕТИС");
	ДанныеИдентификаторовПроисхождения = ИнтеграцияИСМПВЕТИС.ДанныеИдентификаторовПроисхождения(Идентификаторы);
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТовары.ИдентификаторПроисхожденияВЕТИС) Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеПоИдентификатору = ДанныеИдентификаторовПроисхождения.Получить(СтрокаТовары.ИдентификаторПроисхожденияВЕТИС);
		Если ДанныеПоИдентификатору = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТовары.СрокГодности = ДанныеПоИдентификатору.СрокГодности;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли