#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет необходимость перепроведения заказа при смене состояния.
// 
// Возвращаемое значение:
//  РежимЗаписиДокумента - Рекомендуемый режим записи документа.
//
Функция РежимЗаписиПриСменеСостояния() Экспорт
	
	Возврат СостоянияЗаказов.РежимЗаписиДокументаПриСменеСостояния(ЭтотОбъект);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	УправлениеНебольшойФирмойЭлектронныеДокументыСервер.ОчиститьДатуНомерВходящегоДокумента(ЭтотОбъект);
	
	СостояниеЗаказа = ЗаполнениеОбъектовУНФ.ПолучитьСостояниеЗаказаПоставщику();
	ВариантЗавершения = Перечисления.ВариантыЗавершенияЗаказа.ПустаяСсылка();
	УдалитьЗакрыт = Ложь;
	Событие = Документы.Событие.ПустаяСсылка();
	РезервироватьДенежныеСредства = Ложь;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказНаПроизводство")] = "ЗаполнитьПоЗаказуНаПроизводство";
	СтратегияЗаполнения[Тип("СправочникСсылка.ДоговорыКонтрагентов")] = "ЗаполнитьПоДоговоруКонтрагента";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплатуПоставщика")] = "ЗаполнитьПоСчетуНаОплатуПоставщика";
	
	ИсключаяСвойства = "СостояниеЗаказа,ВариантЗавершения";
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, ИсключаяСвойства);
	
	ДозаполнитьПоУмолчанию(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Положение даты поступления
	Если ПоложениеДатыПоступления<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
			СтрокаТабличнойЧасти.ДатаПоступления = ДатаПоступления;
		КонецЦикла;
	Иначе
		ДатаПоступления = ЗаполнениеОбъектовУНФ.ЗначениеДляШапки(Запасы, "ДатаПоступления");
	КонецЕсли;
	// Положение заказа покупателя
	Если ПоложениеЗаказаПокупателя<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Для каждого СтрокаТабличнойЧасти Из Запасы Цикл
			СтрокаТабличнойЧасти.ЗаказПокупателя = ЗаказПокупателя;
		КонецЦикла;
		Для каждого СтрокаТабличнойЧасти Из Материалы Цикл
			СтрокаТабличнойЧасти.ЗаказПокупателя = ЗаказПокупателя;
		КонецЦикла;
	Иначе
		Если Запасы.Количество() > 0 Тогда
			ЗаказПокупателя = ЗаполнениеОбъектовУНФ.ЗначениеДляШапки(Запасы, "ЗаказПокупателя");
		ИначеЕсли Материалы.Количество() > 0 Тогда
			ЗаказПокупателя = ЗаполнениеОбъектовУНФ.ЗначениеДляШапки(Материалы, "ЗаказПокупателя");
		Иначе
			ЗаказПокупателя = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент)
	И НЕ Контрагент.ВестиРасчетыПоДоговорам
	И НЕ ЗначениеЗаполнено(Договор) Тогда
		Договор = Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(Контрагент);
	КонецЕсли;
	
	СуммаДокумента = Запасы.Итог("Всего");
	
	// ИнтеграцияГИСМ
	ЕстьКиЗГИСМ = ИнтеграцияГИСМУНФ.ЕстьКиЗГИСМ(Запасы);
	// Конец ИнтеграцияГИСМ
	
	СостоянияЗаказов.ПередЗаписьюЗаказа(ЭтотОбъект);
	
	ПривестиДанныеКСогласованномуСостоянию();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СостоянияЗаказов.ПриЗаписиЗаказа(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.ЗаказПоставщику.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьГрафикДвиженияЗапасов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗаказыПоставщикам(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьПотребностьВЗапасах(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРазмещениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьПлатежныйКалендарь(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьОплатаСчетовИЗаказов(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьДенежныеСредстваВРезерве(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	// Контроль
	Документы.ЗаказПоставщику.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.ЗаказПоставщику.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ, Истина);
	
	// Подчиненная счет-фактура (полученная)
	Если НЕ Отказ Тогда
		
		КонтрольПодчиненнойСчетФактуры();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Контрагент.ВестиРасчетыПоДоговорам Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Договор");
	КонецЕсли;
	
	Если Материалы.Итог("Резерв") > 0 Тогда
		
		Для каждого СтрокаМатериалы Из Материалы Цикл
		
			Если СтрокаМатериалы.Резерв > 0 И НЕ ЗначениеЗаполнено(СтруктурнаяЕдиницаРезерв) Тогда
				
				ТекстСообщения = НСтр("ru = 'Не заполнен склад резерва.'");
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, , , "СтруктурнаяЕдиницаРезерв", Отказ);
				
			КонецЕсли;
		
		КонецЦикла;
	
	КонецЕсли;
	
	Если ЗапланироватьОплату
	   И ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
	   
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Касса");
		
	ИначеЕсли ЗапланироватьОплату
	   И ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
	   
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "БанковскийСчет");
		
	Иначе
		
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Касса");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "БанковскийСчет");
		
	КонецЕсли;
	
	Если ЗапланироватьОплату
	   И ПлатежныйКалендарь.Количество() = 1
	   И НЕ ЗначениеЗаполнено(ПлатежныйКалендарь[0].ДатаОплаты) Тогда
		
		ТекстСообщения = НСтр("ru = 'Поле ""Дата оплаты"" не заполнено.'");
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, , , "ДатаОплаты", Отказ);
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ПлатежныйКалендарь.ДатаОплаты");
		
	КонецЕсли;
	
	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить()
		И ВидОперации = Перечисления.ВидыОперацийЗаказПоставщику.ЗаказНаПереработку Тогда
		
		Для каждого СтрокаМатериалы Из Материалы Цикл
			
			Если СтрокаМатериалы.Резерв > СтрокаМатериалы.Количество Тогда
				
				ТекстСообщения = НСтр("ru = 'В строке №%Номер% табл. части ""Материалы в переработку"" количество позиций к списанию из резерва превышает общее количество материалов.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номер%", СтрокаМатериалы.НомерСтроки);
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"Материалы",
					СтрокаМатериалы.НомерСтроки,
					"Резерв",
					Отказ
				);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Скидка 100%.
	ЕстьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиНаценкиПродажи");
	Если ЕстьРучныеСкидки Тогда
		Для каждого СтрокаЗапасы Из Запасы Цикл
			ТекСумма = СтрокаЗапасы.Цена * СтрокаЗапасы.Количество;
			ТекСуммаРучнойСкидки = ?(ЕстьРучныеСкидки, СтрокаЗапасы.СуммаСкидкиНаценки, 0);
			Если СтрокаЗапасы.ПроцентСкидкиНаценки <> 100 И ТекСуммаРучнойСкидки < ТекСумма
				И НЕ ЗначениеЗаполнено(СтрокаЗапасы.Сумма) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнена колонка ""Сумма"" в строке %Номер% списка ""Товары, работы, услуги"".'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номер%", СтрокаЗапасы.НомерСтроки);
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
					ЭтотОбъект,
					ТекстСообщения,
					"Запасы",
					СтрокаЗапасы.НомерСтроки,
					"Сумма",
					Отказ
				);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДатаПоступления"));
	Иначе
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Запасы.ДатаПоступления"));
	КонецЕсли;
	
	Если Не СостояниеЗаказа = Справочники.СостоянияЗаказовНаПроизводство.Завершен Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ВариантЗавершения"));
	КонецЕсли;
	
	НоменклатураВДокументахСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЗаполненияДокумента

// АПК:299-выкл процедуры вызываются в ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент()

Процедура ЗаполнитьПоЗаказуПокупателя(ДокументСсылкаЗаказПокупателя) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылкаЗаказПокупателя) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылкаЗаказПокупателя)=Тип("Массив") Тогда
		МассивЗаказов = ДокументСсылкаЗаказПокупателя;
	Иначе
		МассивЗаказов = Новый Массив;
		МассивЗаказов.Добавить(ДокументСсылкаЗаказПокупателя);
	КонецЕсли;
	Если МассивЗаказов.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка документов
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивЗаказов, "Организация, Ссылка, ВидОперации, Старт, ДатаОтгрузки, СостояниеЗаказа, Проведен, ОжидаетсяВыборВариантаКП, ПоложениеДатыОтгрузки, ОжидаетсяВыборВариантаКП");
	Для каждого КлючИЗначение Из ЗначенияРеквизитов Цикл
		Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(КлючИЗначение.Значение.Ссылка, КлючИЗначение.Значение);
	КонецЦикла;
	
	// Шапка
	РеквизитыЗаказа = КлючИЗначение.Значение;
	Организация = РеквизитыЗаказа.Организация;
	Если МассивЗаказов.Количество() = 1 Тогда
		ЗаказПокупателя = РеквизитыЗаказа.Ссылка;
		Если РеквизитыЗаказа.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
			ДатаПоступления = РеквизитыЗаказа.Старт;
			ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		Иначе
			ДатаПоступления = РеквизитыЗаказа.ДатаОтгрузки;
			ПоложениеДатыПоступления = РеквизитыЗаказа.ПоложениеДатыОтгрузки;
		КонецЕсли;
	Иначе
		ПоложениеЗаказаПокупателя = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
		ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	КонецЕсли; 
	
	// Заполнение табличной части.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС() +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЗаказыОстатки.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЗаказыОстатки.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ЗаказыОстатки.ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|		ЗапасыОстатки.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))) КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыПокупателейОбороты.ЗаказПокупателя,
	|		ЗаказыПокупателейОбороты.Номенклатура,
	|		ЗаказыПокупателейОбороты.Характеристика,
	|		ЗаказыПокупателейОбороты.КоличествоРасход,
	|		ЗаказыПокупателейОбороты.Номенклатура.ТипНоменклатуры
	|	ИЗ
	|		РегистрНакопления.ЗаказыПокупателей.Обороты(, , Период, ЗаказПокупателя В (&МассивЗаказов)) КАК ЗаказыПокупателейОбороты
	|	ГДЕ
	|		ЗаказыПокупателейОбороты.КоличествоРасход > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РазмещениеОстатки.ЗаказПокупателя,
	|		РазмещениеОстатки.Номенклатура,
	|		РазмещениеОстатки.Характеристика,
	|		РазмещениеОстатки.КоличествоОстаток,
	|		РазмещениеОстатки.Номенклатура.ТипНоменклатуры
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))) КАК РазмещениеОстатки,
	|		Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|	ГДЕ
	|		ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРазмещениеЗаказов.ЗаказПокупателя,
	|		ДвиженияДокументаРазмещениеЗаказов.Номенклатура,
	|		ДвиженияДокументаРазмещениеЗаказов.Характеристика,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРазмещениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|		КОНЕЦ,
	|		ДвиженияДокументаРазмещениеЗаказов.Номенклатура.ТипНоменклатуры
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов КАК ДвиженияДокументаРазмещениеЗаказов,
	|		Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|	ГДЕ
	|		ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|		И ДвиженияДокументаРазмещениеЗаказов.Регистратор = &Ссылка
	|		И ДвиженияДокументаРазмещениеЗаказов.ЗаказПокупателя В(&МассивЗаказов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказПоставщикуЗапасы.ЗаказПокупателя,
	|		ЗаказПоставщикуЗапасы.Номенклатура,
	|		ЗаказПоставщикуЗапасы.Характеристика,
	|		ЗаказПоставщикуЗапасы.Количество * ВЫБОР
	|			КОГДА ЗаказПоставщикуЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА ВЫРАЗИТЬ(ЗаказПоставщикуЗапасы.ЕдиницаИзмерения КАК Справочник.ЕдиницыИзмерения).Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ,
	|		ЗаказПоставщикуЗапасы.Номенклатура.ТипНоменклатуры
	|	ИЗ
	|		Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы,
	|		Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|	ГДЕ
	|		НЕ ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|		И ЗаказПоставщикуЗапасы.ЗаказПокупателя В(&МассивЗаказов)
	|		И ЗаказПоставщикуЗапасы.Ссылка <> &Ссылка
	|		И ЗаказПоставщикуЗапасы.Ссылка.Проведен) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.ЗаказПокупателя,
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЗаказыОстатки.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЗаказыОстатки.Характеристика
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказПокупателяЗапасы.Ссылка КАК ЗаказПокупателя,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.Старт
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ДатаОтгрузки
	|	КОНЕЦ КАК ДатаПоступления,
	|	МИНИМУМ(ЗаказПокупателяЗапасы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЗаказПокупателяЗапасы.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЗаказПокупателяЗапасы.Количество) КАК Количество,
	|	СУММА(ЗаказПокупателяЗапасы.КоличествоСобрано) КАК КоличествоСобрано,
	|	ЗаказПокупателяЗапасы.ЕстьСборка КАК ЕстьСборка,
	|	ЗаказПокупателяЗапасы.Спецификация КАК Спецификация,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	ВТЗаказПокупателяЗапасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ЗаказПокупателяЗапасы.Номенклатура.СпособПополнения <> ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)
	|	И (ЗаказПокупателяЗапасы.Спецификация = ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура.СпособПополнения = ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Переработка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяЗапасы.Ссылка,
	|	ЗаказПокупателяЗапасы.Ссылка.Организация,
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.ЕдиницаИзмерения,
	|	ЗаказПокупателяЗапасы.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|			ТОГДА ЗаказПокупателяЗапасы.Ссылка.Старт
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ДатаОтгрузки
	|	КОНЕЦ,
	|	ЗаказПокупателяЗапасы.Спецификация,
	|	ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры,
	|	ЗаказПокупателяЗапасы.ЕстьСборка,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЗаказПокупателяЗапасы.Характеристика
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПокупателя,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗаказНаряды
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка В(&МассивЗаказов)
	|	И ЗаказПокупателя.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказПокупателяМатериалы.Ссылка КАК ЗаказПокупателя,
	|	ЗаказПокупателяМатериалы.Ссылка.Организация КАК Организация,
	|	ЗаказПокупателяМатериалы.Ссылка.Старт КАК ДатаПоступления,
	|	МИНИМУМ(ЗаказПокупателяМатериалы.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяМатериалы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяМатериалы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЗаказПокупателяМатериалы.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ЗаказПокупателяМатериалы.Партия КАК Партия,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяМатериалы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаказПокупателяМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ВТСтавкиНоменклатура.СтавкаНДС ЕСТЬ NULL
	|			ТОГДА ВТСтавкиОрганизация.СтавкаНДС
	|		ИНАЧЕ ВТСтавкиНоменклатура.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(ЗаказПокупателяМатериалы.Количество) КАК Количество,
	|	ЗаказПокупателяМатериалы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	Документ.ЗаказПокупателя.Материалы КАК ЗаказПокупателяМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНоменклатура
	|		ПО (ВТСтавкиНоменклатура.ВидСтавкиНДС = ЗаказПокупателяМатериалы.Номенклатура.ВидСтавкиНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиОрганизация
	|		ПО (ВТСтавкиОрганизация.ВидСтавкиНДС = ЗаказПокупателяМатериалы.Ссылка.Организация.ВидСтавкиНДСПоУмолчанию)
	|ГДЕ
	|	ЗаказПокупателяМатериалы.Ссылка В
	|			(ВЫБРАТЬ
	|				ЗаказНаряды.Ссылка
	|			ИЗ
	|				ЗаказНаряды)
	|	И ЗаказПокупателяМатериалы.Номенклатура.СпособПополнения <> ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяМатериалы.Ссылка,
	|	ЗаказПокупателяМатериалы.Номенклатура,
	|	ЗаказПокупателяМатериалы.Партия,
	|	ЗаказПокупателяМатериалы.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ВТСтавкиНоменклатура.СтавкаНДС ЕСТЬ NULL
	|			ТОГДА ВТСтавкиОрганизация.СтавкаНДС
	|		ИНАЧЕ ВТСтавкиНоменклатура.СтавкаНДС
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяМатериалы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ,
	|	ЗаказПокупателяМатериалы.Ссылка.Старт,
	|	ЗаказПокупателяМатериалы.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА ЗаказПокупателяМатериалы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ЗаказПокупателяМатериалы.Характеристика
	|	КОНЕЦ,
	|	ЗаказПокупателяМатериалы.Номенклатура.ТипНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПокупателя,
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(МассивЗаказов, Запрос.МенеджерВременныхТаблиц, Ложь);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[МассивРезультатов.Количество() - 4].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("ЗаказПокупателя, Номенклатура, Характеристика");
	
	Запасы.Очистить();
	СтруктураДляПоиска = Новый Структура;
	
	Выборка = МассивРезультатов[МассивРезультатов.Количество() - 3].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСборкуЗаказов") И Выборка.ЕстьСборка Тогда
			ВыборкаКоличество = Выборка.Количество - Выборка.КоличествоСобрано;
			Если ВыборкаКоличество < 0 Тогда
				ВыборкаКоличество = 0;
			КонецЕсли;
			Если ВыборкаКоличество = 0 Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			ВыборкаКоличество = Выборка.Количество;
		КонецЕсли;
		
		СтруктураДляПоиска.Очистить();
		СтруктураДляПоиска.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		
		МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
		КоличествоВБазовой = ВыборкаКоличество * Выборка.Коэффициент;
		Если МассивСтрокОстатков.Количество() = 0 Тогда
			ДоступноеКоличество = ВыборкаКоличество;
		ИначеЕсли МассивСтрокОстатков[0].КоличествоОстаток > КоличествоВБазовой Тогда
			ДоступноеКоличество = 0;
			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоВБазовой;
		Иначе
			ДоступноеКоличество = ВыборкаКоличество - МассивСтрокОстатков[0].КоличествоОстаток / Выборка.Коэффициент;
			ТаблицаОстатков.Удалить(МассивСтрокОстатков[0]);
		КонецЕсли;
		Если ДоступноеКоличество <= 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Количество = ДоступноеКоличество;
		
	КонецЦикла;
	
	// Заказ-наряды
	Выборка = МассивРезультатов[МассивРезультатов.Количество() - 1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДляПоиска.Очистить();
		СтруктураДляПоиска.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		
		МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
		КоличествоВБазовой = Выборка.Количество * Выборка.Коэффициент;
		Если МассивСтрокОстатков.Количество() = 0 Тогда
			ДоступноеКоличество = Выборка.Количество;
		ИначеЕсли МассивСтрокОстатков[0].КоличествоОстаток > КоличествоВБазовой Тогда
			ДоступноеКоличество = 0;
			МассивСтрокОстатков[0].КоличествоОстаток = МассивСтрокОстатков[0].КоличествоОстаток - КоличествоВБазовой;
		Иначе
			ДоступноеКоличество = Выборка.Количество - МассивСтрокОстатков[0].КоличествоОстаток / Выборка.Коэффициент;
			ТаблицаОстатков.Удалить(МассивСтрокОстатков[0]);
		КонецЕсли;
		Если ДоступноеКоличество <= 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Количество = ДоступноеКоличество;
		
	КонецЦикла;
	
	Если ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		
		ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		Если Запасы.Количество() > 0 Тогда
			ДатаПоступления = Запасы[0].ДатаПоступления;
			Для каждого СтрокаЗапасы Из Запасы Цикл
				Если ДатаПоступления <> СтрокаЗапасы.ДатаПоступления Тогда
					ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
					Прервать;
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли;
		
	КонецЕсли; 
		
КонецПроцедуры

Процедура ЗаполнитьПоКалькуляции(ДокументСсылкаЗаказПокупателя) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылкаЗаказПокупателя) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылкаЗаказПокупателя)=Тип("Массив") Тогда
		МассивЗаказов = ДокументСсылкаЗаказПокупателя;
	Иначе
		МассивЗаказов = Новый Массив;
		МассивЗаказов.Добавить(ДокументСсылкаЗаказПокупателя);
	КонецЕсли;
	Если МассивЗаказов.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка документов
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивЗаказов, "Организация, Ссылка, ВидОперации, Старт, ДатаОтгрузки, СостояниеЗаказа, Проведен, ОжидаетсяВыборВариантаКП, ПоложениеДатыОтгрузки, КалькуляцияРассчитана, ОжидаетсяВыборВариантаКП");
	Для каждого КлючИЗначение Из ЗначенияРеквизитов Цикл
		РеквизитыЗаказа = КлючИЗначение.Значение;
		Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(РеквизитыЗаказа.Ссылка, РеквизитыЗаказа);
		Если НЕ РеквизитыЗаказа.КалькуляцияРассчитана Тогда
			ТекстОшибки = НСтр("ru='По заказу %Документ% калькуляция не рассчитана.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыЗаказа.Ссылка);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЦикла;
	
	// Шапка
	Организация = РеквизитыЗаказа.Организация;
	Если МассивЗаказов.Количество()=1 Тогда
		ЗаказПокупателя = РеквизитыЗаказа.Ссылка;
		Если РеквизитыЗаказа.ВидОперации=Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
			ДатаПоступления = РеквизитыЗаказа.Старт;
		Иначе
			ДатаПоступления = РеквизитыЗаказа.ДатаОтгрузки;
			ПоложениеДатыПоступления = РеквизитыЗаказа.ПоложениеДатыОтгрузки;
		КонецЕсли;
	Иначе
		ПоложениеЗаказаПокупателя = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
		ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	КонецЕсли; 
	
	// Получение данных
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = ТекстЗапросаЗаполнитьПоКалькуляции();
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[МассивРезультатов.Количество()-2].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("ЗаказПокупателя,Номенклатура,Характеристика");
	
	// Заполнение табличной части.
	Запасы.Очистить();
	
	Выборка = МассивРезультатов[МассивРезультатов.Количество()-1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		
		МассивСтрокОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
		Если МассивСтрокОстатков.Количество()=0 Тогда
			СтрокаОстатков = Новый Структура("КоличествоРазмещено", 0);
		Иначе
			СтрокаОстатков = МассивСтрокОстатков[0];
		КонецЕсли; 
		Если СтрокаОстатков.КоличествоРазмещено>0 И СтрокаОстатков.КоличествоРазмещено>=Выборка.Количество Тогда
			СтрокаОстатков.КоличествоРазмещено = СтрокаОстатков.КоличествоРазмещено - Выборка.Количество;
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Количество = (Выборка.Количество - СтрокаОстатков.КоличествоРазмещено) / Выборка.Коэффициент;
		НоваяСтрока.ДатаПоступления = Выборка.ЗапасыДатаПоступления;
		
		Если ТипЗнч(СтрокаОстатков)<>Тип("Структура") Тогда
			ТаблицаОстатков.Удалить(СтрокаОстатков);
		КонецЕсли; 
		
	КонецЦикла;
	
	// Дата поступления
	Если ПоложениеДатыПоступления=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ТаблицаДат = Запасы.Выгрузить();
		ТаблицаДат.Свернуть("ДатаПоступления");
		Если ТаблицаДат.Количество()=1 Тогда
			ПоложениеДатыПоступления = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
			ДатаПоступления = ТаблицаДат[0].ДатаПоступления;
		КонецЕсли; 
	КонецЕсли; 
		
КонецПроцедуры

Функция ТекстЗапросаЗаполнитьПоКалькуляции()
	
	ТекстЗапроса = 
	Справочники.СтавкиНДС.ПолучитьТекстЗапросаСозданияВТСтавкиНДС() +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК КоличествоРазмещено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)
	|					И Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))) КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РазмещениеОстатки.ЗаказПокупателя,
	|		РазмещениеОстатки.Номенклатура,
	|		РазмещениеОстатки.Характеристика,
	|		РазмещениеОстатки.КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов.Остатки(
	|				,
	|				ЗаказПокупателя В (&МассивЗаказов)) КАК РазмещениеОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаРазмещениеЗаказов.ЗаказПокупателя,
	|		ДвиженияДокументаРазмещениеЗаказов.Номенклатура,
	|		ДвиженияДокументаРазмещениеЗаказов.Характеристика,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаРазмещениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаРазмещениеЗаказов.Количество, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РазмещениеЗаказов КАК ДвиженияДокументаРазмещениеЗаказов
	|	ГДЕ
	|		ДвиженияДокументаРазмещениеЗаказов.Регистратор = &Ссылка
	|		И ДвиженияДокументаРазмещениеЗаказов.ЗаказПокупателя В(&МассивЗаказов)) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.ЗаказПокупателя,
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказПокупателяКалькуляция.Ссылка КАК ЗаказПокупателя,
	|	ЗаказПокупателяКалькуляция.Ссылка.Организация КАК Организация,
	|	ЗаказПокупателяКалькуляция.Ссылка.ДатаОтгрузки КАК ДатаПоступления,
	|	МИНИМУМ(ЗаказПокупателяКалькуляция.НомерСтроки) КАК НомерСтроки,
	|	ЗаказПокупателяКалькуляция.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяКалькуляция.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяКалькуляция.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяКалькуляция.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаказПокупателяКалькуляция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказПокупателяКалькуляция.Ссылка.ДатаОтгрузки КАК ЗапасыДатаПоступления,
	|	ВЫБОР
	|		КОГДА ВТСтавкиНоменклатура.СтавкаНДС ЕСТЬ NULL
	|			ТОГДА ВТСтавкиОрганизация.СтавкаНДС
	|		ИНАЧЕ ВТСтавкиНоменклатура.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(ЗаказПокупателяКалькуляция.Количество) КАК Количество,
	|	ЗаказПокупателяКалькуляция.Спецификация КАК Спецификация
	|ИЗ
	|	Документ.ЗаказПокупателя.Калькуляция КАК ЗаказПокупателяКалькуляция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиНоменклатура
	|		ПО (ВТСтавкиНоменклатура.ВидСтавкиНДС = ЗаказПокупателяКалькуляция.Номенклатура.ВидСтавкиНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНДС КАК ВТСтавкиОрганизация
	|		ПО (ВТСтавкиОрганизация.ВидСтавкиНДС = ЗаказПокупателяКалькуляция.Ссылка.Организация.ВидСтавкиНДСПоУмолчанию)
	|ГДЕ
	|	ЗаказПокупателяКалькуляция.Ссылка В(&МассивЗаказов)
	|	И ЗаказПокупателяКалькуляция.Ссылка.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку))
	|	И ЗаказПокупателяКалькуляция.НомерВариантаКП = ЗаказПокупателяКалькуляция.Ссылка.ОсновнойВариантКП
	|	И ЗаказПокупателяКалькуляция.Спецификация = ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|	И ЗаказПокупателяКалькуляция.Номенклатура ССЫЛКА Справочник.Номенклатура
	|	И ЗаказПокупателяКалькуляция.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И (ЗаказПокупателяКалькуляция.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|			ИЛИ ЗаказПокупателяКалькуляция.Номенклатура.СпособПополнения <> ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПокупателяКалькуляция.Ссылка,
	|	ЗаказПокупателяКалькуляция.Ссылка.Организация,
	|	ЗаказПокупателяКалькуляция.Ссылка.ДатаОтгрузки,
	|	ЗаказПокупателяКалькуляция.Номенклатура,
	|	ЗаказПокупателяКалькуляция.Характеристика,
	|	ЗаказПокупателяКалькуляция.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ВТСтавкиНоменклатура.СтавкаНДС ЕСТЬ NULL
	|			ТОГДА ВТСтавкиОрганизация.СтавкаНДС
	|		ИНАЧЕ ВТСтавкиНоменклатура.СтавкаНДС
	|	КОНЕЦ,
	|	ЗаказПокупателяКалькуляция.Спецификация,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяКалькуляция.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяКалькуляция.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ,
	|	ЗаказПокупателяКалькуляция.Ссылка.ДатаОтгрузки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПокупателя,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьПоЗаказуНаПроизводство(ДокументСсылкаЗаказНаПроизводство) Экспорт
	
	ОснованиеВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылкаЗаказНаПроизводство, "ВидОперации");
	
	Если ОснованиеВидОперации <> Перечисления.ВидыОперацийЗаказНаПроизводство.Сборка
		И ОснованиеВидОперации <> Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка
		Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаПроизводство.Ссылка КАК Заказ,
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ФункциональнаяОпцияРезервированиеЗапасов.Значение
	|			ТОГДА ЗаказНаПроизводство.ЗаказПокупателя
	|		ИНАЧЕ ЗаказНаПроизводство.ДокументОснование
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ЗаказНаПроизводство.ДокументОснование КАК ДокументОснование,
	|	ЗаказНаПроизводство.Старт КАК ДатаПоступления,
	|	ЗаказНаПроизводство.ПоложениеЗаказаПокупателя КАК ПоложениеЗаказаПокупателя,
	|	ЗаказНаПроизводство.Запасы.(
	|		Ссылка.Старт КАК ДатаПоступления,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ЗаказНаПроизводство.Запасы.Количество - ЗаказНаПроизводство.Запасы.Резерв КАК Количество,
	|		Номенклатура.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|		ЗаказПокупателя КАК ЗаказПокупателя
	|	) КАК Запасы
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка = &ДокументОснование
	|	И ЗаказНаПроизводство.Запасы.Количество - ЗаказНаПроизводство.Запасы.Резерв > 0
	|	И ЗаказНаПроизводство.Запасы.Номенклатура.СпособПополнения <> ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)
	|	И (ЗаказНаПроизводство.Запасы.Спецификация = ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|			ИЛИ ЗаказНаПроизводство.Запасы.Номенклатура.СпособПополнения = ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Переработка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводство.Запасы.НомерСтроки");
	
	Если ОснованиеВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка Тогда
		Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"ЗаказНаПроизводство.Запасы.",
		"ЗаказНаПроизводство.Продукция.");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказНаПроизводство);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
	
	СтавкаНДС = Неопределено;
	СтавкаНДСИзНоменклатуры = Ложь;
	СоответствиеСтавок = Справочники.СтавкиНДС.СоответствиеСтавокНДС();
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
		Иначе
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
		КонецЕсли;
	Иначе
		СтавкаНДСИзНоменклатуры = Истина;
		СтавкаНДС = СоответствиеСтавок.Получить(Организация.ВидСтавкиНДСПоУмолчанию);
	КонецЕсли;
	
	Запасы.Загрузить(ВыборкаИзРезультатаЗапроса.Запасы.Выгрузить());
	
	Для каждого СтрокаЗапасы Из Запасы Цикл
		Если СтавкаНДСИзНоменклатуры Тогда
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.СтавкаНДС) И ЗначениеЗаполнено(СтрокаЗапасы.Номенклатура) Тогда
				СтрокаЗапасы.СтавкаНДС = СоответствиеСтавок.Получить(СтрокаЗапасы.Номенклатура.ВидСтавкиНДС);
			КонецЕсли;
		Иначе
			СтрокаЗапасы.СтавкаНДС = СтавкаНДС;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоСчетуНаОплатуПоставщика(ДокументСсылкаСчетНаОплатуПоставщика) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетНаОплатуПоставщика.Ссылка КАК ДокументОснование,
	|	СчетНаОплатуПоставщика.Организация КАК Организация,
	|	СчетНаОплатуПоставщика.Контрагент КАК Контрагент,
	|	СчетНаОплатуПоставщика.Договор КАК Договор,
	|	СчетНаОплатуПоставщика.ВалютаДокумента КАК ВалютаДокумента,
	|	СчетНаОплатуПоставщика.Кратность КАК Кратность,
	|	СчетНаОплатуПоставщика.Курс КАК Курс,
	|	СчетНаОплатуПоставщика.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СчетНаОплатуПоставщика.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	СчетНаОплатуПоставщика.ВидЦенКонтрагента КАК ВидЦенКонтрагента,
	|	СчетНаОплатуПоставщика.Касса КАК Касса,
	|	СчетНаОплатуПоставщика.СуммаДокумента КАК СуммаДокумента,
	|	СчетНаОплатуПоставщика.Запасы.(
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		СуммаСкидкиНаценки КАК СуммаСкидкиНаценки,
	|		Сумма КАК Сумма,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		Всего КАК Всего,
	|		Содержание КАК Содержание
	|	) КАК Запасы
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика,
	|	Константа.ФункциональнаяОпцияРезервированиеЗапасов КАК ФункциональнаяОпцияРезервированиеЗапасов
	|ГДЕ
	|	СчетНаОплатуПоставщика.Ссылка = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетНаОплатуПоставщика.Запасы.НомерСтроки");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСчетНаОплатуПоставщика);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаИзРезультатаЗапроса);
	
	СтавкаНДС = Неопределено;
	СтавкаНДСИзНоменклатуры = Ложь;
	СоответствиеСтавок = Справочники.СтавкиНДС.СоответствиеСтавокНДС();
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НеОблагаетсяНДС Тогда
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС();
		Иначе
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
		КонецЕсли;
	Иначе
		СтавкаНДСИзНоменклатуры = Истина;
		СтавкаНДС = СоответствиеСтавок.Получить(Организация.ВидСтавкиНДСПоУмолчанию);
	КонецЕсли;
	
	Запасы.Загрузить(ВыборкаИзРезультатаЗапроса.Запасы.Выгрузить());
	
	Для Каждого СтрокаЗапасы Из Запасы Цикл
		Если СтавкаНДСИзНоменклатуры Тогда
			Если Не ЗначениеЗаполнено(СтрокаЗапасы.СтавкаНДС) И ЗначениеЗаполнено(СтрокаЗапасы.Номенклатура) Тогда
				СтрокаЗапасы.СтавкаНДС = СоответствиеСтавок.Получить(СтрокаЗапасы.НоменклатураВидСтавкиНДС);
			КонецЕсли;
		Иначе
			СтрокаЗапасы.СтавкаНДС = СтавкаНДС;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКолонкуРезервПоОстаткам() Экспорт
	
	Материалы.ЗагрузитьКолонку(Новый Массив(Материалы.Количество()), "Резерв");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Партия
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы";
	
	Запрос.УстановитьПараметр("ТаблицаЗапасы", Материалы.Выгрузить());
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапасыОстатки.Организация КАК Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ЗапасыОстатки.Характеристика КАК Характеристика,
	|	ЗапасыОстатки.Партия КАК Партия,
	|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыОстатки.Организация КАК Организация,
	|		ЗапасыОстатки.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗапасыОстатки.СчетУчета КАК СчетУчета,
	|		ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|		ЗапасыОстатки.Характеристика КАК Характеристика,
	|		ЗапасыОстатки.Партия КАК Партия,
	|		ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.Запасы.Остатки(
	|				,
	|				(Организация, СтруктурнаяЕдиница, СчетУчета, Номенклатура, Характеристика, Партия, ЗаказПокупателя) В
	|					(ВЫБРАТЬ
	|						&Организация,
	|						&СтруктурнаяЕдиница,
	|						ТаблицаЗапасы.Номенклатура.СчетУчетаЗапасов,
	|						ТаблицаЗапасы.Номенклатура,
	|						ТаблицаЗапасы.Характеристика,
	|						ТаблицаЗапасы.Партия,
	|						ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК ЗаказПокупателя
	|					ИЗ
	|						ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы)) КАК ЗапасыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаЗапасы.Организация,
	|		ДвиженияДокументаЗапасы.СтруктурнаяЕдиница,
	|		ДвиженияДокументаЗапасы.СчетУчета,
	|		ДвиженияДокументаЗапасы.Номенклатура,
	|		ДвиженияДокументаЗапасы.Характеристика,
	|		ДвиженияДокументаЗапасы.Партия,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|			ИНАЧЕ -ЕСТЬNULL(ДвиженияДокументаЗапасы.Количество, 0)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.Запасы КАК ДвиженияДокументаЗапасы
	|	ГДЕ
	|		ДвиженияДокументаЗапасы.Регистратор = &Ссылка
	|		И ДвиженияДокументаЗапасы.Период <= &Период
	|		И ДвиженияДокументаЗапасы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)) КАК ЗапасыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.Организация,
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.СчетУчета,
	|	ЗапасыОстатки.Номенклатура,
	|	ЗапасыОстатки.Характеристика,
	|	ЗапасыОстатки.Партия";
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(Организация));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиницаРезерв);
	
	ТаблицаПериодов = Новый ТаблицаЗначений();
	ТаблицаПериодов.Колонки.Добавить("ДатаОтгрузки");
	ТаблицаПериодов.Колонки.Добавить("СтрокаЗапасы");
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураДляПоиска = Новый Структура;
		СтруктураДляПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураДляПоиска.Вставить("Характеристика", Выборка.Характеристика);
		
		МассивСтрокЗапасы = Материалы.НайтиСтроки(СтруктураДляПоиска);
		Для каждого СтрокаЗапасы Из МассивСтрокЗапасы Цикл
			НоваяСтрока = ТаблицаПериодов.Добавить();
			НоваяСтрока.ДатаОтгрузки = СтрокаЗапасы.ДатаОтгрузки;
			НоваяСтрока.СтрокаЗапасы = СтрокаЗапасы;
		КонецЦикла;
		
		ВсегоОстаток = Выборка.КоличествоОстаток;
		ТаблицаПериодов.Сортировать("ДатаОтгрузки");
		Для каждого СтрокаТаблицыПериодов Из ТаблицаПериодов Цикл
			СтрокаЗапасы = СтрокаТаблицыПериодов.СтрокаЗапасы;
			ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток / СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент);
			Если СтрокаЗапасы.Количество >= ВсегоОстаток Тогда
				СтрокаЗапасы.Резерв = ВсегоОстаток;
				ВсегоОстаток = 0;
			Иначе
				СтрокаЗапасы.Резерв = СтрокаЗапасы.Количество;
				ВсегоОстаток = ВсегоОстаток - СтрокаЗапасы.Количество;
				ВсегоОстаток = ?(ТипЗнч(СтрокаЗапасы.ЕдиницаИзмерения) = ТИП("СправочникСсылка.КлассификаторЕдиницИзмерения"), ВсегоОстаток, ВсегоОстаток * СтрокаЗапасы.ЕдиницаИзмерения.Коэффициент);
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаПериодов.Очистить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДозаполнитьПоУмолчанию(ДанныеЗаполнения)
	
	Если Не ЗначениеЗаполнено(СостояниеЗаказа) Тогда
		СостояниеЗаказа = ЗаполнениеОбъектовУНФ.ПолучитьСостояниеЗаказаПоставщику();
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПроизводство")
		И ДанныеЗаполнения.ПоложениеЗаказаПокупателя = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
		ЗаказПокупателя = ДанныеЗаполнения.ЗаказПокупателя;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов, ТаблицаУзлы = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПродукция.Количество КАК Количество,
	|	ТаблицаПродукция.Коэффициент КАК Коэффициент,
	|	ТаблицаПродукция.Спецификация КАК Спецификация,
	|	ТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ВременнаяТаблицаПродукция
	|ИЗ
	|	&ТаблицаПродукция КАК ТаблицаПродукция
	|ГДЕ
	|	ТаблицаПродукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)";
	
	Если ТаблицаУзлы = Неопределено Тогда
		Материалы.Очистить();
		ТаблицаПродукция = Запасы.Выгрузить();
		Массив = Новый Массив();
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,Новый КвалификаторыЧисла(10,3));
		ТаблицаПродукция.Колонки.Добавить("Коэффициент", ОписаниеТиповЧ);
		Для каждого СтрокаПродукция Из ТаблицаПродукция Цикл
			Если ЗначениеЗаполнено(СтрокаПродукция.ЕдиницаИзмерения)
				И ТипЗнч(СтрокаПродукция.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
				СтрокаПродукция.Коэффициент = СтрокаПродукция.ЕдиницаИзмерения.Коэффициент;
			Иначе
				СтрокаПродукция.Коэффициент = 1;
			КонецЕсли;
		КонецЦикла;
		ТаблицаУзлы = ТаблицаПродукция.СкопироватьКолонки("НомерСтроки,Количество,Коэффициент,Спецификация,ЗаказПокупателя");
		Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаПродукция);
	Иначе
		Запрос.УстановитьПараметр("ТаблицаПродукция", ТаблицаУзлы);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(ТаблицаПродукция.НомерСтроки) КАК НомерСтрокиПродукции,
	|	ТаблицаПродукция.Спецификация КАК СпецификацияПродукции,
	|	ТаблицаПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	МИНИМУМ(ТаблицаМатериалы.НомерСтроки) КАК НомерСтрокиСостава,
	|	ТаблицаМатериалы.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ИспользоватьХарактеристики.Значение
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СУММА(ТаблицаМатериалы.Количество / ТаблицаМатериалы.КоличествоПродукции * ТаблицаПродукция.Коэффициент * ТаблицаПродукция.Количество) КАК Количество,
	|	ТаблицаМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|				И ТИПЗНАЧЕНИЯ(ТаблицаМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ТаблицаМатериалы.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаМатериалы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Коэффициент,
	|	ТаблицаМатериалы.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаМатериалы.Спецификация КАК Спецификация
	|ИЗ
	|	ВременнаяТаблицаПродукция КАК ТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Состав КАК ТаблицаМатериалы
	|		ПО ТаблицаПродукция.Спецификация = ТаблицаМатериалы.Ссылка,
	|	Константа.ФункциональнаяОпцияИспользоватьХарактеристики КАК ИспользоватьХарактеристики
	|ГДЕ
	|	ТаблицаМатериалы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПродукция.Спецификация,
	|	ТаблицаПродукция.ЗаказПокупателя,
	|	ТаблицаМатериалы.ТипСтрокиСостава,
	|	ТаблицаМатериалы.Номенклатура,
	|	ТаблицаМатериалы.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ТипСтрокиСостава = ЗНАЧЕНИЕ(Перечисление.ТипыСтрокСоставаСпецификации.Узел)
	|				И ТИПЗНАЧЕНИЯ(ТаблицаМатериалы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ТаблицаМатериалы.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаМатериалы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ТаблицаМатериалы.ДоляСтоимости,
	|	ТаблицаМатериалы.Спецификация,
	|	ВЫБОР
	|		КОГДА ИспользоватьХарактеристики.Значение
	|			ТОГДА ТаблицаМатериалы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаМатериалы.Номенклатура.СтранаПроисхождения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиПродукции,
	|	НомерСтрокиСостава";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			ТаблицаУзлы.Очистить();
			Если НЕ СтекСпецификацийУзлов.Найти(Выборка.Спецификация) = Неопределено Тогда
				ТекстСообщения = НСтр("ru = 'При попытке заполнить табличную часть Материалы по спецификации,
									|обнаружено рекурсивное вхождение элемента'")+" "+Выборка.Номенклатура+" "+НСтр("ru = 'в спецификации'")+" "+Выборка.СпецификацияПродукции+"
									|Операция не выполнена.";
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			СтекСпецификацийУзлов.Добавить(Выборка.Спецификация);
			НоваяСтрока = ТаблицаУзлы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЗаполнитьТабличнуюЧастьПоСпецификации(СтекСпецификацийУзлов, ТаблицаУзлы);
		Иначе
			НоваяСтрока = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ДатаОтгрузки = Дата;
		КонецЕсли;
	КонецЦикла;
	
	СтекСпецификацийУзлов.Очистить();
	Материалы.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения, Спецификация, ДатаОтгрузки, ЗаказПокупателя", "Количество, Резерв");
	
КонецПроцедуры

Процедура ЗаполнитьПоДоговоруКонтрагента(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
	|	ДоговорыКонтрагентов.Организация КАК Организация,
	|	ДоговорыКонтрагентов.ВалютаРасчетов КАК ВалютаДокумента,
	|	ДоговорыКонтрагентов.ВидЦенКонтрагента КАК ВидЦенКонтрагента,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.ВидЦенКонтрагента.ЦенаВключаетНДС, ЛОЖЬ) КАК НДСВключатьВСтоимость
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	
	ВыборкаШапка.Следующий();
	
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	Если ВалютаДокумента <> Константы.НациональнаяВалюта.Получить() Тогда
		СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", Договор.ВалютаРасчетов));
		Курс = СтруктураПоВалюте.Курс;
		Кратность = СтруктураПоВалюте.Кратность;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("МассивЗаказовПокупателей") Тогда
		ЗаполнитьПоЗаказуПокупателя(ДанныеЗаполнения.МассивЗаказовПокупателей);
	ИначеЕсли ДанныеЗаполнения.Свойство("ПоКалькуляции") Тогда
		ЗаполнитьПоКалькуляции(ДанныеЗаполнения.ЗаказПокупателя);
	КонецЕсли;
	
КонецПроцедуры

// АПК:299-вкл

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура КонтрольПодчиненнойСчетФактуры()
	
	СтруктураСчетаФактуры = УправлениеНебольшойФирмойСервер.ПолучитьПодчиненныйСчетФактуру(Ссылка, Истина);
	Если СтруктураСчетаФактуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СчетФактура	 = СтруктураСчетаФактуры.Ссылка;
	Если Не СчетФактура.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'В связи с отсутствием движений у документа %ПредставлениеТекущегоДокумента% распроводится %ПредставлениеСчетФактуры%.'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТекущегоДокумента%", """Заказ поставщику № " + Номер + " от " + Формат(Дата, "ДФ=dd.MM.yyyy") + """");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСчетФактуры%", """Счет фактура (полученная) № " + СтруктураСчетаФактуры.Номер + " от " + СтруктураСчетаФактуры.Дата + """");
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
	СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	СчетФактураОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
КонецПроцедуры

Процедура ПривестиДанныеКСогласованномуСостоянию()
	
	Если СостояниеЗаказа <> Справочники.СостоянияЗаказовПоставщикам.Завершен Тогда
		ВариантЗавершения = Перечисления.ВариантыЗавершенияЗаказа.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли