#Область СлужебныеПроцедурыИФункции

Функция newDocPOST(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентноеЗадание = РегламентноеЗаданиеПоНаименованию("ПроверкаНовыхЭлектронныхДокументов");
	Если РегламентноеЗадание = Неопределено ИЛИ НЕ РегламентноеЗадание.Использование Тогда
		Ответ = Новый HTTPСервисОтвет(500);
		Возврат Ответ;
	КонецЕсли;

	Тело = Запрос.ПолучитьТелоКакСтроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);
	МассивИдентификаторовОрганизаций = ПрочитатьJSON(ЧтениеJSON);
	
	ОбменСКонтрагентамиСлужебный.ПроверитьНаличиеНовыхДокументовВСервисеЭДО(МассивИдентификаторовОрганизаций);
	
	Если СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		СокращенныйМассив = ИдентификаторыОрганизацийСНовымиДокументамиВСервисеЭДО(МассивИдентификаторовОрганизаций);
	
		Если СокращенныйМассив.Количество() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь КАК Пользователь,
			|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
			|ИЗ
			|	РегистрСведений.СертификатыУчетныхЗаписейЭДО КАК СертификатыУчетныхЗаписейЭДО
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования КАК СертификатыКлючейЭлектроннойПодписиИШифрования
			|		ПО СертификатыУчетныхЗаписейЭДО.Сертификат = СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка
			|ГДЕ
			|	СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО В(&МассивИдентификаторов)";
			
			Запрос.УстановитьПараметр("МассивИдентификаторов", СокращенныйМассив);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			МассивИдентификаторовПользователей = Новый Массив;
			
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.Пользователь)
					ИЛИ Выборка.Пользователь = Пользователи.СсылкаНеуказанногоПользователя() Тогда
					ОповеститьВсехПользователей();
					МассивИдентификаторовПользователей.Очистить();
					Прервать;
				КонецЕсли;
				МассивИдентификаторовПользователей.Добавить(Выборка.ИдентификаторПользователяИБ);
			КонецЦикла;
			
			Если МассивИдентификаторовПользователей.Количество() Тогда
				ДобавитьСообщениеВСистемуВзаимодействия(МассивИдентификаторовПользователей);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Процедура ОповеститьВсехПользователей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	Пользователи.ИдентификаторПользователяИБ <> &EDIEvents
	               |	И Пользователи.Ссылка <> &ПользовательНеУказан";
	Запрос.УстановитьПараметр("EDIEvents", Новый УникальныйИдентификатор("ecabae76-1a0d-4a5d-b8d3-065cd57c0459"));
	Запрос.УстановитьПараметр("ПользовательНеУказан", Пользователи.СсылкаНеуказанногоПользователя());
	
	ТаблицаВыборки = Запрос.Выполнить().Выгрузить();
	ДобавитьСообщениеВСистемуВзаимодействия(ТаблицаВыборки.ВыгрузитьКолонку("ИдентификаторПользователяИБ"));
	
КонецПроцедуры

Процедура ДобавитьСообщениеВСистемуВзаимодействия(МассивИдентификаторовПользователей)
	
	Для каждого ЭлементКоллекции Из МассивИдентификаторовПользователей Цикл
		
		ТекстСообщения = НСтр("ru = 'Есть новые документы в сервисе.
							|Запустите синхронизацию для их получения'");
		Действия = Новый СписокЗначений;
		Действия.Добавить("СинхронизироватьЭДО", "Синхронизировать");
		ОбменСКонтрагентамиСлужебный.ОтправитьСообщениеСистемыВзаимодействия(ЭлементКоллекции, ТекстСообщения, Действия);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторыОрганизацийСНовымиДокументамиВСервисеЭДО(МассивИдентификаторов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО КАК ИдентификаторЭДО
	               |ИЗ
	               |	РегистрСведений.НаличиеНовыхЭлектронныхДокументов КАК НаличиеНовыхЭлектронныхДокументов
	               |ГДЕ
	               |	НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО В(&МассивИдентификаторовЭДО)";
	Запрос.УстановитьПараметр("МассивИдентификаторовЭДО", МассивИдентификаторов);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИдентификаторЭДО");
	
КонецФункции

Функция РегламентноеЗаданиеПоНаименованию(ИмяЗадания)
	
	Отбор = Новый Структура("Метаданные", ИмяЗадания);
	Найденные = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Задание = ?(Найденные.Количество() = 0, Неопределено, Найденные[0]);
	
	Возврат Задание;
	
КонецФункции

#КонецОбласти

