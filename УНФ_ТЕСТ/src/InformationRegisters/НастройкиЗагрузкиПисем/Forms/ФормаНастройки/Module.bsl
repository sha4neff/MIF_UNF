
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("УчетнаяЗапись", УчетнаяЗапись);
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ВызватьИсключение НСтр("ru = 'Не указана учетная запись для настройки почтовых ящиков.'");
	КонецЕсли;
	
	Если Не НастройкиСуществуют(УчетнаяЗапись) Тогда
		ЭлектроннаяПочтаУНФ.ОбновитьПочтовыеПапки(УчетнаяЗапись);
	КонецЕсли;
	
	ЗаполнитьТаблицуНастроек();
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиЗагрузкиПисем) Тогда
		Элементы.ФормаОбновитьПочтовыеПапки.Доступность = Ложь;
		Элементы.НастройкиЗагрузкиПисем.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыПочтовыеЯщики

&НаКлиенте
Процедура НастройкиЗагрузкиПисемВариантЗагрузкиПриИзменении(Элемент)
	
	ЗаписатьНастройкуПочтовогоЯщика(
	УчетнаяЗапись,
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ПочтоваяПапка,
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ВариантЗагрузки,
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ВариантСинхронизации);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗагрузкиПисемВариантЗагрузкиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ВариантЗагрузки = ПредопределенноеЗначение("Перечисление.ВариантыЗагрузкиПисем.НеЗагружать");
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗагрузкиПисемВариантСинхронизацииПриИзменении(Элемент)
	
	ЗаписатьНастройкуПочтовогоЯщика(
	УчетнаяЗапись,
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ПочтоваяПапка,
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ВариантЗагрузки,
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ВариантСинхронизации);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗагрузкиПисемВариантСинхронизацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.НастройкиЗагрузкиПисем.ТекущиеДанные.ВариантСинхронизации = ПредопределенноеЗначение("Перечисление.ВариантыСинхронизацииПисем.НеСинхронизировать");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПочтовыеПапки(Команда)
	
	ОбновитьПочтовыеЯщикиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция НастройкиСуществуют(Знач УчетнаяЗапись)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиЗагрузкиПисем.УчетнаяЗапись КАК УчетнаяЗапись
	|ИЗ
	|	РегистрСведений.НастройкиЗагрузкиПисем КАК НастройкиЗагрузкиПисем
	|ГДЕ
	|	НастройкиЗагрузкиПисем.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуНастроек()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НастройкиЗагрузкиПисем.ПочтоваяПапка КАК ПочтоваяПапка,
	|	НастройкиЗагрузкиПисем.ВариантЗагрузки КАК ВариантЗагрузки,
	|	НастройкиЗагрузкиПисем.ВариантСинхронизации КАК ВариантСинхронизации
	|ИЗ
	|	РегистрСведений.НастройкиЗагрузкиПисем КАК НастройкиЗагрузкиПисем
	|ГДЕ
	|	НастройкиЗагрузкиПисем.УчетнаяЗапись = &УчетнаяЗапись");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		НастройкиЗагрузкиПисем.Загрузить(РезультатЗапроса.Выгрузить());
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПочтовыеЯщикиНаСервере()
	
	ЭлектроннаяПочтаУНФ.ОбновитьПочтовыеПапки(УчетнаяЗапись);
	ЗаполнитьТаблицуНастроек();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьНастройкуПочтовогоЯщика(
	Знач УчетнаяЗапись,
	Знач ПочтоваяПапка,
	Знач ВариантЗагрузки,
	Знач ВариантСинхронизации)
	
	МенеджерЗаписи = РегистрыСведений.НастройкиЗагрузкиПисем.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УчетнаяЗапись = УчетнаяЗапись;
	МенеджерЗаписи.ПочтоваяПапка = ПочтоваяПапка;
	МенеджерЗаписи.ВариантЗагрузки = ВариантЗагрузки;
	МенеджерЗаписи.ВариантСинхронизации = ВариантСинхронизации;
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

#КонецОбласти