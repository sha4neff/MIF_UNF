////////////////////////////////////////////////////////////////////////////////
// Модуль формы РегистрСведений.УчетныеЗаписиЭДО.ПодписаниеРегистрационногоПакета1СЭДО
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеПакета = Параметры.ДанныеПакета;
	ПроверитьДанныеПакета(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохраненныйПароль = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ПарольКСертификату(Сертификат);
	Если СохраненныйПароль <> Неопределено Тогда
		Пароль = УникальныйИдентификатор;
		ИспользоватьСохраненныйПароль = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодготовитьДанныеНаПодпись();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы ИЛИ РазрешитьЗакрытие Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ЗакрытьФорму(ДанныеНаПодпись);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	ИспользоватьСохраненныйПароль = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДанныеДляРегистрации(Команда)
	
	Контекст = Новый Структура;
	Контекст.Вставить("РеквизитыПакета", ДанныеПакета.РеквизитыПакета);
	Контекст.Вставить("ДвоичныеДанныеДляОператораЭДО", ДанныеПакета.ДвоичныеДанныеДляОператораЭДО);
	
	ОбменСКонтрагентамиСлужебныйКлиент.ОбработатьПредставлениеДанныхДляОператораЭДО(Неопределено, Контекст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПользовательскоеСоглашение(Команда)
	
	ОбменСКонтрагентамиСлужебныйКлиент.ОбработатьПредставлениеЗаявленияНаПодключениеКЭДО(Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	
	НачатьПодписаниеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЗакрытьФорму(ДанныеНаПодпись);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьЭлементыФормыПриПодписании()
	
	Элементы.Подписать.Доступность = Не ВыполняетсяПодписание;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДанныеПакета(Отказ)
	
	Если ДанныеПакета = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не (ДанныеПакета.Свойство("РеквизитыПакета") И ЗначениеЗаполнено(ДанныеПакета.РеквизитыПакета))
		ИЛИ Не (ДанныеПакета.Свойство("ДвоичныеДанныеДляОператораЭДО") И ЗначениеЗаполнено(ДанныеПакета.ДвоичныеДанныеДляОператораЭДО))
		ИЛИ Не (ДанныеПакета.Свойство("ДвоичныеДанныеСоглашенияНаПодключениеЭДО") 
		И ЗначениеЗаполнено(ДанныеПакета.ДвоичныеДанныеСоглашенияНаПодключениеЭДО)) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Сертификат = ДанныеПакета.ДобавляемыйСертификат;
	СвойстваСертификата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Сертификат, "Программа,ДанныеСертификата");
	СертификатПрограмма = СвойстваСертификата.Программа;
	СертификатДанные = СвойстваСертификата.ДанныеСертификата.Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьДанныеНаПодпись()
	
	ДанныеНаПодпись = Новый Структура;
	
	Операция = НСтр("ru = 'Подписание регистрационных данных на подключение к сервису 1С-ЭДО'");
	ДанныеНаПодпись.Вставить("Операция", Операция);
	
	НаборСертификатов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеПакета.ДобавляемыйСертификат);
	ДанныеНаПодпись.Вставить("ОтборСертификатов", НаборСертификатов);
	
	ДанныеНаПодпись.Вставить("НаборДанных", Новый Массив);
	ДанныеНаПодпись.НаборДанных.Добавить(Новый Структура("Данные", ДанныеПакета.ДвоичныеДанныеСоглашенияНаПодключениеЭДО));
	ДанныеНаПодпись.НаборДанных.Добавить(Новый Структура("Данные", ДанныеПакета.ДвоичныеДанныеДляОператораЭДО));
	
	ДанныеНаПодпись.Вставить("ПоказатьКомментарий", Ложь);
	ДанныеНаПодпись.Вставить("ЗаголовокДанных", "");
	ДанныеНаПодпись.Вставить("БезПодтверждения", Истина);
	ДанныеНаПодпись.Вставить("КонтекстОперации", Неопределено);
	
	СписокПредставлений = Новый СписокЗначений;
	
	Контекст = Новый Структура;
	Контекст.Вставить("РеквизитыПакета", ДанныеПакета.РеквизитыПакета);
	Контекст.Вставить("ДвоичныеДанныеДляОператораЭДО", ДанныеПакета.ДвоичныеДанныеДляОператораЭДО);
	
	Представление = НСтр("ru = 'Пользовательское соглашение на подключение к сервису 1С-ЭДО'");
	ОписаниеПредставленияЗаявления = Новый ОписаниеОповещения("ОбработатьПредставлениеЗаявленияНаПодключениеКЭДО", ОбменСКонтрагентамиСлужебныйКлиент, Контекст);
	СписокПредставлений.Добавить(ОписаниеПредставленияЗаявления, Представление);
	
	Представление = НСтр("ru = 'Данные для регистрации учетной записи у оператора ЭДО'");
	ОписаниеПредставленияДанных = Новый ОписаниеОповещения("ОбработатьПредставлениеДанныхДляОператораЭДО", ОбменСКонтрагентамиСлужебныйКлиент, Контекст);
	СписокПредставлений.Добавить(ОписаниеПредставленияДанных, Представление);
	
	ДанныеНаПодпись.Вставить("СписокПредставлений", СписокПредставлений);
	ДанныеНаПодпись.Вставить("ПредставлениеНабора", НСтр("ru = 'Пользовательское соглашение, Данные для регистрации у оператора ЭДО'"));
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПодписаниеДанных()
	
	Если ВыполняетсяПодписание Тогда
		Возврат;
	КонецЕсли;
	ВыполняетсяПодписание = Истина;
	
	НастроитьЭлементыФормыПриПодписании();
	
	Если ЗначениеЗаполнено(СертификатПрограмма) Тогда
		
		ВыполнитьПодписаниеДанных();
		
	Иначе
		
		ОбработкаЗавершения = Новый ОписаниеОповещения("НачатьПодписаниеДанных_ИнициализацияСертификата", ЭтотОбъект);
		СертификатДляИнициализации = Новый СертификатКриптографии;
		СертификатДляИнициализации.НачатьИнициализацию(ОбработкаЗавершения, СертификатДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПодписаниеДанных_ИнициализацияСертификата(Знач СертификатКриптографии, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	ВыбранныйПароль = Пароль;
	Если ИспользоватьСохраненныйПароль Тогда
		ВыбранныйПароль = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ПарольКСертификату(Сертификат);
	КонецЕсли;
	
	ОбработкаЗавершения = Новый ОписаниеОповещения("НачатьПодписаниеДанных_ОпределениеПрограммы", ЭтотОбъект);
	ЭлектронноеВзаимодействиеСлужебныйКлиент.НачатьОпределениеПрограммыСертификатаКриптографии(
		СертификатКриптографии, ОбработкаЗавершения, ВыбранныйПароль);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПодписаниеДанных_ОпределениеПрограммы(Знач Программа, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Программа) Тогда
		УстановитьПрограммуСертификата(Сертификат, Программа);
	Иначе
		ТекстСообщения = НСтр("ru = 'Не удалось определить программу закрытого ключа сертификата.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		ОтменитьПодписаниеДанных();
		Возврат;
	КонецЕсли;
	
	ВыполнитьПодписаниеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодписаниеДанных()
	
	ВыбранныйПароль = Пароль;
	Если ИспользоватьСохраненныйПароль Тогда
		ВыбранныйПароль = ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ПарольКСертификату(Сертификат);
	КонецЕсли;
	
	ЭлектроннаяПодписьКлиент.УстановитьПарольСертификата(Сертификат, ВыбранныйПароль);
	
	ОбработкаПродолжения = Новый ОписаниеОповещения("ПослеПодписанияДанных", ЭтотОбъект);
	
	ЭлектроннаяПодписьКлиент.Подписать(ДанныеНаПодпись,, ОбработкаПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПодписаниеДанных()
	
	ВыполняетсяПодписание = Ложь;
	НастроитьЭлементыФормыПриПодписании();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодписанияДанных(Знач ДанныеПослеПодписания, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	ЭлектроннаяПодписьКлиент.УстановитьПарольСертификата(Сертификат, Неопределено);
	
	ВыполняетсяПодписание = Ложь;
	НастроитьЭлементыФормыПриПодписании();
	
	ЗакрытьФорму(ДанныеПослеПодписания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПрограммуСертификата(Знач Сертификат, Знач Программа)
	
	СертификатОбъект = Сертификат.ПолучитьОбъект();
	СертификатОбъект.Программа = Программа;
	СертификатОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Знач Результат)
	
	Если Открыта() Тогда
		РазрешитьЗакрытие = Истина;
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
