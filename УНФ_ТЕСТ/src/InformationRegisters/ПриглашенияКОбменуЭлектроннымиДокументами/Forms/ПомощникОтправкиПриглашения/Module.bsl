#Область ОписаниеПеременных

&НаКлиенте
Перем НачалоОтправкиПриглашения;

&НаКлиенте
Перем ПриглашениеОтправлено;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьПравоНастройкиОбмена() Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав для выполнения операции'");
	КонецЕсли;
	
	Элементы.НадписьОшибкаПерейти.Видимость = Пользователи.ЭтоПолноправныйПользователь();
	
	СброситьРазмерыИПоложениеОкна();
	
	Параметры.Свойство("Абоненты", Абоненты);
	Параметры.Свойство("РежимНастройки"                , РежимНастройки);
	Параметры.Свойство("Организация"                   , Организация);
	Параметры.Свойство("Контрагент"                    , Контрагент);
	Параметры.Свойство("ЗапрещеноСоздаватьНастройкиЭДО", ЗапрещеноСоздаватьНастройкиЭДО);
	
	Если Не Параметры.Свойство("Ключ") Тогда
		Параметры.Свойство("ИдентификаторОрганизации", ИдентификаторОрганизации);
		Параметры.Свойство("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
	Иначе
		ИдентификаторОрганизации = Параметры.Ключ.ИдентификаторОрганизации;
		ИдентификаторКонтрагента = Параметры.Ключ.ИдентификаторКонтрагента;
	КонецЕсли;
	Параметры.Свойство("ЭлектроннаяПочта"   , ЭлектроннаяПочта);
	Параметры.Свойство("ОператорКонтрагента", ОператорКонтрагента);
	Параметры.Свойство("ТекстПриглашения"   , ТекстПриглашения);
	Если Параметры.Свойство("EmailОрганизации", EmailОрганизации) Тогда
		Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация)
		И Не ЭлектронноеВзаимодействиеСлужебный.ИспользуетсяНесколькоОрганизаций() Тогда
		Организация = ЭлектронноеВзаимодействиеСлужебный.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Элементы.Организация.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Организация.Гиперссылка = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Элементы.Контрагент.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Контрагент.Гиперссылка = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
		ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО();
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = Элементы.СтраницаИнформацииОКонтрагентеИдентификатор;
	ИначеЕсли ЗначениеЗаполнено(ЭлектроннаяПочта) Тогда
		ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта();
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = Элементы.СтраницаИнформацииОКонтрагентеЭлектроннаяПочта;
	ИначеЕсли ЗначениеЗаполнено(ОператорКонтрагента) Тогда
		ИдентификаторКонтрагента = ОператорКонтрагента;
		ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО();
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = Элементы.СтраницаИнформацииОКонтрагентеОператор;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстПриглашения) Тогда
		ТекстПриглашения = ОбменСКонтрагентамиСлужебный.СтандартныйШаблонПриглашения();
	КонецЕсли; 	
		
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	КонтекстныеПодсказкиБЭД.КонтекстныеПодсказки_ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПанельКонтекстныхНовостей);
	СформироватьКонтекст();
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД

	ДлительнаяОперация = ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэша();
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		Возврат;
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить данные из сервиса настроек.'");
		НастроитьСтраницуОшибки(ЭтотОбъект, ОписаниеОшибки);
		ДлительнаяОперация = Неопределено;
		Возврат;
	КонецЕсли;
	
	ПодготовитьФормуПослеПолученияДанныхПоИдентификаторамУчастниковЭДО(ДлительнаяОперация.АдресРезультата);
	
	ДлительнаяОперация = Неопределено;
	
	ПроверитьСоответствиеАбонентаИКонтрагента(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриглашениеОтправлено = Ложь;
	
	Если ДлительнаяОперация = Неопределено Тогда
		ПоказатьГруппуПредупреждения();
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения(
		"ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэшаЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
	НастроитьСтраницуОжидания(Истина);

	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	КонтекстныеПодсказкиБЭДКлиент.КонтекстныеНовости_ПриОткрытии(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленСписокУчетныхЗаписей1СЭДО" Тогда
		ПриОбновленииСпискаУчетныхЗаписей();
	ИначеЕсли ИмяСобытия = "ОбновитьСостояниеПриглашений"
		И ПриглашениеОтправлено <> Истина Тогда
		ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	ИначеЕсли ИмяСобытия = ИмяСобытияИзмененияКонтрагента() Тогда
		ОбновитьДанныеКонтрагента();
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	КонтекстныеПодсказкиБЭДКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагента();
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	ОбновляемыеКатегории = Новый Массив;
	ОбновляемыеКатегории.Добавить(КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_КодОператораКонтрагента());
	
	СформироватьКонтекст(ОбновляемыеКатегории); 
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПриИзмененииКонтрагентаЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется загрузка настроек.'");
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииПриИзменении(Элемент)
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КлючЗаписи = КлючУчетнойЗаписиОрганизации();
	Если КлючЗаписи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", КлючЗаписи);
	ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.ФормаЗаписи", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Идентификатор_Создать() Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИдентификаторПослеСозданияУчетнойЗаписи", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("КнопкаНазадДоступна", Истина);
	
	ОткрытьФорму("РегистрСведений.УчетныеЗаписиЭДО.Форма.ПомощникПодключенияЭДО",
		ПараметрыФормы, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ДобавитьПроизвольныйИдентификаторКонтрагентаВСписокВыбора(ЭтотОбъект, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОператорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаВводПриИзменении(Элемент)
	
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКонтрагентаВводИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ИдентификаторКонтрагента Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаИдентификатораКонтрагента", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаПриИзменении(Элемент)
	
	ПриИзмененииЭлектроннойПочты();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораЭлектроннойПочты(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ЭлектроннаяПочта Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаЭлектроннойПочты", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОрганизацииДополнительноИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ЭлектроннаяПочта Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыОрганизацииВторойЭтап", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗнаюОператораНажатие(Элемент)
	
	ПоказатьВариантыИнформацииОКонтрагенте(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗнаюEmailНажатие(Элемент)
	
	ПоказатьВариантыИнформацииОКонтрагенте(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗнаюИдентификаторНажатие(Элемент)
	
	ПоказатьВариантыИнформацииОКонтрагенте(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПовторноеПриглашениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ОткрытьПриглашение"
		И ЗначениеЗаполнено(НавигационнаяСсылкаНаПриглашение) Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(НавигационнаяСсылкаНаПриглашение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаДополнительноПриИзменении(Элемент)
	
	ПриИзмененииЭлектроннойПочты();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаДополнительноОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаВыбораЭлектроннойПочты(ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаДополнительноИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Текст <> ЭлектроннаяПочта Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыВторойЭтап", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСоглашениеНаРоумингНеВыбраноОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ПолучитьШаблонСоглашениеНаРоуминг" Тогда
		ПолучитьШаблонСоглашениеНаРоуминг();
		ОткрылиПисьмоОВыбореОператора = Истина;
		Оповестить("ОткрытиеПисьмаОВыбореОператора", Истина);
	ИначеЕсли НавигационнаяСсылка = "ПрикрепитьСоглашениеНаРоуминг" Тогда
		ПрикрепитьСоглашениеНаРоуминг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьИмяФайлаСоглашенияНаРоумингНажатие(Элемент)
	
	АдресСоглашенияНаРоуминг = АдресДанныхСоглашенияНаРоуминг(ИдентификаторОрганизации, УникальныйИдентификатор);
	
	Если ЗначениеЗаполнено(АдресСоглашенияНаРоуминг) Тогда
		ПолучитьФайл(АдресСоглашенияНаРоуминг, ИмяФайлаСоглашенияНаРоуминг);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПриглашенияПриИзменении(Элемент)
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОшибкаПерейтиНажатие(Элемент)
	
	ОтборЖурнала = Новый Структура;
	Если ЗначениеЗаполнено(НачалоОтправкиПриглашения) Тогда
		ОтборЖурнала.Вставить("ДатаНачала", НачалоОтправкиПриглашения);
	КонецЕсли;
	ОтборЖурнала.Вставить("Уровень", "Ошибка");
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурнала);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВыполненоОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиОткрытьТекущиеДела(НавигационнаяСсылка, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НадписьВыполненоРоумингОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиОткрытьТекущиеДела(НавигационнаяСсылка, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНадписьПредупреждениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОбработкиОшибок = ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.НовыеПараметрыОбработкиОшибок();
	ПараметрыОбработкиОшибок.ГруппаПредупреждения = Элементы.ГруппаПредупреждения;
	КонтекстОперации.ОшибкиОбработаны = Ложь;
	ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.ОбработатьОшибки(КонтекстОперации, ПараметрыОбработкиОшибок);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаОрганизацииДополнительноПриИзменении(Элемент)
	
	ПриИзмененииЭлектроннойПочты();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	ОтправитьПриглашение();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Если ДлительнаяОперация <> Неопределено Тогда
		ОтменитьВыполнениеЗадания(ДлительнаяОперация.ИдентификаторЗадания);
	КонецЕсли;
	
	Результат = Неопределено;
	Если ПриглашениеОтправлено Тогда
		Результат = РезультатОтправкиПриглашения();
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	Если УдалитьДанныеСоглашенияНаРоуминг(ИдентификаторОрганизации) Тогда
		ИмяФайлаСоглашенияНаРоуминг = "";
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Результат = РезультатОтправкиПриглашения();
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить(ИмяФормы, "", ИмяПользователя);
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэша()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение данных по участникам ЭДО для отправки приглашения.'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ПараметрыПроцедуры = Новый Структура("Организация, Контрагент", Организация, Контрагент);
	
	Если ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		ПараметрыПроцедуры.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
		ПараметрыПроцедуры.Вставить("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
	КонецЕсли;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ОбменСКонтрагентамиСлужебный.ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэша",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДанныеПоИдентификаторамУчастниковЭДОПослеОбновленияКэшаЗавершение(Результат, Контекст) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус <> "Выполнено" Тогда
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить данные из сервиса настроек.'");
		НастроитьСтраницуОшибки(ЭтотОбъект, ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	ПодготовитьФормуПослеПолученияДанныхПоИдентификаторамУчастниковЭДО(Результат.АдресРезультата);
	ПоказатьГруппуПредупреждения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГруппуПредупреждения()
	
	Элементы.ГруппаПредупреждения.Видимость = Ложь;
	
	Если КонтекстОперации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КонтекстОперации.ЗаголовокОперации = НСтр("ru = 'При получении данных участников ЭДО'");
	ПараметрыОбработкиОшибок = ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.НовыеПараметрыОбработкиОшибок();
	ПараметрыОбработкиОшибок.КонтекстныйРежимОбработки = Истина;
	ПараметрыОбработкиОшибок.ГруппаПредупреждения = Элементы.ГруппаПредупреждения;
	ПараметрыОбработкиОшибок.НадписьПредупреждение = Элементы.ДекорацияНадписьПредупреждение;
	ПараметрыОбработкиОшибок.ТекстПредупреждения = ОбменСКонтрагентамиДиагностикаКлиент.ТекстПредупреждения(КонтекстОперации.Диагностика.Ошибки);
	ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.ОбработатьОшибки(КонтекстОперации, ПараметрыОбработкиОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуПослеПолученияДанныхПоИдентификаторамУчастниковЭДО(Знач АдресРезультата)
	
	ЗаполнитьСписокОператоровЭДО();
	
	ДанныеПоИдентификаторамУчастниковЭДО = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗаполнитьИдентификаторыОрганизации(ДанныеПоИдентификаторамУчастниковЭДО.СписокИдентификаторовОрганизации);
	
	ПараметрыОтправки = НовыеПараметрыОтправкиПриглашения(
		ДанныеПоИдентификаторамУчастниковЭДО.ПараметрыСвязиИдентификаторовЭДО);
		
	КонтекстОперации = ДанныеПоИдентификаторамУчастниковЭДО.КонтекстОперации;
		
	ЗаполнитьДанныеКонтрагента(ПараметрыОтправки);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
	ПроверитьСоответствиеАбонентаИКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИдентификаторыОрганизации(СписокИдентификаторов = Неопределено)
	
	Если СписокИдентификаторов = Неопределено Тогда
		СписокИдентификаторов = ОбменСКонтрагентамиСлужебный.СписокИдентификаторовУчетныхЗаписейОрганизацииСервисаЭДО(Организация);
	КонецЕсли;
	
	СписокВыбора = Элементы.ИдентификаторОрганизации.СписокВыбора;
	Если СписокВыбора.Количество() Тогда
		СписокВыбора.Очистить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СписокИдентификаторов) Тогда
		Для Каждого ЭлементСписка Из СписокИдентификаторов Цикл
			ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ЭлементСписка);
		КонецЦикла;
	КонецЕсли;
	
	СписокВыбора.Добавить(Идентификатор_Создать(), НСтр("ru = 'Создать новую учетную запись'"),,
		БиблиотекаКартинок.СоздатьЭлементСписка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьEmailОрганизации()
	
	СписокВыбора = Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.СписокВыбора;
	СписокВыбора.Очистить();
	СписокВыбора.ЗагрузитьЗначения(ОбменСКонтрагентамиСлужебный.ЭлектронныеАдресаДляУведомленияОСтатусеЗаявкиНаРоуминг(Организация));
	
	Если СписокВыбора.Количество() Тогда
		EmailОрганизации = СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеКонтрагента(ПараметрыОтправки)
	
	КонтрагентИНН = ПараметрыОтправки.КонтрагентИНН;
	КонтрагентКПП = ПараметрыОтправки.КонтрагентКПП;
	
	Если ЗначениеЗаполнено(ПараметрыОтправки.СписокИдентификаторовКонтрагента) Тогда
		ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО();
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипИнформацииОКонтрагенте) Тогда
		ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО();
	КонецЕсли;
	
	ЗаполнитьЭлектроннуюПочтуКонтрагента();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКонтрагента()
	
	КонтрагентИНН            = "";
	ИдентификаторКонтрагента = "";
	ОператорКонтрагента      = "";
	ЭлектроннаяПочта         = "";
	
	ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО();
	
	ДлительнаяОперация = ЗаполнитьПараметрыСвязиИдентификаторовЭДОПослеСинхронизацииАбонентов();
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьНастройкуОтправкиПриглашенияПоПараметрамСвязи(ДлительнаяОперация.АдресРезультата);
	
	ДлительнаяОперация = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКонтрагентаЗавершение(Результат, Контекст) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус <> "Выполнено" Тогда
		ОписаниеОшибки = НСтр("ru = 'Не удалось загрузить данные из сервиса настроек.'");
		НастроитьСтраницуОшибки(ЭтотОбъект, ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	УстановитьСтраницуИнформацииОКонтрагенте();
	
	ОбновитьНастройкуОтправкиПриглашенияПоПараметрамСвязи(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкуОтправкиПриглашенияПоПараметрамСвязи(Знач АдресРезультата)
	
	ПараметрыСвязиИдентификаторов = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ПараметрыОтправки = НовыеПараметрыОтправкиПриглашения(ПараметрыСвязиИдентификаторов);
	
	ЗаполнитьДанныеКонтрагента(ПараметрыОтправки);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПараметрыСвязиИдентификаторовЭДОПослеСинхронизацииАбонентов()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение данных по контрагенту из сервиса настроек'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ПараметрыПроцедуры = Новый Структура("Контрагент", Контрагент);
	
	МассивИдентификаторовОрганизации = Новый Массив;
	
	Если ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		МассивИдентификаторовОрганизации.Добавить(ИдентификаторОрганизации);
	Иначе
		Для Каждого ЭлементСписка Из Элементы.ИдентификаторОрганизации.СписокВыбора Цикл
			Если ЭлементСписка.Значение <> Идентификатор_Создать() Тогда
				МассивИдентификаторовОрганизации.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыПроцедуры.Вставить("ИдентификаторыОрганизации", МассивИдентификаторовОрганизации);
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"ОбменСКонтрагентамиСлужебный.ЗаполнитьПараметрыСвязиИдентификаторовЭДОПослеСинхронизацииАбонентов",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокОператоровЭДО()
	
	СписокОператоровЭДО = Элементы.ОператорКонтрагента.СписокВыбора;
	Если СписокОператоровЭДО.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОператорыЭДО.ИдентификаторОператора КАК ИдентификаторОператора,
		|	ОператорыЭДО.Представление КАК Представление
		|ИЗ
		|	РегистрСведений.ОператорыЭДО КАК ОператорыЭДО";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		СписокОператоровЭДО.Добавить(Выборка.ИдентификаторОператора, Выборка.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлектроннуюПочтуКонтрагента()
	
	СписокВыбора = Элементы.ЭлектроннаяПочта.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбораДополнительно = Элементы.ЭлектроннаяПочтаДополнительно.СписокВыбора;
	СписокВыбораДополнительно.Очистить();
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Контрагент),
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,,
		ТекущаяДатаСеанса());
	
	Если КонтактнаяИнформация.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из КонтактнаяИнформация Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Представление)
			И ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(
				СтрокаТаблицы.Представление) Тогда
			СписокВыбора.Добавить(СтрокаТаблицы.Представление);
			СписокВыбораДополнительно.Добавить(СтрокаТаблицы.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустаяСтрока(ЭлектроннаяПочта)
		И СписокВыбора.Количество() = 1 Тогда
		ЭлектроннаяПочта = СписокВыбора[0].Значение;
	КонецЕсли;
	
	Элементы.ЭлектроннаяПочта.КнопкаВыпадающегоСписка = СписокВыбора.Количество();
	Элементы.ЭлектроннаяПочтаДополнительно.КнопкаВыпадающегоСписка = СписокВыбораДополнительно.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеКонтрагента()
	
	ПараметрыОтправки = ПараметрыОтправкиПриглашения(ЭтотОбъект);
	
	ЗаполнитьДанныеКонтрагента(ПараметрыОтправки);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ИмяСобытияИзмененияКонтрагента()
	Возврат ОбменСКонтрагентамиСлужебныйКлиент.ИмяСобытияИзмененияОбъекта(Контрагент);
КонецФункции

&НаКлиенте
Функция КлючУчетнойЗаписиОрганизации()
	
	Если Не ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбменСКонтрагентамиСлужебныйКлиент.КлючУчетнойЗаписиЭДО(ИдентификаторОрганизации);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОсновнуюСтраницуФормы(Форма)
	
	ОбновитьНастройкуОтправкиПриглашения(Форма);
	
	НастроитьОсновнуюСтраницуФормы(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОсновнуюСтраницуФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОсновная;
	
	ИдентификаторыКонтрагентаИзвестны = Ложь;
	Для Каждого ЭлементСписка Из Элементы.ИдентификаторКонтрагента.СписокВыбора Цикл
		Если Не ЭлементСписка.Пометка Тогда
			ИдентификаторыКонтрагентаИзвестны = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ИдентификаторКонтрагентаКорректный   = ИдентификаторКонтрагентаКорректный(Форма);
	ЭлектроннаяПочтаКорректна            = ЭлектроннаяПочтаКорректна(Форма);
	ЭлектроннаяПочтаОрганизацииКорректна = ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Форма.EmailОрганизации);
	
	Если ИдентификаторыКонтрагентаИзвестны Тогда
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.Видимость = Ложь;
		
		Этап1Завершен = ЗначениеЗаполнено(Форма.Организация)
			И ЗначениеЗаполнено(Форма.Контрагент)
			И ЗначениеЗаполнено(Форма.КонтрагентИНН);
		
		Этап2Завершен = Этап1Завершен
			И Форма.ТипПредупреждения <> ТипПредупреждения_ОбменНеПоддерживается()
			И Форма.ТипПредупреждения <> ТипПредупреждения_ПовторноеПриглашение()
			И ЗначениеЗаполнено(Форма.ИдентификаторОрганизации)
			И ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
			И ИдентификаторКонтрагентаКорректный;
	Иначе
		Элементы.ГруппаСтраницыИнформацииОКонтрагенте.Видимость = ЗначениеЗаполнено(Форма.Контрагент);
		
		Этап1Завершен = ЗначениеЗаполнено(Форма.Организация)
			И ЗначениеЗаполнено(Форма.Контрагент)
			И ЗначениеЗаполнено(Форма.КонтрагентИНН)
			И (Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО()
					И ЗначениеЗаполнено(Форма.ОператорКонтрагента)
				ИЛИ Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО()
					И ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
					И ИдентификаторКонтрагентаКорректный
				ИЛИ Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта()
					И ЭлектроннаяПочтаКорректна);
		Этап2Завершен = Этап1Завершен
			И Форма.ТипПредупреждения <> ТипПредупреждения_ОбменНеПоддерживается()
			И Форма.ТипПредупреждения <> ТипПредупреждения_ПовторноеПриглашение()
			И ЗначениеЗаполнено(Форма.ИдентификаторОрганизации)
			И (Форма.ТипИнформацииОКонтрагенте <> ТипИнформацииОКонтрагенте_ОператорЭДО()
				ИЛИ Не Форма.ОтправкаТолькоНаИдентификаторЭДО
				ИЛИ ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента))
			И ИдентификаторКонтрагентаКорректный
			И ЗначениеЗаполнено(Форма.КонтрагентИНН);
	КонецЕсли;
	
	СоглашениеНаРоумингНеОбязательно = Форма.ВариантПотребностиСоглашения =
		ПредопределенноеЗначение("Перечисление.ВариантыПотребностиСоглашенияНаРоуминг.НеОбязательно");
		
	ПроверкаОтправкиЗаявкиНаРоуминг = Истина;
	Если Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
		ПроверкаОтправкиЗаявкиНаРоуминг = ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг);
	Иначе
		Если Форма.ТребуетсяСоглашениеПриПервомПодключении Тогда
			ПроверкаОтправкиЗаявкиНаРоуминг = Форма.ЗаявкаНаРоумингПринята 
				Или ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг);
		КонецЕсли;
	КонецЕсли;
		
	Этап3Завершен = Этап2Завершен
		И ЗначениеЗаполнено(Форма.ТекстПриглашения)
		И (ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг)
			Или Не Форма.ТребуетсяСоглашение
			Или СоглашениеНаРОумингНеОбязательно)
		И ПроверкаОтправкиЗаявкиНаРоуминг
		И ЭлектроннаяПочтаКорректна
		И (ЭлектроннаяПочтаОрганизацииКорректна Или Не ТребуетсяЗаполнитьEmailОрганизации(Форма));
		
	Элементы.НадписьНеУказанИНН.Видимость = ЗначениеЗаполнено(Форма.Контрагент) И ПустаяСтрока(Форма.КонтрагентИНН);
	
	Элементы.НадписьЭлектроннаяПочтаНекорректна.Видимость = ЗначениеЗаполнено(Форма.ЭлектроннаяПочта)
		И Не ЭлектроннаяПочтаКорректна
		И Не ОтправкаНаТогоЖеОператора(Форма);
	
	Элементы.НадписьИдентификаторКонтрагентаВводНекорректный.Видимость = Не ИдентификаторыКонтрагентаИзвестны
		И Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО()
		И ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
		И Не ИдентификаторКонтрагентаКорректный;
	
	Если Не Этап1Завершен Тогда
		Элементы.КартинкаЭтап1.Картинка = БиблиотекаКартинок.Этап1СинийБЭД;
		Элементы.НадписьЭтап1.Заголовок = НСтр("ru = 'Заполните информацию об участниках документооборота:'");
		Элементы.НадписьЭтап1.Шрифт = Новый Шрифт(Элементы.НадписьЭтап1.Шрифт,,, Истина);
		Элементы.ГруппаВторойЭтап.Доступность = Ложь;
		Элементы.ПанельИдентификаторыЭДО.ТекущаяСтраница = Элементы.СтраницаОжиданиеЗаполненияИдентификаторов;
		Элементы.ГруппаИдентификаторКонтрагента.Видимость = Ложь;
		Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Ложь;
	Иначе
		Элементы.КартинкаЭтап1.Картинка = БиблиотекаКартинок.Этап1ЗеленыйБЭД;
		Элементы.НадписьЭтап1.Заголовок = НСтр("ru = 'Участники документооборота'");
		Элементы.НадписьЭтап1.Шрифт = Новый Шрифт(Элементы.НадписьЭтап1.Шрифт,,, Ложь);
		Элементы.ГруппаВторойЭтап.Доступность = Истина;
		Элементы.ПанельИдентификаторыЭДО.ТекущаяСтраница = Элементы.СтраницаИдентификаторыЭДО;
		
		Элементы.НадписьИдентификаторКонтрагентаНекорректный.Видимость = ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
			И Не ИдентификаторКонтрагентаКорректный;
		
		Если Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО()
			И Форма.ОтправкаТолькоНаИдентификаторЭДО Тогда
			Элементы.ГруппаИдентификаторКонтрагента.Видимость = Истина;
			Элементы.ИдентификаторКонтрагента.РежимВыбораИзСписка = Ложь;
			Элементы.ГруппаПодробнее.Видимость = Ложь;
		Иначе
			Элементы.ГруппаИдентификаторКонтрагента.Видимость = ИдентификаторыКонтрагентаИзвестны;
			Элементы.ИдентификаторКонтрагента.РежимВыбораИзСписка = Истина;
			Элементы.ГруппаПодробнее.Видимость = Истина;
			ЭлементСписка = Элементы.ИдентификаторКонтрагента.СписокВыбора.НайтиПоЗначению(Форма.ИдентификаторКонтрагента);
			Если ЭлементСписка <> Неопределено Тогда
				Элементы.КартинкаСтатусПриглашения.Картинка = ЭлементСписка.Картинка;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Форма.ТипПредупреждения) Тогда
			Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Ложь;
		Иначе
			Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Истина;
			
			Если Форма.ТипПредупреждения = ТипПредупреждения_ВыбраныАвтоматически() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаИдентификаторыВыбраныАвтоматически;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ОбменНеПоддерживается() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаОбменНеПоддерживается;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ПовторноеПриглашение() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаПовторноеПриглашение;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_НеактивнаяЗапись() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаНеактивнаяЗапись;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ОтсутствуютСертификаты() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаОтсутствуютСертификаты;
				
			ИначеЕсли Форма.ТипПредупреждения = ТипПредупреждения_ТребуетсяИдентификаторЭДО() Тогда
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.ТекущаяСтраница =
					Элементы.СтраницаПодсказкаТребуетсяИдентификаторЭДО;
				
			Иначе
				Элементы.ПанельПодсказокПоСвязкеИдентификаторовЭДО.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Этап2Завершен Тогда
		Элементы.КартинкаЭтап2.Картинка = БиблиотекаКартинок.Этап2СинийБЭД;
		Элементы.НадписьЭтап2.Заголовок = НСтр("ru = 'Выберите учетные записи:'");
		Элементы.НадписьЭтап2.Шрифт = Новый Шрифт(Элементы.НадписьЭтап2.Шрифт,,, Истина);
		Элементы.ГруппаТретийЭтап.Доступность = Ложь;
		Элементы.ПанельДополнительныхСведений.ТекущаяСтраница = Элементы.СтраницаОжиданиеПредыдущихЭтапов;
		Элементы.ГруппаЭлектроннаяПочтаДополнительно.Видимость = Ложь;
		Элементы.ГруппаСоглашениеНаРоуминг.Видимость = Ложь;
	Иначе
		Элементы.КартинкаЭтап2.Картинка = БиблиотекаКартинок.Этап2ЗеленыйБЭД;
		Элементы.НадписьЭтап2.Заголовок = НСтр("ru = 'Учетные записи'");
		Элементы.НадписьЭтап2.Шрифт = Новый Шрифт(Элементы.НадписьЭтап2.Шрифт,,, Ложь);
		Элементы.ГруппаТретийЭтап.Доступность = Истина;
		Элементы.ПанельДополнительныхСведений.ТекущаяСтраница = Элементы.СтраницаЗаполнениеДополнительныхСведений;
		
		ОбязательнаяЗаявкаНаРоуминг = Ложь;
		Если Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
			ОбязательнаяЗаявкаНаРоуминг = Истина;
		Иначе
			Если Форма.ТребуетсяСоглашениеПриПервомПодключении И Не Форма.ЗаявкаНаРоумингПринята Тогда
				ОбязательнаяЗаявкаНаРоуминг = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если (Форма.ТребуетсяСоглашение Или ОбязательнаяЗаявкаНаРоуминг)
			И Форма.ТипИнформацииОКонтрагенте <> ТипИнформацииОКонтрагенте_ЭлектроннаяПочта() Тогда
			Элементы.ГруппаСоглашениеНаРоуминг.Видимость = Истина;
			Элементы.ПанельСоглашениеНаРоуминг.ТекущаяСтраница = 
				?(ЗначениеЗаполнено(Форма.ИмяФайлаСоглашенияНаРоуминг) И Не Форма.ТребуетсяНовоеСоглашение,
				Элементы.СтраницаСоглашениеНаРоумингВыбрано, 
				Элементы.СтраницаСоглашениеНаРоумингНеВыбрано);
			Если Элементы.НадписьИмяФайлаСоглашенияНаРоуминг.Заголовок <> Форма.ИмяФайлаСоглашенияНаРоуминг Тогда
				Элементы.НадписьИмяФайлаСоглашенияНаРоуминг.Заголовок = Форма.ИмяФайлаСоглашенияНаРоуминг;
			КонецЕсли;
		Иначе
			Элементы.ГруппаСоглашениеНаРоуминг.Видимость = Ложь;
		КонецЕсли;
		
		Если ОтправкаНаТогоЖеОператора(Форма) Тогда
			Элементы.ГруппаЭлектроннаяПочтаДополнительно.Видимость = Истина;
			Элементы.НадписьЭлектроннаяПочтаНекорректнаДополнительно.Видимость = ЗначениеЗаполнено(Форма.ЭлектроннаяПочта)
				И Не ЭлектроннаяПочтаКорректна;
		Иначе
			Элементы.ГруппаЭлектроннаяПочтаДополнительно.Видимость = Ложь;
			Элементы.НадписьЭлектроннаяПочтаНекорректнаДополнительно.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.НадписьЭлектроннаяПочтаОрганизацииНекорректнаДополнительно.Видимость = ЗначениеЗаполнено(Форма.EmailОрганизации)
			И Не ЭлектроннаяПочтаОрганизацииКорректна;
			
	КонецЕсли;
	
	Если Этап3Завершен Тогда
		Элементы.КартинкаЭтап3.Картинка = БиблиотекаКартинок.Этап3ЗеленыйБЭД;
		Элементы.НадписьЭтап3.Заголовок = НСтр("ru = 'Дополнительные сведения'");
		Элементы.НадписьЭтап3.Шрифт = Новый Шрифт(Элементы.НадписьЭтап3.Шрифт,,, Ложь);
	Иначе
		Элементы.КартинкаЭтап3.Картинка = БиблиотекаКартинок.Этап3СинийБЭД;
		Элементы.НадписьЭтап3.Заголовок = НСтр("ru = 'Укажите дополнительные сведения:'");
		Элементы.НадписьЭтап3.Шрифт = Новый Шрифт(Элементы.НадписьЭтап3.Шрифт,,, Истина);
	КонецЕсли;
	
	Элементы.КнопкаНазад.Видимость = Ложь;
	
	Если Форма.РежимНастройки Тогда
		Элементы.КнопкаПрименить.Видимость = Истина;
		Элементы.КнопкаПрименить.КнопкаПоУмолчанию = Истина;
		Элементы.КнопкаПрименить.Доступность = Этап3Завершен;
		
		Элементы.КнопкаОтправить.Видимость = Ложь;
	Иначе
		Элементы.КнопкаОтправить.Видимость = Истина;
		Элементы.КнопкаОтправить.КнопкаПоУмолчанию = Истина;
		Элементы.КнопкаОтправить.Доступность = Этап3Завершен;
		
		Элементы.КнопкаПрименить.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.Подсказка = ОбменСКонтрагентамиСлужебныйКлиентСервер.ПодсказкаЭлектроннаяПочтаДляУведомленияОСтатусеЗаявкиНаРоуминг();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСтраницуОжидания(РежимЗагрузкиНастроек = Ложь)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжидание;
	
	Элементы.НадписьОжиданиеЗагрузкаНастроек.Видимость = РежимЗагрузкиНастроек;
	Элементы.НадписьОжиданиеОтправкаПриглашения.Видимость = Не РежимЗагрузкиНастроек;
	
	Элементы.КнопкаНазад.Видимость = Ложь;
	Элементы.КнопкаОтправить.Видимость = Ложь;
	Элементы.КнопкаПрименить.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьСтраницуОшибки(Форма, ОписаниеОшибки = Неопределено)
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОшибка;
	
	Элементы.КнопкаОтправить.Видимость = Ложь;
	Элементы.КнопкаПрименить.Видимость = Ложь;
	
	Если ОписаниеОшибки = Неопределено Тогда
		Элементы.КнопкаНазад.Видимость = Истина;
	Иначе
		Элементы.КнопкаНазад.Видимость = Ложь;
		Элементы.НадписьОшибка.Заголовок = ОписаниеОшибки;
		Элементы.КнопкаОтмена.Заголовок = НСтр("ru = 'Закрыть'");
		Элементы.КнопкаОтмена.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСтраницуВыполнено()
	
	ТипПриглашения = "Широковещательное";
	
	Если ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
		ТипПриглашения = "ЗаявкаНаРоуминг";
	ИначеЕсли ТребуетсяСоглашениеПриПервомПодключении Тогда
		Если ЗаявкаНаРоумингПринята Тогда
			ТипПриглашения = "Авто";
		Иначе
			ТипПриглашения = "ЗаявкаНаРоуминг";
		КонецЕсли;
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО()
		ИЛИ ОтправкаТолькоНаИдентификаторЭДО Тогда
		
		Если РоумингБезАвтоматическойНастройки Тогда
			ТипПриглашения = "ЗаявкаНаРоуминг";
		Иначе
			ТипПриглашения = "Авто";
		КонецЕсли;
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО()
		И ОператорОрганизации <> ОператорКонтрагента Тогда
		
		ТипПриглашения = "ЗаявкаНаРоуминг";
		
	КонецЕсли;
	
	Элементы.НадписьВыполнено.Видимость = ТипПриглашения = "Широковещательное";
	Элементы.НадписьВыполненоАвто.Видимость = ТипПриглашения = "Авто";
	Элементы.НадписьВыполненоРоуминг.Видимость = ТипПриглашения = "ЗаявкаНаРоуминг";
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыполнено;
	
	Элементы.КнопкаНазад.Видимость = Ложь;
	Элементы.КнопкаОтмена.Заголовок = НСтр("ru = 'Закрыть'");
	Элементы.КнопкаОтправить.Видимость = Ложь;
	Элементы.КнопкаПрименить.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОрганизации()
	
	ИдентификаторОрганизации = "";
	
	ЗаполнитьИдентификаторыОрганизации();
	
	ЗаполнитьEmailОрганизации();
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	ОбновляемыеКатегории = Новый Массив;
	ОбновляемыеКатегории.Добавить(КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_КодОператораУчетнойЗаписиОрганизации());
	
	СформироватьКонтекст(ОбновляемыеКатегории);
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами.КонтекстныеПодсказкиБЭД
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЭлектроннойПочты()
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЭлектроннойПочты(ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭлектроннаяПочта = ВыбранноеЗначение;
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаЭлектроннойПочты()
	
	Текст = Элементы.ЭлектроннаяПочта.ТекстРедактирования;
	ИсходноеСостояние = Элементы.НадписьЭлектроннаяПочтаНекорректна.Видимость;
	НовоеСостояние = Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Текст);
	
	Если ПустаяСтрока(ЭлектроннаяПочта)
		ИЛИ ИсходноеСостояние <> НовоеСостояние Тогда
		ЭлектроннаяПочта = Текст;
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыВторойЭтап()
	
	Текст = Элементы.ЭлектроннаяПочтаДополнительно.ТекстРедактирования;
	ИсходноеСостояние = Элементы.НадписьЭлектроннаяПочтаНекорректнаДополнительно.Видимость;
	НовоеСостояние = Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Текст);
	
	Если ПустаяСтрока(ЭлектроннаяПочта)
		ИЛИ ИсходноеСостояние <> НовоеСостояние Тогда
		ЭлектроннаяПочта = Текст;
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаЭлектроннойПочтыОрганизацииВторойЭтап()
	
	Текст = Элементы.ЭлектроннаяПочтаОрганизацииДополнительно.ТекстРедактирования;
	ИсходноеСостояние = Элементы.НадписьЭлектроннаяПочтаОрганизацииНекорректнаДополнительно.Видимость;
	НовоеСостояние = Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Текст);
	
	Если ПустаяСтрока(EmailОрганизации)
		ИЛИ ИсходноеСостояние <> НовоеСостояние Тогда
		EmailОрганизации = Текст;
		НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеИзмененияТекстаИдентификатораКонтрагента()
	ИдентификаторКонтрагента = Элементы.ИдентификаторКонтрагентаВвод.ТекстРедактирования;
	ПриИзмененииИдентификатораКонтрагентаИнтерактивно();
КонецПроцедуры

&НаСервере
Процедура ПриОбновленииСпискаУчетныхЗаписей()
	
	ЗаполнитьИдентификаторыОрганизации();
	
	Если Элементы.ИдентификаторОрганизации.СписокВыбора.НайтиПоЗначению(ИдентификаторОрганизации) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторОрганизации = "";
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииИдентификатораКонтрагентаИнтерактивно()
	
	ИдентификаторКонтрагента = СокрЛП(ИдентификаторКонтрагента);
	
	ПараметрыОтправки = ПараметрыОтправкиПриглашения(ЭтотОбъект, Ложь);
	
	ОбновитьНастройкуОтправкиПриглашения(ЭтотОбъект, ПараметрыОтправки);
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
	ПриИзмененииИдентификатораКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииИдентификатораКонтрагента(Форма)
	
	ПроверитьСоответствиеАбонентаИКонтрагента(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИдентификаторКонтрагентаКорректный(Форма)
	
	Если Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО()
		И Не Форма.ОтправкаТолькоНаИдентификаторЭДО
		ИЛИ Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не ОбменСКонтрагентамиСлужебныйКлиентСервер.ИдентификаторУчастникаЭДОКорректный(Форма.ИдентификаторКонтрагента)
		ИЛИ Форма.Элементы.ИдентификаторОрганизации.СписокВыбора.НайтиПоЗначению(
			Форма.ИдентификаторКонтрагента) <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО()
		И ЗначениеЗаполнено(Форма.ОператорКонтрагента) Тогда
		Возврат СтрНачинаетсяС(Форма.ИдентификаторКонтрагента, Форма.ОператорКонтрагента)
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьПроизвольныйИдентификаторКонтрагентаВСписокВыбора(Форма, ПроизвольныйИдентификатор, Картинка = Неопределено)
	
	Идентификатор = СокрЛП(ПроизвольныйИдентификатор);
	
	Элементы = Форма.Элементы;
	
	СписокВыбора = Элементы.ИдентификаторКонтрагента.СписокВыбора;
	
	Если СписокВыбора.Количество() И СписокВыбора[0].Пометка Тогда
		СписокВыбора.Удалить(0);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Идентификатор)
		ИЛИ Не Элементы.ИдентификаторКонтрагента.РежимВыбораИзСписка Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокВыбора.Количество() = 0 Тогда
		СписокВыбора.Добавить(Идентификатор,,Истина, Картинка);
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = СписокВыбора.НайтиПоЗначению(Идентификатор);
	Если ЭлементСписка = Неопределено Тогда
		СписокВыбора.Вставить(0, Идентификатор,, Истина, Картинка);
	Иначе
		ЭлементСписка.Картинка = Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИдентификаторПослеСозданияУчетнойЗаписи(Идентификатор, Контекст) Экспорт
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторОрганизации = Идентификатор;
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭлектроннаяПочтаКорректна(Форма)
	
	Если Форма.ТипИнформацииОКонтрагенте <> ТипИнформацииОКонтрагенте_ЭлектроннаяПочта()
		И Не ОтправкаНаТогоЖеОператора(Форма) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(Форма.ЭлектроннаяПочта)
		И ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Форма.ЭлектроннаяПочта);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОтправкаНаТогоЖеОператора(Форма)
	Возврат Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО()
		И Форма.ОператорОрганизации = Форма.ОператорКонтрагента;
КонецФункции

&НаКлиенте
Процедура ПоказатьВариантыИнформацииОКонтрагенте(Элемент)
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораВариантаИнформацииОКонтрагенте", ЭтотОбъект);
	СписокВыбора = СписокВыбораВариантовИнформацииОКонтрагенте();
	ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораВариантаИнформацииОКонтрагенте(ЭлементСписка, Контекст) Экспорт
	
	Если ЭлементСписка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипИнформацииОКонтрагенте = ЭлементСписка.Значение;
	
	УстановитьСтраницуИнформацииОКонтрагенте();
	
	ОбновитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуИнформацииОКонтрагенте()
	
	Если ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО() Тогда
		СтраницаИнформацииОКонтрагенте = Элементы.СтраницаИнформацииОКонтрагентеОператор;
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО() Тогда 
		СтраницаИнформацииОКонтрагенте = Элементы.СтраницаИнформацииОКонтрагентеИдентификатор;
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта() Тогда
		СтраницаИнформацииОКонтрагенте = Элементы.СтраницаИнформацииОКонтрагентеЭлектроннаяПочта;
	Иначе
		СтраницаИнформацииОКонтрагенте = Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница;
	КонецЕсли;
	
	Элементы.ГруппаСтраницыИнформацииОКонтрагенте.ТекущаяСтраница = СтраницаИнформацииОКонтрагенте;
	
КонецПроцедуры

&НаКлиенте
Функция СписокВыбораВариантовИнформацииОКонтрагенте()
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ТипИнформацииОКонтрагенте_ОператорЭДО(),      НСтр("ru = 'Я знаю оператора ЭДО'"));
	СписокВыбора.Добавить(ТипИнформацииОКонтрагенте_ИдентификаторЭДО(), НСтр("ru = 'Я знаю идентификатор ЭДО'"));
	СписокВыбора.Добавить(ТипИнформацииОКонтрагенте_ЭлектроннаяПочта(), НСтр("ru = 'Я знаю только e-mail'"));
	
	ТекущееЗначение = СписокВыбора.НайтиПоЗначению(ТипИнформацииОКонтрагенте);
	Если ТекущееЗначение <> Неопределено Тогда
		СписокВыбора.Удалить(ТекущееЗначение);
	КонецЕсли;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьНастройкуОтправкиПриглашения(Форма, ПараметрыОтправки = Неопределено)
	
	Если ПараметрыОтправки = Неопределено Тогда
		ПараметрыОтправки = ПараметрыОтправкиПриглашения(Форма);
	КонецЕсли;
	
	Форма.ОператорКонтрагента               = ПараметрыОтправки.ОператорКонтрагента;
	Форма.ОператорКонтрагентаПредставление  = ПараметрыОтправки.ОператорКонтрагентаПредставление;
	Форма.ИдентификаторКонтрагентаОписание  = ПараметрыОтправки.ИдентификаторКонтрагентаОписание;
	Форма.РоумингБезАвтоматическойНастройки = ПараметрыОтправки.РоумингБезАвтоматическойНастройки;
	Форма.ОтправкаТолькоНаИдентификаторЭДО  = ПараметрыОтправки.ОтправкаТолькоНаИдентификаторЭДО;
	Форма.ТребуетсяСоглашение               = ПараметрыОтправки.ТребуетсяСоглашение;
	Форма.ТипПредупреждения                 = ПараметрыОтправки.ТипПредупреждения;
	Форма.ИмяФайлаСоглашенияНаРоуминг       = ПараметрыОтправки.ИмяФайлаСоглашенияНаРоуминг;
	Форма.ОператорОрганизации               = ПараметрыОтправки.ОператорОрганизации;
	Форма.СтатусПриглашенияПредставление    = ПараметрыОтправки.СтатусПриглашенияПредставление;
	Форма.НавигационнаяСсылкаНаПриглашение  = ПараметрыОтправки.НавигационнаяСсылкаНаПриглашение;
	Форма.ВариантПотребностиСоглашения      = ПараметрыОтправки.ВариантПотребностиСоглашения;
	Форма.Абоненты = ПараметрыОтправки.Абоненты;
	Форма.ТребуетсяНовоеСоглашение = ПараметрыОтправки.ТребуетсяНовоеСоглашение;
	Форма.ТребуетсяСоглашениеПриПервомПодключении = ПараметрыОтправки.ТребуетсяСоглашениеПриПервомПодключении;
	Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг = ПараметрыОтправки.ОбязательнаяОтправкаЗаявкиНаРоуминг;
	Форма.ЗаявкаНаРоумингПринята = ПараметрыОтправки.ЗаявкаНаРоумингПринята;
	
	Форма.Элементы.ГруппаЭлектроннаяПочтаОрганизацииДополнительно.Видимость = ТребуетсяЗаполнитьEmailОрганизации(Форма);
	
	Если Форма.ТребуетсяСоглашение Тогда
		Форма.Элементы.НадписьСоглашениеНаРоумингНеВыбрано.Подсказка = ПараметрыОтправки.РекомендацияПоНастройке;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтправки.ИдентификаторОрганизации)
		И Форма.ИдентификаторОрганизации <> ПараметрыОтправки.ИдентификаторОрганизации Тогда
		Форма.ИдентификаторОрганизации = ПараметрыОтправки.ИдентификаторОрганизации;
		
		Если Не ЗначениеЗаполнено(Форма.ТипПредупреждения)
			И Форма.Элементы.ИдентификаторОрганизации.СписокВыбора.Количество() > 1 Тогда
			Форма.ТипПредупреждения = ТипПредупреждения_ВыбраныАвтоматически();
		КонецЕсли;
	КонецЕсли;
	
	СписокВыбора = Форма.Элементы.ИдентификаторКонтрагента.СписокВыбора;
	Если ЗначениеЗаполнено(ПараметрыОтправки.СписокИдентификаторовКонтрагента) Тогда
		СписокВыбора.Очистить();
		Для Каждого ЭлементСписка Из ПараметрыОтправки.СписокИдентификаторовКонтрагента Цикл
			ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ЭлементСписка);
		КонецЦикла;
	КонецЕсли;
	
	Если Форма.ТипИнформацииОКонтрагенте <> ТипИнформацииОКонтрагенте_ОператорЭДО()
		И ЗначениеЗаполнено(ПараметрыОтправки.ИдентификаторОрганизации)
		И ЗначениеЗаполнено(ПараметрыОтправки.ИдентификаторКонтрагента)
		И Форма.ИдентификаторКонтрагента <> ПараметрыОтправки.ИдентификаторКонтрагента Тогда
		Форма.ИдентификаторКонтрагента = ПараметрыОтправки.ИдентификаторКонтрагента;
		ПриИзмененииИдентификатораКонтрагента(Форма);
		Если Не ЗначениеЗаполнено(Форма.ТипПредупреждения)
			И СписокВыбора.Количество() > 1 Тогда
			Форма.ТипПредупреждения = ТипПредупреждения_ВыбраныАвтоматически();
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
		И Форма.ТипПредупреждения <> ТипПредупреждения_ТребуетсяИдентификаторЭДО()
		И Не ИдентификаторКонтрагентаКорректный(Форма) Тогда
		Форма.ТипПредупреждения = ТипПредупреждения_ОбменНеПоддерживается();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента) Тогда
		ДобавитьПроизвольныйИдентификаторКонтрагентаВСписокВыбора(Форма,
			Форма.ИдентификаторКонтрагента, ПараметрыОтправки.КартинкаСтатусаПодключения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыОтправкиПриглашения(Форма, ФормироватьСписокВыбора = Истина)
	
	МассивИдентификаторовОрганизации = Новый Массив;
	
	Если ЗначениеЗаполнено(Форма.ИдентификаторОрганизации) Тогда
		МассивИдентификаторовОрганизации.Добавить(Форма.ИдентификаторОрганизации);
	Иначе
		Для Каждого ЭлементСписка Из Форма.Элементы.ИдентификаторОрганизации.СписокВыбора Цикл
			Если ЭлементСписка.Значение <> Идентификатор_Создать() Тогда
				МассивИдентификаторовОрганизации.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО() Тогда
		
		Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента) Тогда
			МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ИдентификаторКонтрагента);
		Иначе
			МассивИдентификаторовКонтрагента = Неопределено;
		КонецЕсли;
		
	ИначеЕсли Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО() Тогда
		
		Если ЗначениеЗаполнено(Форма.ИдентификаторКонтрагента)
			И ЗначениеЗаполнено(Форма.ОператорКонтрагента)
			И СтрНачинаетсяС(Форма.ИдентификаторКонтрагента, Форма.ОператорКонтрагента)
			И Форма.ОтправкаТолькоНаИдентификаторЭДО Тогда
			МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ИдентификаторКонтрагента);
		Иначе
			МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ОператорКонтрагента);
		КонецЕсли;
		
	ИначеЕсли Форма.ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта() Тогда
		
		МассивИдентификаторовКонтрагента = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("");
		
	КонецЕсли;
	
	ДанныеУчастниковЭДО = Новый Структура;
	ДанныеУчастниковЭДО.Вставить("ИдентификаторыОрганизации", МассивИдентификаторовОрганизации);
	ДанныеУчастниковЭДО.Вставить("ИдентификаторыКонтрагента", МассивИдентификаторовКонтрагента);
	ДанныеУчастниковЭДО.Вставить("Контрагент", Форма.Контрагент);
	ДанныеУчастниковЭДО.Вставить("КонтрагентИНН", Форма.КонтрагентИНН);
	
	НастройкиЗаполнения = Новый Структура("ФормироватьСписокВыбора", ФормироватьСписокВыбора);
	
	ПараметрыОтправки = ПолучитьПараметрыОтправкиПриглашенияНаСервере(ДанныеУчастниковЭДО, НастройкиЗаполнения);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыОтправкиПриглашенияНаСервере(Знач ДанныеУчастниковЭДО, Знач НастройкиЗаполнения)
	
	ПараметрыСвязиИдентификаторов = Неопределено;
	Если ЗначениеЗаполнено(ДанныеУчастниковЭДО.Контрагент) Тогда
		ПараметрыСвязиИдентификаторов = ОбменСКонтрагентамиСлужебный.ПараметрыСвязиИдентификаторовЭДО(
			ДанныеУчастниковЭДО, НастройкиЗаполнения);
	КонецЕсли;
	
	ПараметрыОтправки = НовыеПараметрыОтправкиПриглашения(ПараметрыСвязиИдентификаторов);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервереБезКонтекста
Функция НовыеПараметрыОтправкиПриглашения(ПараметрыСвязиИдентификаторов = Неопределено)
	
	ПараметрыОтправки = Новый Структура(
		"ОператорОрганизации,
		|ОператорКонтрагента,
		|ОператорКонтрагентаПредставление,
		|ИдентификаторКонтрагентаОписание,
		|РоумингБезАвтоматическойНастройки,
		|ОтправкаТолькоНаИдентификаторЭДО,
		|ТипПредупреждения,
		|ТребуетсяСоглашение,
		|ТребуетсяНовоеСоглашение,
		|ИмяФайлаСоглашенияНаРоуминг,
		|РекомендацияПоНастройке,
		|ИдентификаторОрганизации,
		|ИдентификаторКонтрагента,
		|СписокИдентификаторовКонтрагента,
		|КонтрагентИНН,
		|КонтрагентКПП,
		|СтатусПриглашенияПредставление,
		|НавигационнаяСсылкаНаПриглашение,
		|КартинкаСтатусаПодключения,
		|ВариантПотребностиСоглашения,
		|СвязьДоступна,
		|Абоненты,
		|ТребуетсяСоглашениеПриПервомПодключении,
		|ОбязательнаяОтправкаЗаявкиНаРоуминг,
		|ЗаявкаНаРоумингПринята,
		|ПриглашениеОтправлено");
	
	Если Не ЗначениеЗаполнено(ПараметрыСвязиИдентификаторов) Тогда
		Возврат ПараметрыОтправки;
	КонецЕсли;
	
	СтрокаПараметровСвязи = ПараметрыСвязиИдентификаторов[0];
	
	ЗаполнитьЗначенияСвойств(ПараметрыОтправки, СтрокаПараметровСвязи);
	ПараметрыОтправки.РоумингБезАвтоматическойНастройки = СтрокаПараметровСвязи.СвязьДоступна = 0
		Или СтрокаПараметровСвязи.ОбязательнаяОтправкаЗаявкиНаРоуминг
		Или (СтрокаПараметровСвязи.ТребуетсяСоглашениеПриПервомПодключении И Не СтрокаПараметровСвязи.ЗаявкаНаРоумингПринята);
	
	ПараметрыОтправки.СписокИдентификаторовКонтрагента  = СтрокаПараметровСвязи.СписокВыбора;
	ЗаполнитьПредупреждениеПоПараметрамСвязи(ПараметрыОтправки, СтрокаПараметровСвязи);
	
	ПараметрыОтправки.КартинкаСтатусаПодключения = ОбменСКонтрагентамиСлужебный.КартинкаСтатусаПодключения(
		СтрокаПараметровСвязи.СтатусПодключения);
	
	Возврат ПараметрыОтправки;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьПредупреждениеПоПараметрамСвязи(ПараметрыОтправки, ПараметрыСвязи)
	
	Если ПараметрыСвязи.СтатусПодключения > 0 Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ПовторноеПриглашение();
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыСвязи.ИдентификаторКонтрагента) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПараметрыСвязи.АбонентАктивен Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_НеактивнаяЗапись();
	ИначеЕсли Не ПараметрыСвязи.СертификатДействителен Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ОтсутствуютСертификаты();
	КонецЕсли;
	
	Если ПараметрыСвязи.ОператорыСовпадают Тогда
		Возврат;
		
	ИначеЕсли ПараметрыСвязи.СвязьДоступна = -1 Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ОбменНеПоддерживается();
		
	ИначеЕсли ПараметрыСвязи.ОтправкаТолькоНаИдентификаторЭДО
		И ПараметрыСвязи.ИдентификаторКонтрагента = ПараметрыСвязи.ОператорКонтрагента Тогда
		ПараметрыОтправки.ТипПредупреждения = ТипПредупреждения_ТребуетсяИдентификаторЭДО();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиОткрытьТекущиеДела(НавигационнаяСсылка, СтандартнаяОбработка);
	
	Если НавигационнаяСсылка = "ОткрытьТекущиеДелаЭДО" Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСКонтрагентамиКлиент.ОткрытьТекущиеДелаЭДО();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьШаблонСоглашениеНаРоуминг()
	
	Если Не ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПанельСоглашениеНаРоуминг.ТекущаяСтраница = Элементы.СтраницаСоглашениеНаРоумингОжидание;
	
	Оповещение = Новый ОписаниеОповещения("ПолучитьШаблонСоглашениеНаРоумингЗавершение", ЭтотОбъект);
	ПараметрыСоглашения = Новый Структура("ИдентификаторЭДО", ИдентификаторОрганизации);
	ОбменСКонтрагентамиСлужебныйКлиент.ПолучитьСоглашениеНаРоуминг(Оповещение, ПараметрыСоглашения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьШаблонСоглашениеНаРоумингЗавершение(Результат, Контекст) Экспорт
	Элементы.ПанельСоглашениеНаРоуминг.ТекущаяСтраница = Элементы.СтраницаСоглашениеНаРоумингНеВыбрано;
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьСоглашениеНаРоуминг()
	
	ПараметрыСоглашения = Новый Структура;
	ПараметрыСоглашения.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	Оповещение = Новый ОписаниеОповещения("ПрикрепитьСоглашениеНаРоумингЗавершение", ЭтотОбъект);
	ОбменСКонтрагентамиСлужебныйКлиент.ПрикрепитьСоглашениеНаРоуминг(Оповещение, ПараметрыСоглашения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьСоглашениеНаРоумингЗавершение(Результат, Контекст) Экспорт
	
	Если Результат.Статус Тогда
		ИмяФайлаСоглашенияНаРоуминг = Результат.ИмяФайла;
		ТребуетсяНовоеСоглашение = Ложь;
	ИначеЕсли ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
	НастроитьОсновнуюСтраницуФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьДанныеСоглашенияНаРоуминг(Знач ИдентификаторОрганизации)
	
	Возврат ОбменСКонтрагентамиСлужебный.УдалитьДанныеСоглашенияНаРоуминг(ИдентификаторОрганизации);
	
КонецФункции

&НаСервереБезКонтекста
Функция АдресДанныхСоглашенияНаРоуминг(Знач ИдентификаторОрганизации, Знач УникальныйИдентификатор)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭДО.ДанныеСоглашенияНаРоуминг КАК ДанныеСоглашенияНаРоуминг
		|ИЗ
		|	РегистрСведений.УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО
		|ГДЕ
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО = &ИдентификаторЭДО";
	
	Запрос.УстановитьПараметр("ИдентификаторЭДО", ИдентификаторОрганизации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Неопределено
	КонецЕсли;
	
	ДанныеФайла = Выборка.ДанныеСоглашенияНаРоуминг.Получить();
	Если ДанныеФайла = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ОтправитьПриглашение()
	
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСоглашенииНаРоуминг", ЭтотОбъект);
	Если ОткрылиПисьмоОВыбореОператора И Не ЗначениеЗаполнено(ИмяФайлаСоглашенияНаРоуминг)
		И ВариантПотребностиСоглашения = ПредопределенноеЗначение("Перечисление.ВариантыПотребностиСоглашенияНаРоуминг.НеОбязательно") Тогда
		ОбменСКонтрагентамиСлужебныйКлиент.ПоказатьВопросОПрикрепленииСоглашенияНаРоуминг(Оповещение);
	Иначе 
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОСоглашенииНаРоуминг(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОтправитьПриглашениеПослеОтветаНаВопросОСоглашенииНаРоуминг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПриглашениеПослеОтветаНаВопросОСоглашенииНаРоуминг()
	
	НачалоОтправкиПриглашения = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	НастроитьСтраницуОжидания();
	
	Оповещение = Новый ОписаниеОповещения("ОтправитьПриглашениеПослеПолученияМаркера", ЭтотОбъект);
	КонтекстОперации = ЭлектронноеВзаимодействиеСлужебныйКлиент.НовыйКонтекстОперации();
	ОбменСКонтрагентамиСлужебныйКлиент.ПолучитьНастройкиЭДОИПараметрыСертификатов(Оповещение,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторОрганизации),,, КонтекстОперации);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОтправитьПриглашениеПослеПолученияМаркера(Результат, Контекст) Экспорт
	
	Соответствие = Неопределено;
	Если Не (ТипЗнч(Результат) = Тип("Структура")
		И Результат.Свойство("СоответствиеПрофилейИПараметровСертификатов", Соответствие)
		И ТипЗнч(Соответствие) = Тип("Соответствие")
		И Соответствие[ИдентификаторОрганизации] <> Неопределено) Тогда
		
		КлючЗаписи = КлючУчетнойЗаписиОрганизации();
		
		ЭлементСписка = Элементы.ИдентификаторОрганизации.СписокВыбора.НайтиПоЗначению(ИдентификаторОрганизации);
		Если ЭлементСписка = Неопределено Тогда
			ПредставлениеИдентификатора = ИдентификаторОрганизации;
		Иначе
			ПредставлениеИдентификатора = ЭлементСписка.Представление;
		КонецЕсли;
		
		Если ОбменСКонтрагентамиДиагностикаКлиентСервер.ЕстьОшибки(Результат.КонтекстОперации) Тогда
			ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.ОбработатьОшибки(Результат.КонтекстОперации);
		Иначе 
			Если ОбменСКонтрагентамиСлужебныйКлиент.ПользовательОтказалсяОтАутентификации(Результат, ИдентификаторОрганизации) Тогда
				ТекстОшибки = НСтр("ru = 'Аутентификация в сервисе не была выполнена. Отправка приглашения не была произведена.'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
			Иначе 
				ТекстОшибки = НСтр("ru = 'Не удалось получить токен авторизации в сервисе 1С-ЭДО.
				|Необходимо проверить соединение с оператором в учетной записи ЭДО:'")
				+ Символы.ПС + ПредставлениеИдентификатора;
				ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(НСтр("ru = 'Отправка приглашений ЭДО.'"),
					ТекстОшибки, ТекстОшибки,,КлючЗаписи);
			КонецЕсли;
		КонецЕсли;
		
		РезультатОтправки = Новый Структура("Статус", "Ошибка");
		ОтправитьПриглашениеЗавершение(РезультатОтправки);
		Возврат;
	КонецЕсли;
	
	ОтправитьПриглашениеНаСервере(Соответствие);
	
	Оповещение = Новый ОписаниеОповещения("ОтправитьПриглашениеЗавершение", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПриглашениеНаСервере(Знач Маркеры)
	
	Приглашения = РегистрыСведений.ПриглашенияКОбменуЭлектроннымиДокументами.НоваяТаблицаПриглашенийКОтправке();
	
	НоваяСтрока = Приглашения.Добавить();
	НоваяСтрока.ИдентификаторОрганизации = ИдентификаторОрганизации;
	НоваяСтрока.Организация              = Организация;
	НоваяСтрока.Контрагент               = Контрагент;
	НоваяСтрока.ТребуетсяСоглашение      = ТребуетсяСоглашение;
	НоваяСтрока.ТекстПриглашения         = ТекстПриглашения;
	Если ТребуетсяЗаполнитьEmailОрганизации(ЭтаФорма) Тогда
		НоваяСтрока.EmailОрганизации = EmailОрганизации;
	КонецЕсли;
	
	Если ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО()
		ИЛИ ОтправкаТолькоНаИдентификаторЭДО Тогда
		
		Если РоумингБезАвтоматическойНастройки Тогда
			НоваяСтрока.ОператорЭДО = ОператорКонтрагента;
		Иначе
			НоваяСтрока.ИдентификаторКонтрагента = ИдентификаторКонтрагента;
			Если Не ЗапрещеноСоздаватьНастройкиЭДО Тогда // Форма открыта в сценарии, который предполагает создание настроек.
				НоваяСтрока.СоздаватьНастройкиЭДО = Истина;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта()
		ИЛИ ОтправкаНаТогоЖеОператора(ЭтотОбъект) Тогда
		
		НоваяСтрока.ЭлектроннаяПочта = ЭлектроннаяПочта;
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО() Тогда
		
		НоваяСтрока.ОператорЭДО = ОператорКонтрагента;
		
	КонецЕсли;
	
	Абонент = АбонентПоПриглашению(ЭтотОбъект);
	
	Если Абонент <> Неопределено Тогда
		НоваяСтрока.ПолучательИНН = Абонент.ИНН;
		НоваяСтрока.ПолучательКПП = Абонент.КПП;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Приглашения"   , Приглашения);
	ПараметрыПроцедуры.Вставить("СписокМаркеров", Маркеры);
	ПараметрыПроцедуры.Вставить("Организация"   , Организация);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Отправка приглашений ЭДО'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ПриглашенияКОбменуЭлектроннымиДокументами.ОтправитьСписокПриглашений",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПриглашениеЗавершение(Результат, Контекст = Неопределено) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат = Неопределено
		Или Результат.Статус <> "Выполнено" Тогда
		НастроитьСтраницуОшибки(ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	РезультатОтправки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	Если РезультатОтправки.КоличествоОтправлено = 0 Тогда
		НастроитьСтраницуОшибки(ЭтотОбъект);
		ЭлектронноеВзаимодействиеОбработкаОшибокКлиент.ОбработатьОшибки(РезультатОтправки.КонтекстОперации);
		Возврат;
	КонецЕсли;
	
	ПриглашениеОтправлено = Истина;
	
	НастроитьСтраницуВыполнено();
	
	Оповестить("ОбновитьСостояниеПриглашений");
	
	ОповеститьОбИзмененииПриглашения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененииПриглашения()
	КлючЗаписи = ОбменСКонтрагентамиСлужебныйКлиент.КлючЗаписиПриглашения(
		ИдентификаторОрганизации, ИдентификаторКонтрагента);
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(КлючЗаписи);
КонецПроцедуры

&НаКлиенте
Функция РезультатОтправкиПриглашения()
	
	Результат = Новый Структура;
	Результат.Вставить("Организация", Организация);
	Результат.Вставить("Контрагент", Контрагент);
	Результат.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	Результат.Вставить("ИдентификаторКонтрагента");
	Результат.Вставить("ЭлектроннаяПочта");
	Результат.Вставить("ОператорКонтрагента");
	Результат.Вставить("ОткрылиПисьмоОВыбореОператора", ОткрылиПисьмоОВыбореОператора);
	
	Если ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ИдентификаторЭДО()
		ИЛИ ОтправкаТолькоНаИдентификаторЭДО Тогда
		
		Результат.Вставить("ИдентификаторКонтрагента", ИдентификаторКонтрагента);
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ЭлектроннаяПочта()
		ИЛИ ОтправкаНаТогоЖеОператора(ЭтотОбъект) Тогда
		
		Результат.Вставить("ЭлектроннаяПочта", ЭлектроннаяПочта);
		
	ИначеЕсли ТипИнформацииОКонтрагенте = ТипИнформацииОКонтрагенте_ОператорЭДО() Тогда
		
		Результат.Вставить("ОператорКонтрагента", ОператорКонтрагента);
		
	КонецЕсли;
	
	Результат.Вставить("ТекстПриглашения", ТекстПриглашения);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(Знач ИдентификаторЗадания)
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция Идентификатор_Создать()
	Возврат "Создать";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТребуетсяЗаполнитьEmailОрганизации(Форма) 
	
	Результат = Ложь;
	
	Если Форма.ТребуетсяСоглашениеПриПервомПодключении И Форма.ЗаявкаНаРоумингПринята
		И Не Форма.ОбязательнаяОтправкаЗаявкиНаРоуминг Тогда
		
		Результат = Ложь;
	Иначе
		Результат = Форма.РоумингБезАвтоматическойНастройки И Не Форма.РежимНастройки;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ТипыИнформацииОКонтрагенте

&НаКлиентеНаСервереБезКонтекста
Функция ТипИнформацииОКонтрагенте_ОператорЭДО()
	Возврат "ОператорЭДО";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипИнформацииОКонтрагенте_ИдентификаторЭДО()
	Возврат "ИдентификаторЭДО";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипИнформацииОКонтрагенте_ЭлектроннаяПочта()
	Возврат "ЭлектроннаяПочта";
КонецФункции

#КонецОбласти

#Область ТипыПредупреждений

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ВыбраныАвтоматически()
	Возврат "ВыбраныАвтоматически";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ОбменНеПоддерживается()
	Возврат "ОбменНеПоддерживается";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_НеактивнаяЗапись()
	Возврат "НеактивнаяЗапись";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ОтсутствуютСертификаты()
	Возврат "ОтсутствуютСертификаты";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ТребуетсяИдентификаторЭДО()
	Возврат "ТребуетсяИдентификаторЭДО";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТипПредупреждения_ПовторноеПриглашение()
	Возврат "ПовторноеПриглашение";
КонецФункции

#КонецОбласти

#Область Абоненты

&НаКлиентеНаСервереБезКонтекста
Функция АбонентПоПриглашению(Форма)
	
	Если Форма.Абоненты <> Неопределено Тогда
		Для каждого Элемент Из Форма.Абоненты Цикл
			
			Абонент = Элемент.Значение;
			
			Если Абонент.Идентификатор = Форма.ИдентификаторКонтрагента Тогда
				Возврат Абонент;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ПроверитьСоответствиеАбонентаИКонтрагента(Форма)
	
	ПоказатьПредупреждение = Ложь;
	
	Абонент = АбонентПоПриглашению(Форма);
	
	Если Абонент <> Неопределено Тогда
		Если Форма.КонтрагентИНН = Абонент.ИНН И Форма.КонтрагентКПП <> Абонент.КПП Тогда
			ПоказатьПредупреждение = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ГруппаПредупреждениеПроКПП", "Видимость", ПоказатьПредупреждение);
	
КонецПроцедуры

#КонецОбласти

#Область КонтекстныеПодсказки

&НаСервере
Процедура СформироватьКонтекст(КатегорииПересчета = Неопределено) 
	
	Если Не КонтекстныеПодсказкиБЭД.ФункционалКонтекстныхПодсказокДоступен() Тогда 
		Возврат;
	КонецЕсли;   
	
	Категория = КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_КодОператораКонтрагента();
	Если ЗначениеЗаполнено(Категория)  
			И ?(ЗначениеЗаполнено(КатегорииПересчета), КатегорииПересчета.Найти(Категория) <> Неопределено, Истина) Тогда 
		Значение = КонтекстныеПодсказкиБЭДКатегоризация.КодОператораКонтрагента(Контрагент); 
		КонтекстныеПодсказкиБЭДКлиентСервер.УстановитьЗначениеКатегорииКонтекстаФормы(ЭтаФорма, Категория, Значение);
	КонецЕсли;
	
	Категория = КонтекстныеПодсказкиБЭДКатегоризацияВызовСервера.Категория_КодОператораУчетнойЗаписиОрганизации();
	Если ЗначениеЗаполнено(Категория)  
			И ?(ЗначениеЗаполнено(КатегорииПересчета), КатегорииПересчета.Найти(Категория) <> Неопределено, Истина) Тогда 
		Значение = КонтекстныеПодсказкиБЭДКатегоризация.КодОператораУчетнойЗаписиОрганизации(Организация); 
		КонтекстныеПодсказкиБЭДКлиентСервер.УстановитьЗначениеКатегорииКонтекстаФормы(ЭтаФорма, Категория, Значение);
	КонецЕсли;
	
	КонтекстныеПодсказкиБЭД.ОтобразитьАктуальныеДляКонтекстаНовости(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПанельКонтекстныхНовостей_ЭлементУправленияНажатие(Элемент)
	
	КонтекстныеПодсказкиБЭДКлиент.ЭлементУправленияНажатие(ЭтотОбъект, Элемент);
	
КонецПроцедуры

// Процедура показывает новости, требующие прочтения (важные и очень важные).
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";	
	КонтекстныеПодсказкиБЭДКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтотОбъект, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПанельКонтекстныхНовостейОбработкаНавигационнойСсылки(Элемент, ПараметрНавигационнаяСсылка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	КонтекстныеПодсказкиБЭДКлиент.ПанельКонтекстныхНовостей_ЭлементПанелиНовостейОбработкаНавигационнойСсылки(
		ЭтотОбъект,
		Элемент,
		ПараметрНавигационнаяСсылка,
		СтандартнаяОбработка);

КонецПроцедуры
	
#КонецОбласти

#КонецОбласти