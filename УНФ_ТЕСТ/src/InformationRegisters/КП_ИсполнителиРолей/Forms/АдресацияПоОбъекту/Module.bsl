////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьДанныеЭлементов()
	
	Если ОсновнойОбъектАдресации <> Неопределено И ОсновнойОбъектАдресации <> "" Тогда
		Элементы.ОсновнойОбъектАдресации.Заголовок = ОсновнойОбъектАдресации.Метаданные().ПредставлениеОбъекта;
	КонецЕсли;	
	ВыборкаЗапроса = КП_Процессы.ВыбратьРолиСКоличествомИсполнителей(ОсновнойОбъектАдресации);
	СписокОбъект = РеквизитФормыВЗначение("Список");
	СписокОбъект.Очистить();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ТипЗначения = ВыборкаЗапроса.ТипыОсновногоОбъектаАдресации.ТипЗначения;
		ВключаетТип = Истина;
		Если ОсновнойОбъектАдресации <> Неопределено Тогда
			ВключаетТип = ТипЗначения <> Неопределено И ТипЗначения.СодержитТип(ТипЗнч(ОсновнойОбъектАдресации));
		КонецЕсли;
		Если ВключаетТип Тогда
			НоваяСтрока = СписокОбъект.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапроса, "Исполнители,Роль,РольСсылка"); 
		КонецЕсли;
	КонецЦикла;
	СписокОбъект.Сортировать("Роль");
	Для каждого СтрокаСписка Из СписокОбъект Цикл
		Если СтрокаСписка.Исполнители = 0 Тогда
			СтрокаСписка.ИсполнителиСтрока = НСтр("ru='не заданы';en='not specified'");
			СтрокаСписка.Картинка = 1;
		ИначеЕсли СтрокаСписка.Исполнители = 1 Тогда
			СтрокаСписка.ИсполнителиСтрока = Строка(КП_Процессы.ВыбратьИсполнителя(ОсновнойОбъектАдресации, СтрокаСписка.РольСсылка));
			СтрокаСписка.Картинка = -1;
		Иначе
			СтрокаСписка.ИсполнителиСтрока =
			  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			  НСтр("ru='%1 чел';en='%1 pax'"), Строка(СтрокаСписка.Исполнители) );
			
			СтрокаСписка.Картинка = -1;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(СписокОбъект, "Список");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНазначенияВыполнить()
	
	Назначение = Элементы.Список.ТекущиеДанные;
	Если Назначение = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Необходимо выбрать роль в списке.';en='You must select a role from the list.'"));
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.КП_ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли", 
		Новый Структура("ОсновнойОбъектАдресации,Роль", 
			ОсновнойОбъектАдресации, 
			Назначение.РольСсылка),,,,, Неопределено);
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ОсновнойОбъектАдресации <> Неопределено Тогда
		ОсновнойОбъектАдресации = Параметры.ОсновнойОбъектАдресации;
	Иначе	
		Элементы.ОсновнойОбъектАдресации.Видимость = Ложь;
	КонецЕсли;
	
	ОбновитьДанныеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "РолеваяАдресацияИзменена" Тогда
		ОбновитьДанныеЭлементов();
 	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьНазначенияВыполнить();
КонецПроцедуры

&НаКлиенте
Процедура ПолеОсновнойОбъектАдресацииПриИзменении(Элемент)
	ОбновитьДанныеЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ВсеНазначенияВыполнить()
	
	ОткрытьФорму("РегистрСведений.КП_ИсполнителиЗадач.ФормаСписка", 
		Новый Структура("Отбор", Новый Структура("ОсновнойОбъектАдресации", ОсновнойОбъектАдресации)),
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполнить()
	ОбновитьДанныеЭлементов();
КонецПроцедуры
