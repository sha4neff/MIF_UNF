#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиОтчета.ПрограммноеИзменениеФормыОтчета = Истина;
	НастройкиВариантов["Основной"].Вставить("РежимПериода", "ЗаПериод");
	НастройкиВариантов["ОценкаСтоимостиСклада"].Вставить("РежимПериода", "НаДату");
	
	ЗаполнитьПредопределенныеВариантыОформления(НастройкиВариантов);
	УстановитьТегиВариантов(НастройкиВариантов);
	ДобавитьОписанияСвязанныхПолей(НастройкиВариантов);
	
КонецПроцедуры

Процедура ОбновитьНастройкиНаФорме(НастройкиОтчета, НастройкиСКД, Форма) Экспорт
	
	ДобавитьПолеВыбораВидаЦен(НастройкиСКД, Форма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СтПериод");
	ПараметрНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрПериодСреза = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодСреза");
	
	ПериодПостроения = ПараметрПериод.Значение;
	Если КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Свойство("Период") Тогда
		// Срез на дату
		НаДату = ПериодПостроения.ДатаОкончания;
		Если ЗначениеЗаполнено(НаДату) Тогда
			НаДату = КонецДня(НаДату);
		Иначе
			НаДату = Дата(3999, 12, 31, 23, 59, 59);
		КонецЕсли; 
		ПериодПостроения.ДатаНачала = НаДату;
		ПериодПостроения.ДатаОкончания = НаДату;
		ПараметрПериод.Значение = ПериодПостроения;
		ПараметрНачалоПериода.Значение = НаДату;
		ПараметрКонецПериода.Значение = НаДату;
		ПараметрПериодСреза.Значение = НаДату;
	КонецЕсли; 
	
	ОтчетыУНФ.ПриКомпоновкеРезультата(КомпоновщикНастроек, СхемаКомпоновкиДанных, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьПолеВыбораВидаЦен(НастройкиСКД, Форма)
	
	ПараметрВидЦен = НастройкиСКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидЦены"));
	ЗначениеПоУмолчанию = Справочники.ВидыЦен.Оптовая;
	Если ПараметрВидЦен<>Неопределено И ПараметрВидЦен.Использование И ЗначениеЗаполнено(ПараметрВидЦен.Значение) Тогда
		ЗначениеПоУмолчанию = ПараметрВидЦен.Значение;
	КонецЕсли;
	Стр = Форма.ПоляНастроек.ПолучитьЭлементы().Добавить();
	Стр.Тип = "Параметр";
	Стр.Поле = "ВидЦены";
	Стр.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВидыЦен");
	Стр.Заголовок = НСтр("ru = 'Вид цены'");
	Стр.ВидЭлемента = "Поле";
	Стр.Реквизиты = Новый Структура;
	Стр.Элементы = Новый Структура;
	Стр.ДополнительныеПараметры = Новый Структура;
	ИмяРеквизита = "ПараметрВидЦены";
	Стр.Реквизиты.Вставить(ИмяРеквизита, ЗначениеПоУмолчанию);
	МассивРеквизитов = Новый Массив;
	Для каждого Элемент Из Стр.Реквизиты Цикл
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Элемент.Ключ, Стр.ТипЗначения,, Стр.Заголовок));
	КонецЦикла; 
	Стр.Создан = Истина;
	Форма.ИзменитьРеквизиты(МассивРеквизитов);
	Форма[ИмяРеквизита] = ЗначениеПоУмолчанию;
	НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра(Стр.Поле, ЗначениеПоУмолчанию);
	Элемент = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Форма.Элементы.ГруппаПараметрыЭлементы);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элемент.ПутьКДанным = ИмяРеквизита;
	Элемент.КнопкаОткрытия = Ложь;
	Элемент.КнопкаВыбора = Ложь;
	Элемент.КнопкаСоздания = Ложь;
	Элемент.БыстрыйВыбор = Истина;
	Элемент.ЦветРамки = ЦветаСтиля.НедоступныеДанныеЦвет;
	Элемент.ПодсказкаВвода = Стр.Заголовок;
	Элемент.Ширина = 23;
	Элемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрПриИзменении");
	Стр.Элементы.Вставить(Элемент.Имя, Элемент.ПутьКДанным);

КонецПроцедуры

Процедура ЗаполнитьПредопределенныеВариантыОформления(НастройкиВариантов)
	
	МассивПолейСумм = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("СуммаНачальныйОстаток,СуммаПриход,СуммаРасход,СуммаКонечныйОстаток,СтоимостьЕдиницы,ТекущаяЦена");
	МассивПолейКоличеств = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("КоличествоНачальныйОстаток,КоличествоПриход,КоличествоРасход,КоличествоКонечныйОстаток");
	
	Для каждого НастройкиТекВарианта Из НастройкиВариантов Цикл
		
		ВариантыОформления = НастройкиТекВарианта.Значение.ВариантыОформления;
		ОтчетыУНФ.ДобавитьВариантыОформленияСумм(ВариантыОформления, МассивПолейСумм);
		ОтчетыУНФ.ДобавитьВариантыОформленияКоличества(ВариантыОформления, МассивПолейКоличеств);
			
	КонецЦикла; 
	
КонецПроцедуры

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	НастройкиВариантов["Основной"].Теги = НСТР("ru = 'Запасы,Закупки,Склады,Номенклатура,Остатки,Цены'");
	НастройкиВариантов["ОценкаСтоимостиСклада"].Теги = НСтр("ru = 'Запасы,Закупки,Склады,Номенклатура,Остатки,Цены'");
	
КонецПроцедуры

Процедура ДобавитьОписанияСвязанныхПолей(НастройкиВариантов)
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["Основной"].СвязанныеПоля, "СтруктурнаяЕдиница", "Справочник.СтруктурныеЕдиницы", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["ОценкаСтоимостиСклада"].СвязанныеПоля, "СтруктурнаяЕдиница", "Справочник.СтруктурныеЕдиницы", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ЭтоОтчетУНФ = Истина;

Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристики") Тогда
	ОтчетыУНФ.ОграничитьИспользованиеПоля(СхемаКомпоновкиДанных, "Характеристика");
КонецЕсли; 

#КонецОбласти
	
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли