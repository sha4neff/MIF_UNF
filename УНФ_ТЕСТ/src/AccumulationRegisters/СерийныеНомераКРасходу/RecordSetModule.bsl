#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СерийныеНомераКРасходу.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияСерийныеНомераКРасходуИзменение")
			ИЛИ СтруктураВременныеТаблицы.Свойство("ДвиженияСерийныеНомераКРасходуИзменение")
			И НЕ СтруктураВременныеТаблицы.ДвиженияСерийныеНомераКРасходуИзменение Тогда

		// Если временная таблица "ДвиженияСерийныеНомераКРасходуИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияСерийныеНомераКРасходуПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	СерийныеНомераКРасходу.НомерСтроки КАК НомерСтроки,
			|	СерийныеНомераКРасходу.Номенклатура КАК Номенклатура,
			|	СерийныеНомераКРасходу.Характеристика КАК Характеристика,
			|	СерийныеНомераКРасходу.Партия КАК Партия,
			|	СерийныеНомераКРасходу.СерийныйНомер КАК СерийныйНомер,
			|	СерийныеНомераКРасходу.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	ВЫБОР
			|		КОГДА СерийныеНомераКРасходу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА СерийныеНомераКРасходу.Количество
			|		ИНАЧЕ -СерийныеНомераКРасходу.Количество
			|	КОНЕЦ КАК КоличествоПередЗаписью
			|ПОМЕСТИТЬ ДвиженияСерийныеНомераКРасходуПередЗаписью
			|ИЗ
			|	РегистрНакопления.СерийныеНомераКРасходу КАК СерийныеНомераКРасходу
			|ГДЕ
			|	СерийныеНомераКРасходу.Регистратор = &Регистратор
			|	И &Замещение");

		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);

		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();

	Иначе

	// Если временная таблица "ДвиженияСерийныеНомераКРасходуИзменение" существует и содержит записи
	// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
	// Текущее состояние набора и текущее состояние изменений помещаются во временную таблицу "ДвиженияСерийныеНомераКРасходуПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно первоначального.
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	ДвиженияСерийныеНомераКРасходуИзменение.НомерСтроки КАК НомерСтроки,
			|	ДвиженияСерийныеНомераКРасходуИзменение.Номенклатура КАК Номенклатура,
			|	ДвиженияСерийныеНомераКРасходуИзменение.Характеристика КАК Характеристика,
			|	ДвиженияСерийныеНомераКРасходуИзменение.Партия КАК Партия,
			|	ДвиженияСерийныеНомераКРасходуИзменение.СерийныйНомер КАК СерийныйНомер,
			|	ДвиженияСерийныеНомераКРасходуИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|	ДвиженияСерийныеНомераКРасходуИзменение.КоличествоПередЗаписью КАК КоличествоПередЗаписью
			|ПОМЕСТИТЬ ДвиженияСерийныеНомераКРасходуПередЗаписью
			|ИЗ
			|	ДвиженияСерийныеНомераКРасходуИзменение КАК ДвиженияСерийныеНомераКРасходуИзменение
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СерийныеНомераКРасходу.НомерСтроки,
			|	СерийныеНомераКРасходу.Номенклатура,
			|	СерийныеНомераКРасходу.Характеристика,
			|	СерийныеНомераКРасходу.Партия,
			|	СерийныеНомераКРасходу.СерийныйНомер,
			|	СерийныеНомераКРасходу.СтруктурнаяЕдиница,
			|	ВЫБОР
			|		КОГДА СерийныеНомераКРасходу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|			ТОГДА СерийныеНомераКРасходу.Количество
			|		ИНАЧЕ -СерийныеНомераКРасходу.Количество
			|	КОНЕЦ
			|ИЗ
			|	РегистрНакопления.СерийныеНомераКРасходу КАК СерийныеНомераКРасходу
			|ГДЕ
			|	СерийныеНомераКРасходу.Регистратор = &Регистратор
			|	И &Замещение");

		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);

		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();

	КонецЕсли;

	// Временная таблица "ДвиженияСерийныеНомераКРасходуИзменение" уничтожается
	// Удаляется информация о ее существовании.
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияСерийныеНомераКРасходуИзменение") Тогда

		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияСерийныеНомераКРасходуИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияСерийныеНомераКРасходуИзменение");

	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияСерийныеНомераКРасходуИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияСерийныеНомераКРасходуИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияСерийныеНомераКРасходуИзменение.Номенклатура КАК Номенклатура,
	|	ДвиженияСерийныеНомераКРасходуИзменение.Характеристика КАК Характеристика,
	|	ДвиженияСерийныеНомераКРасходуИзменение.Партия КАК Партия,
	|	ДвиженияСерийныеНомераКРасходуИзменение.СерийныйНомер КАК СерийныйНомер,
	|	ДвиженияСерийныеНомераКРасходуИзменение.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ДвиженияСерийныеНомераКРасходуИзменение.КоличествоПередЗаписью) КАК КоличествоПередЗаписью,
	|	СУММА(ДвиженияСерийныеНомераКРасходуИзменение.КоличествоИзменение) КАК КоличествоИзменение,
	|	СУММА(ДвиженияСерийныеНомераКРасходуИзменение.КоличествоПриЗаписи) КАК КоличествоПриЗаписи
	|ПОМЕСТИТЬ ДвиженияСерийныеНомераКРасходуИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.Номенклатура КАК Номенклатура,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.Характеристика КАК Характеристика,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.Партия КАК Партия,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.СерийныйНомер КАК СерийныйНомер,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение,
	|		0 КАК КоличествоПриЗаписи
	|	ИЗ
	|		ДвиженияСерийныеНомераКРасходуПередЗаписью КАК ДвиженияСерийныеНомераКРасходуПередЗаписью
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.НомерСтроки,
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.Номенклатура,
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.Характеристика,
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.Партия,
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.СерийныйНомер,
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.СтруктурнаяЕдиница,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияСерийныеНомераКРасходуПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияСерийныеНомераКРасходуПриЗаписи.Количество
	|			ИНАЧЕ ДвиженияСерийныеНомераКРасходуПриЗаписи.Количество
	|		КОНЕЦ,
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.Количество
	|	ИЗ
	|		РегистрНакопления.СерийныеНомераКРасходу КАК ДвиженияСерийныеНомераКРасходуПриЗаписи
	|	ГДЕ
	|		ДвиженияСерийныеНомераКРасходуПриЗаписи.Регистратор = &Регистратор) КАК
	|		ДвиженияСерийныеНомераКРасходуИзменение
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияСерийныеНомераКРасходуИзменение.Номенклатура,
	|	ДвиженияСерийныеНомераКРасходуИзменение.Характеристика,
	|	ДвиженияСерийныеНомераКРасходуИзменение.Партия,
	|	ДвиженияСерийныеНомераКРасходуИзменение.СерийныйНомер,
	|	ДвиженияСерийныеНомераКРасходуИзменение.СтруктурнаяЕдиница
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияСерийныеНомераКРасходуИзменение.КоличествоИзменение) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Партия,
	|	СерийныйНомер,
	|	СтруктурнаяЕдиница");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияСерийныеНомераКРасходуИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияСерийныеНомераКРасходуИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияСерийныеНомераКРасходуПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияСерийныеНомераКРасходуПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли