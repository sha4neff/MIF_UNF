
&НаКлиенте
Процедура УстановитьЕдинственногоИсполнителя(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВидПроцесса) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Please specify the type of process.';ru='Сначала укажите вид процесса.'"), 60, КП_ОбщееКлиент.ЗаголовокДиалога());				
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Исполнитель) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Please specify the user.';ru='Сначала укажите исполнителя.'"), 60, КП_ОбщееКлиент.ЗаголовокДиалога());				
		Возврат;
		
	КонецЕсли;

	ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьЕдинственногоИсполнителяЗавершение", ЭтотОбъект), НСтр("en='In the form of the ""';ru='Внимание! В виде процесса ""'")+СокрЛП(ВидПроцесса)+""" "+Символы.ПС+НСтр("en='all users will be replaced by a single ""';ru='все исполнители будут заменены на единственного ""'")+СокрЛП(Исполнитель)+НСтр("ru='""! Продолжить?'; en='Do you want to continue?';"), РежимДиалогаВопрос.ДаНет,,,КП_ОбщееКлиент.ЗаголовокДиалога());	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЕдинственногоИсполнителяЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса=КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    УстановитьИсполнителяСервером();

КонецПроцедуры

&НаСервере
Процедура УстановитьИсполнителяСервером()
	
	ИднИсполнителя=КП_ОбщееСервер.СформироватьИднИсполнителя(Исполнитель);
	
	//изменим основной процесс
	ВидОбъект=ВидПроцесса.ПолучитьОбъект();
	Если СокрЛП(ВидОбъект.Контролер)<>"" Тогда
		//если или было какое то значение
		ВидОбъект.Контролер=Исполнитель;
	КонецЕсли;
	
	ВидОбъект.ИсточникОсновныхИсполнителей=0; //список основных исполнителей
	Если ВидОбъект.ОсновныеИсполнители.Количество()>0 Тогда
		Для Каждого СтрокаТЧ Из ВидОбъект.ОсновныеИсполнители Цикл
			СтрокаТЧ.ТочкаАдресации=Исполнитель;
			СтрокаТЧ.ИднИсполнителя=ИднИсполнителя;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Попытка
		ВидОбъект.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	//изменим точки процесса
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_ТочкиПроцессов.Ссылка
	                    |ИЗ
	                    |	Справочник.КП_ТочкиПроцессов КАК КП_ТочкиПроцессов
	                    |ГДЕ
	                    |	КП_ТочкиПроцессов.ВладелецТочки = &ВладелецТочки
	                    |	И КП_ТочкиПроцессов.ПометкаУдаления = ЛОЖЬ");
						
	Запрос.УстановитьПараметр("ВладелецТочки", ВидПроцесса);
	
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		ТочкаКБП=Выборка.Ссылка;
		ТочкаОбъект=ТочкаКБП.ПолучитьОбъект();

		Для Каждого СтрокаТЧ Из ТочкаОбъект.ИсполнителиТочки Цикл
			СтрокаТЧ.ТочкаАдресации=Исполнитель;
			СтрокаТЧ.ИднИсполнителя=ИднИсполнителя;
			
		КонецЦикла;
		
		Попытка
			ТочкаОбъект.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Recorded point ""';ru='Записана точка ""'")+СокрЛП(ТочкаКБП)+""".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
	КонецЦикла;
	
	//обработаем реквизиты с типом Пользователь
	НаименованиеСправочникаПользователи="Справочник.Пользователи";
	ТипРеквизита=Справочники.КП_СписокМетаданных.НайтиПоРеквизиту("ПолноеНаименование", НаименованиеСправочникаПользователи);
	Если ТипРеквизита.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='The directory list metadata element was not found with the full name ""';ru='Внимание! В справочнике списка метаданных не найден элемент с полным наименованием ""'")+НаименованиеСправочникаПользователи+""".");
		Возврат;
		
	КонецЕсли;
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_ДополнительныеРеквизиты.Ссылка
	                    |ИЗ
	                    |	Справочник.КП_ДополнительныеРеквизиты КАК КП_ДополнительныеРеквизиты
	                    |ГДЕ
	                    |	КП_ДополнительныеРеквизиты.ЗначениеПоУмолчанию <> &ЗначениеПоУмолчанию
	                    |	И КП_ДополнительныеРеквизиты.ТипРеквизита = &ТипРеквизита
	                    |	И КП_ДополнительныеРеквизиты.ПометкаУдаления = ЛОЖЬ
	                    |	И КП_ДополнительныеРеквизиты.Владелец = &Владелец");
						
	Запрос.УстановитьПараметр("Владелец", ВидПроцесса);
	Запрос.УстановитьПараметр("ЗначениеПоУмолчанию", Справочники.Пользователи.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТипРеквизита", ТипРеквизита);
	
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		РеквизитОбъект=Выборка.Ссылка.ПолучитьОбъект();
		РеквизитОбъект.ЗначениеПоУмолчанию=Исполнитель;
		
		Попытка
			РеквизитОбъект.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Logged props ""';ru='Записан реквизит ""'")+СокрЛП(РеквизитОбъект)+""".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
	
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Update process is complete the form.';ru='Обновление вида процесса завершено.'"));
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВидПроцесса", ВидПроцесса);
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтправкуПоЭлПочтеИзТочекОбработки(Команда)
	Если НЕ ЗначениеЗаполнено(ВидПроцесса) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Please specify the type of process.';ru='Сначала укажите вид процесса.'"), 60, КП_ОбщееКлиент.ЗаголовокДиалога());				
		Возврат;
		
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("СнятьОтправкуПоЭлПочтеИзТочекОбработкиЗавершение", ЭтотОбъект), НСтр("en='In the process ""';ru='Внимание! В виде процесса ""';")+СокрЛП(ВидПроцесса)+""" "+Символы.ПС+НСтр("en='all sending points will be disabled. Do you want to continue?';ru='во всех точках отправки сообщений будет отключена отправка по эл. почте! Продолжить?'"), РежимДиалогаВопрос.ДаНет,,,КП_ОбщееКлиент.ЗаголовокДиалога());	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтправкуПоЭлПочтеИзТочекОбработкиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса=КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    СнятьОтправкуПоЭлПочтеСервером();

КонецПроцедуры

&НаСервере
Процедура СнятьОтправкуПоЭлПочтеСервером()
	//изменим точки процесса
	
	Запрос=Новый Запрос("ВЫБРАТЬ
	                    |	КП_ТочкиПроцессов.Ссылка
	                    |ИЗ
	                    |	Справочник.КП_ТочкиПроцессов КАК КП_ТочкиПроцессов
	                    |ГДЕ
	                    |	КП_ТочкиПроцессов.ВладелецТочки = &ВладелецТочки
	                    |	И КП_ТочкиПроцессов.ПометкаУдаления = ЛОЖЬ
	                    |	И КП_ТочкиПроцессов.ТипТочки = &ТипТочки
	                    |	И КП_ТочкиПроцессов.ТипОбработки = &ТипОбработки
	                    |	И КП_ТочкиПроцессов.ОтправкаСообщенияПоЭлПочте = ИСТИНА");
						
	Запрос.УстановитьПараметр("ВладелецТочки", ВидПроцесса);
	Запрос.УстановитьПараметр("ТипТочки", Перечисления.КП_ВидыТочекБизнесПроцесса.Обработка);
	Запрос.УстановитьПараметр("ТипОбработки", 6); //отправка по электронной почте
	
	Выборка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		ТочкаКБП=Выборка.Ссылка;
		ТочкаОбъект=ТочкаКБП.ПолучитьОбъект();

		ТочкаОбъект.ОтправкаСообщенияПоЭлПочте=Ложь;
		
		Попытка
			ТочкаОбъект.Записать();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("en='Recorded point ""';ru='Записана точка ""'")+СокрЛП(ТочкаКБП)+""".");
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры
