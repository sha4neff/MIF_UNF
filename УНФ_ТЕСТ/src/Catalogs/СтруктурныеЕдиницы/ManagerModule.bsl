#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Функция возвращает список имен «ключевых» реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ТипСтруктурнойЕдиницы");
	
	Возврат Результат;
	
КонецФункции // ПолучитьБлокируемыеРеквизитыОбъекта()

// Функция возвращает количество складов или подразделений
//
// Параметры:
//  ТипСтруктурнойЕдиницы	 - ПеречислениеСсылка.ТипСтруктурнойЕдиницы	 - склад или подразделение
//  ВключаяОсновное			 - булево	 - учитывать основной склад или подразделение
// 
// Возвращаемое значение:
//  число - количество структурных единиц заданного типа
//
Функция КоличествоСтруктурныхЕдиниц(ТипСтруктурнойЕдиницы, ВключаяОсновное = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипСтруктурнойЕдиницы", ТипСтруктурнойЕдиницы);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(СтруктурныеЕдиницы.Ссылка) КАК Количество
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = &ТипСтруктурнойЕдиницы";
		
	Если Не ВключаяОсновное Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|	И СтруктурныеЕдиницы.Ссылка <> &ОсновноеЗначение";
		
		Запрос.УстановитьПараметр("ОсновноеЗначение",
			?(ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение,
			Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение,
			Справочники.СтруктурныеЕдиницы.ОсновнойСклад));
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Выборка.Количество = Null, 0, Выборка.Количество);
	
КонецФункции

Функция ПолучитьСпециальныйНалоговыйрежим(Организация, СтруктурнаяЕдиница, Дата = Неопределено) Экспорт
	
	ПрименяетсяЕНВД = РегистрыСведений.ПримененияЕНВД.ПрименяетсяЕНВД(Организация, СтруктурнаяЕдиница, ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Если ПрименяетсяЕНВД Тогда
		СпециальныйНалоговыйРежим = Перечисления.СпециальныеНалоговыеРежимы.ЕНВД;
	Иначе
		СпециальныйНалоговыйРежим = Перечисления.СпециальныеНалоговыеРежимы.НеПрименяется;
	КонецЕсли;
	
	Возврат СпециальныйНалоговыйРежим;
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли