
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОтборНедействительная(ЭтотОбъект);
	
	ОсновноеПодразделение	= УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновноеПодразделение");
	ОсновнойСклад			= УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ОсновнойСклад");
	
	ОсновныеСтруктурныеЕдиницы = Новый Массив;
	ОсновныеСтруктурныеЕдиницы.Добавить(ОсновноеПодразделение);
	ОсновныеСтруктурныеЕдиницы.Добавить(ОсновнойСклад);
	Список.Параметры.УстановитьЗначениеПараметра("ОсновныеСтруктурныеЕдиницы", ОсновныеСтруктурныеЕдиницы);
	
	ОтображатьПодразделение = Истина;
	ОтображатьСклад = Истина;
	
	Если Параметры.Отбор.Свойство("ТипСтруктурнойЕдиницы") Тогда
		
		ОтображатьПодразделение = Ложь;
		ОтображатьСклад = Ложь;
		
		Если ТипЗнч(Параметры.Отбор.ТипСтруктурнойЕдиницы) = Тип("ПеречислениеСсылка.ТипыСтруктурныхЕдиниц") Тогда
			
			ОтображатьПодразделение = Параметры.Отбор.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение;
			ОтображатьСклад = Не ОтображатьПодразделение;
			
		Иначе
			
			Для Каждого ЭлементМассива Из Параметры.Отбор.ТипСтруктурнойЕдиницы Цикл
				Если ЭлементМассива = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
					ОтображатьПодразделение = Истина;
				Иначе
					ОтображатьСклад = Истина;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокиЗаголовкаФормы = Новый Массив;
	Если ОтображатьСклад Тогда
		СтрокиЗаголовкаФормы.Добавить(НСтр("ru='Склады'"));
	КонецЕсли;
	Если ОтображатьПодразделение Тогда
		СтрокиЗаголовкаФормы.Добавить(НСтр("ru='Подразделения'"));
	КонецЕсли;
	Заголовок = СтрСоединить(СтрокиЗаголовкаФормы, ", ");
	
	Элементы.ФормаИспользоватьКакОсновноеПодразделение.Видимость	= ОтображатьПодразделение;
	Элементы.ФормаИспользоватьКакОсновнойСклад.Видимость			= ОтображатьСклад;
	Элементы.ОрдерныйСклад.Видимость								= ОтображатьСклад;
	
	Элементы.Организация.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьСинхронизациюДанных");
	
	ИерархияТипов = Ложь;
	Если НЕ (ОтображатьСклад И ОтображатьПодразделение) Тогда
		ИерархияТипов = ПроверитьИерархиюТипов();
	КонецЕсли;
	
	// Установим настройки формы для случая открытия в режиме выбора
	Элементы.Список.РежимВыбора = Параметры.РежимВыбора;
	Элементы.Список.МножественныйВыбор = ?(Параметры.ЗакрыватьПриВыборе = Неопределено, Ложь, Не Параметры.ЗакрыватьПриВыборе);
	Если Параметры.РежимВыбора Тогда
		КлючНазначенияИспользования = КлючНазначенияИспользования + "ВыборПодбор";
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	Иначе
		КлючНазначенияИспользования = КлючНазначенияИспользования + "Список";
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ИерархияТипов Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка")
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		ЭтоПодразделение = Элементы.Список.ТекущиеДанные.ТипСтруктурнойЕдиницы = ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Подразделение");
		Элементы.ФормаИспользоватьКакОсновноеПодразделение.Доступность	= Не Элементы.Список.ТекущиеДанные.ЭтоОсновной И ЭтоПодразделение;
		Элементы.ФормаИспользоватьКакОсновнойСклад.Доступность			= Не Элементы.Список.ТекущиеДанные.ЭтоОсновной И Не ЭтоПодразделение;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьКакОсновноеПодразделение(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или Элементы.Список.ТекущиеДанные = Неопределено
		Или Элементы.Список.ТекущиеДанные.ЭтоОсновной
		Или Элементы.Список.ТекущиеДанные.ТипСтруктурнойЕдиницы <> ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Подразделение") Тогда
		
		Возврат;
	КонецЕсли;
	
	УстановитьОсновнуюСтруктурнуюЕдиницу(Элементы.Список.ТекущиеДанные.Ссылка, "ОсновноеПодразделение");
	Элементы.ФормаИспользоватьКакОсновноеПодразделение.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновной;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКакОсновнойСклад(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Или Элементы.Список.ТекущиеДанные = Неопределено
		Или Элементы.Список.ТекущиеДанные.ЭтоОсновной
		Или Элементы.Список.ТекущиеДанные.ТипСтруктурнойЕдиницы = ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Подразделение") Тогда
		
		Возврат;
	КонецЕсли;
	
	УстановитьОсновнуюСтруктурнуюЕдиницу(Элементы.Список.ТекущиеДанные.Ссылка, "ОсновнойСклад");
	Элементы.ФормаИспользоватьКакОсновнойСклад.Доступность = Не Элементы.Список.ТекущиеДанные.ЭтоОсновной;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительную(Команда)
	Элементы.ПоказыватьНедействительную.Пометка = Не Элементы.ПоказыватьНедействительную.Пометка;
	УстановитьОтборНедействительная(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ЗамерыПроизводительности

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "СозданиеФормы" + РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ОткрытиеФормы" + РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОсновнуюСтруктурнуюЕдиницу(знач НоваяОсновнаяСтруктурнаяЕдиница, ИмяНастройки)
	
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(НоваяОсновнаяСтруктурнаяЕдиница, ИмяНастройки);
	
	ЭтотОбъект[ИмяНастройки] = НоваяОсновнаяСтруктурнаяЕдиница;
	
	ОсновныеСтруктурныеЕдиницы = Новый Массив;
	ОсновныеСтруктурныеЕдиницы.Добавить(ОсновноеПодразделение);
	ОсновныеСтруктурныеЕдиницы.Добавить(ОсновнойСклад);
	Список.Параметры.УстановитьЗначениеПараметра("ОсновныеСтруктурныеЕдиницы", ОсновныеСтруктурныеЕдиницы);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьИерархиюТипов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктурныеЕдиницы.Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Родитель <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы <> СтруктурныеЕдиницы.Родитель.ТипСтруктурнойЕдиницы";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборНедействительная(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Недействителен",
		Ложь,
		,
		,
		Не Форма.Элементы.ПоказыватьНедействительную.Пометка);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	НовоеУсловноеОформление = УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Список.Недействителен", Истина, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "Наименование");
	РаботаСФормой.ДобавитьОформляемыеПоля(НовоеУсловноеОформление, "ТипСтруктурнойЕдиницы");
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти); 
КонецПроцедуры
	
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
