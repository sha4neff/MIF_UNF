
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЕстьПравоДобавленияНового = ПравоДоступа("Добавление", Метаданные.Справочники.ПрайсЛисты);
	Если ЕстьПравоДобавленияНового Тогда
		
		РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, Список, , , Новый Структура("ОтборИндивидуальный", "ОтборАвтор", "ОтборВариантПечатиПрайсЛиста", "ОтборИерархияСодержимого"), , Ложь);
		УправлениеНебольшойФирмойСервер.ВыделитьЖирнымОсновнойЭлемент(УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("РабочийПрайсЛистОрганизации"), Список);
		
	КонецЕсли;
	
	УстановитьОтборНедействительные(ЭтотОбъект);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы = Истина Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СохранитьНастройкиОтборов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборИндивидуальныйОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если (ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ДаНет.Да")) Тогда
		
		ЗначениеИндивидуальный = Истина;
		ПредставлениеОтбора = НСтр("ru ='Индивидуальный'");
		
	Иначе
		
		ЗначениеИндивидуальный = Ложь;
		ПредставлениеОтбора = НСтр("ru ='Общий'");
		
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Индивидуальный", Элемент.Родитель.Имя, ЗначениеИндивидуальный, ПредставлениеОтбора);
	
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборАвторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Автор", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВариантПечатиПрайсЛистаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("ПечатьПрайсЛиста", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИерархияСодержимогоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("ИерархияСодержимого", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборовНажатие(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФормирование(Команда)
	
	ДанныеТекущейСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеТекущейСтроки = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПрайсЛистыОрганизации.Форма", Новый Структура("РабочийПрайсЛистОрганизации, Ключ", ДанныеТекущейСтроки.Ссылка, ДанныеТекущейСтроки.Ссылка), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКакОсновной(Команда)
	
	ДанныеТекущейСтроки = Элементы.Список.ТекущиеДанные;
	
	Если ДанныеТекущейСтроки = Неопределено
		ИЛИ ТипЗнч(ДанныеТекущейСтроки) = Тип("СтрокаГруппировкиДинамическогоСписка")
		Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИзменитьРабочийПрайсЛистОрганизации(ДанныеТекущейСтроки.Ссылка);
	
	// Обновим динамический список
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительных(Команда)
	
	Элементы.ПоказыватьНедействительных.Пометка = Не Элементы.ПоказыватьНедействительных.Пометка;
	
	УстановитьОтборНедействительные(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборНедействительные(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Недействителен",
		Ложь,
		,
		,
		Не Форма.Элементы.ПоказыватьНедействительных.Пометка);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// 1. Недействительная номенклатура отображается серым
	НовоеУсловноеОформление = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	
	Оформление = НовоеУсловноеОформление.Оформление.Элементы.Найти("ЦветТекста");
	Оформление.Значение 		= ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет;
	Оформление.Использование 	= Истина;
	
	Отбор = НовоеУсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование 	= Истина;
	Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Недействителен");
	Отбор.ПравоеЗначение 	= Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьРабочийПрайсЛистОрганизации(РабочийПрайсЛистОрганизации)
	
	Если РабочийПрайсЛистОрганизации = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("РабочийПрайсЛистОрганизации") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УправлениеНебольшойФирмойСервер.УстановитьНастройкуПользователя(РабочийПрайсЛистОрганизации, "РабочийПрайсЛистОрганизации");
	УправлениеНебольшойФирмойСервер.ВыделитьЖирнымОсновнойЭлемент(РабочийПрайсЛистОрганизации, Список);
	
КонецПроцедуры

#Область ЗамерыПроизводительности

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "СозданиеФормы" + РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "ОткрытиеФормы" + РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
	
КонецПроцедуры

#КонецОбласти

#Область МеткиОтборов

&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_")+1);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);

КонецПроцедуры

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения="" Тогда
		
		ПредставлениеЗначения=Строка(ВыбранноеЗначение);
		
	КонецЕсли; 
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка,,Истина);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтборов()
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект, , , , Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
