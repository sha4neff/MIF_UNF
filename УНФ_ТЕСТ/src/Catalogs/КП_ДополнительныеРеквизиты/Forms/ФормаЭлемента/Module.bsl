#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Наименование="Реквизит процесса 1";
		Объект.НаименованиеВФорме=Объект.Наименование;
		Объект.ИмяРеквизитаДляФункций=ПолучитьИмяИзНаименования(Объект.Наименование);

	Иначе		
		
		Элементы.ЗначениеПоУмолчанию.АктивизироватьПоУмолчанию=Истина;
		Элементы.Наименование.ОтображениеПредупрежденияПриРедактировании=ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.РеквизитПроцесса.ОтображениеПредупрежденияПриРедактировании=ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.НаименованиеВФорме.ОтображениеПредупрежденияПриРедактировании=ОтображениеПредупрежденияПриРедактировании.Отображать;
		
		УстановитьОформлениеЗначенияПоУмолчанию();
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(объект.Владелец) Тогда
		Сообщить("Не указан владелец реквизита. Создание в данном режиме не возможно");
		Отказ=Истина;
		Возврат;
	КонецЕсли;

	УстановитьДоступныйТипЗначения();
	
	//Если Константы.КП_ИспользоватьДваЯзыкаВПрограммноДобавляемыхЭлементахПроцессовИЗадач.Получить() Тогда
	//	Элементы.ДекорацияПробел.Ширина=17;
	//КонецЕсли;
                                     	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	КодПервогоСимвола=КодСимвола(Лев(Объект.Наименование, 1));
	
	Если СимволЭтоЦифра(Лев(Объект.Наименование, 1)) Тогда
		Отказ=Истина;
		ПоказатьПредупреждение(Неопределено, НСтр("en='Name does not begin with a number.';ru='Внимание! Наименование не может начинаться с цифры.'"));
		Возврат;
		
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.ИмяРеквизитаДляФункций) Тогда
		СформироватьИмяРеквизита();
		Если ПустаяСтрока(Объект.ИмяРеквизитаДляФункций) Тогда
			Отказ=Истина;
			ПоказатьПредупреждение(Неопределено, НСтр("en='Name props for functions must not be empty.';ru='Внимание! Имя реквизита для функций не должно быть пустым.'"));
			Возврат;
		
		КонецЕсли;
		
	КонецЕсли;

    Оповестить("РеквизитПроцесса", "Записан", Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДоступныйТипЗначения()
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипРеквизита) Тогда
		Объект.ЗначениеПоУмолчанию=Неопределено;
		Элементы.ЗначениеПоУмолчанию.ТолькоПросмотр=Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.ЗначениеПоУмолчанию.ТолькоПросмотр=Ложь;
	
	Попытка
		Если Объект.ТипРеквизита.Родитель=Справочники.КП_СписокМетаданных.МетаданныеДокументы Тогда
			НазваниеТипа=Объект.ТипРеквизита.ПолноеНаименование;
			НазваниеТипа=СтрЗаменить(НазваниеТипа, "Документ.", "ДокументСсылка.");
			Элементы.ЗначениеПоУмолчанию.ОграничениеТипа=Новый ОписаниеТипов(НазваниеТипа);
			
		ИначеЕсли Объект.ТипРеквизита.Родитель=Справочники.КП_СписокМетаданных.МетаданныеСправочники Тогда
			НазваниеТипа=Объект.ТипРеквизита.ПолноеНаименование;
			НазваниеТипа=СтрЗаменить(НазваниеТипа, "Справочник.", "СправочникСсылка.");
			
			Элементы.ЗначениеПоУмолчанию.ОграничениеТипа=Новый ОписаниеТипов(НазваниеТипа);
			
		ИначеЕсли Объект.ТипРеквизита.Родитель=Справочники.КП_СписокМетаданных.Числа Тогда
			КвалификаторЧисла=Новый КвалификаторыЧисла(Объект.ТипРеквизита.РеквизитДлина, Объект.ТипРеквизита.РеквизитТочность, ДопустимыйЗнак.Любой);
			Элементы.ЗначениеПоУмолчанию.ОграничениеТипа=Новый ОписаниеТипов(КвалификаторЧисла);
			Если Объект.ЗначениеПоУмолчанию=Неопределено Тогда
				Объект.ЗначениеПоУмолчанию=0;
			КонецЕсли;
			
		ИначеЕсли Объект.ТипРеквизита.Родитель=Справочники.КП_СписокМетаданных.Строки Тогда
			КвалификаторСтроки=Новый КвалификаторыСтроки(Объект.ТипРеквизита.РеквизитДлина);
			Элементы.ЗначениеПоУмолчанию.ОграничениеТипа=Новый ОписаниеТипов(КвалификаторСтроки);
			Если Объект.ЗначениеПоУмолчанию=Неопределено Тогда
				Объект.ЗначениеПоУмолчанию="";
			КонецЕсли;
			
		ИначеЕсли Объект.ТипРеквизита=Справочники.КП_СписокМетаданных.Дата Тогда
			КвалификаторДаты=Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);
			Элементы.ЗначениеПоУмолчанию.ОграничениеТипа=Новый ОписаниеТипов(КвалификаторДаты);
			Если Объект.ЗначениеПоУмолчанию=Неопределено Тогда
				Объект.ЗначениеПоУмолчанию=Дата("00010101");
			КонецЕсли;
			
		ИначеЕсли Объект.ТипРеквизита=Справочники.КП_СписокМетаданных.Булево Тогда
			Если Объект.ЗначениеПоУмолчанию=Неопределено Тогда
				Объект.ЗначениеПоУмолчанию=Истина;
			КонецЕсли;

		ИначеЕсли Объект.ТипРеквизита.ПринадлежитЭлементу(Справочники.КП_СписокМетаданных.Свойства) Тогда
			НазваниеТипа="СправочникСсылка.ЗначенияСвойствОбъектов";
	        Элементы.ЗначениеПоУмолчанию.ОграничениеТипа=Новый ОписаниеТипов(НазваниеТипа);
			
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	СформироватьИмяРеквизита();
	
	Объект.НаименованиеВФорме=Объект.Наименование;
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИмяРеквизита()
	
	Если СимволЭтоЦифра(Лев(Объект.Наименование, 1)) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("en='Name does not begin with a number.';ru='Внимание! Наименование не может начинаться с цифры.'"));
		Возврат;
		
	КонецЕсли;
	
	Объект.ИмяРеквизитаДляФункций=ПолучитьИмяИзНаименования(Объект.Наименование);	
	
КонецПроцедуры

Функция ПолучитьИмяИзНаименования(Знач ИсходнаяСтрока)
	
	#Если Сервер Тогда
	ИсходнаяСтрока=КП_ОбщееСервер.УдалитьИсключительныеСимволыИзИмени(ИсходнаяСтрока);
	#Иначе
	ИсходнаяСтрока=КП_ОбщееКлиент.УдалитьИсключительныеСимволыИзИмени(ИсходнаяСтрока);
	#КонецЕсли

	КоличествоСимволов=СтрДлина(ИсходнаяСтрока);
	НоваяСтрока="";
	СледующийСимволСБольшой=Ложь;
	
	Для НомерСтроки=1 По КоличествоСимволов Цикл
		СимволСтроки=Сред(ИсходнаяСтрока, НомерСтроки, 1);
		
		Если СимволСтроки=" " Тогда
			СледующийСимволСБольшой=Истина;
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока=НоваяСтрока+?(СледующийСимволСБольшой, ВРег(СимволСтроки), СимволСтроки);
		
		СледующийСимволСБольшой=Ложь;
		
	КонецЦикла;
	
	НоваяСтрока=СтрЗаменить(НоваяСтрока, " ", "");
	
	Возврат НоваяСтрока;
	
КонецФункции

Функция СимволЭтоЦифра(СимволСтроки)
	
	КодСимволаСтроки=КодСимвола(СимволСтроки);
	
	Если КодСимволаСтроки>=48 И КодСимволаСтроки<=57 Тогда
		Возврат Истина;
		
	Иначе
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЭтоРеквизитГруппыСвойств()
	Возврат Объект.ТипРеквизита.ПринадлежитЭлементу(Справочники.КП_СписокМетаданных.Свойства);
КонецФункции

&НаКлиенте
Процедура ЗначениеПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	Если НЕ ЭтоРеквизитГруппыСвойств() Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка=Ложь;
	
	//откроем форму с установленным отбором
	СвязьСПВХ=КП_ОбщееСервер.ПолучитьРеквизитОбъекта(Объект.ТипРеквизита, "СвязьСПВХ");
	ПараметрыОтбора=Новый Структура("Владелец", СвязьСПВХ);	
	ПараметрыФормы=Новый Структура("Отбор", ПараметрыОтбора);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ВыбранноеЗначение = Неопределено;
	
	ОткрытьФорму("Справочник.ЗначенияСвойствОбъектов.ФормаВыбора", ПараметрыФормы,,,,, Новый ОписаниеОповещения("Оповещение_ЗначениеПоУмолчаниюНачалоВыбораЗавершение", ЭтотОбъект));

КонецПроцедуры

&НаКлиенте
Процедура Оповещение_ВыборТипаВнешнегоОбъектаЗавершение(Результат, ИмяЭлемента) Экспорт
	
	ВыбранноеЗначение=Результат;

	Если ВыбранноеЗначение=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ЗначениеПоУмолчанию=ВыбранноеЗначение;
	
	Модифицированность=Истина;

КонецПроцедуры

&НаКлиенте
Процедура Оповещение_ЗначениеПоУмолчаниюНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ВыбранноеЗначение=Результат;
    
    Если ВыбранноеЗначение=Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    Объект.ЗначениеПоУмолчанию=ВыбранноеЗначение;

КонецПроцедуры

&НаСервере
Функция УстановитьОформлениеЗначенияПоУмолчанию()
	
	Если Объект.ТипРеквизита.РеквизитДлина>80
		И Объект.ТипРеквизита.Родитель=Справочники.КП_СписокМетаданных.Строки 
	Тогда
		Элементы.ЗначениеПоУмолчанию.ПоложениеЗаголовка=ПоложениеЗаголовкаЭлементаФормы.Верх;
		Элементы.ЗначениеПоУмолчанию.МногострочныйРежим=Истина;
		
	Иначе
		Элементы.ЗначениеПоУмолчанию.ПоложениеЗаголовка=ПоложениеЗаголовкаЭлементаФормы.Лево;	
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Попытка
		Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
		
	КонецПопытки;
	
	Закрыть(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПроцессаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	
	ПарамтерыФормы=Новый Структура("РежимВыбора", Истина);
	ОткрытьФорму("Справочник.КП_СписокМетаданных.Форма.ФормаСписка", ПарамтерыФормы,,,,, Новый ОписаниеОповещения("Оповещение_РеквизитПроцессаНачалоВыбораЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура Оповещение_РеквизитПроцессаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если НЕ ЗначениеЗаполнено(Результат) Тогда
        Возврат;
        
    КонецЕсли;
    
    Объект.ТипРеквизита=Результат;
    
    Объект.ЗначениеПоУмолчанию=Неопределено;
    
    УстановитьДоступныйТипЗначения();
    
    Если Объект.Наименование="Реквизит процесса 1" Тогда
        Объект.Наименование=СокрЛП(Объект.ТипРеквизита)+" 1";
        НаименованиеПриИзменении(Неопределено);
        
    КонецЕсли;
    
    УстановитьОформлениеЗначенияПоУмолчанию();

КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	//Если ЭтоРеквизитГруппыСвойств() Тогда
	//
	//	Если ПустаяСтрока(Текст) Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	СтандартнаяОбработка=Ложь;
	//	
	//	НайденноеЗначение=КП_ОбщееСервер.ПолучитьЗначениеРеквизитаСвойствПоНаименованию(Объект.Ссылка, Текст); 
	//	
	//	Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
	//		ДанныеВыбора=НайденноеЗначение;
	//		Объект.ЗначениеПоУмолчанию=НайденноеЗначение;     
	//	Иначе
	//		СтандартнаяОбработка=Ложь;

	//	КонецЕсли;
	//Иначе
	//	//любой вызов сервера почему-то сбрасывает текст на текущей версии платформы, пока отремонтируем так
	//	Объект.ЗначениеПоУмолчанию=НЕ ПустаяСтрока(Текст);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоУмолчаниюОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	//любой вызов платформы сбрасывает введенный текст на текущей версии платформы
	
	//Если ЭтоРеквизитГруппыСвойств() Тогда
	//
	//	Если ПустаяСтрока(Текст) Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	НайденноеЗначение=КП_ОбщееСервер.ПолучитьЗначениеРеквизитаСвойствПоНаименованию(Объект.Ссылка, Текст); 
	//	
	//	Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
	//		ДанныеВыбора=НайденноеЗначение;
	//		Объект.ЗначениеПоУмолчанию=НайденноеЗначение;
	//		
	//	Иначе
	//		СтандартнаяОбработка=Ложь;
	//		
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
