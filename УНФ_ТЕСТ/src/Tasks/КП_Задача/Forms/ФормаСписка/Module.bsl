#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ТекстЗаголовкаФормы;
		
	//{Режим открытия окна
	#Если ВебКлиент Тогда
		ЭтоВебКлиент=Истина;
	#Иначе
		ЭтоВебКлиент=Ложь;
	#КонецЕсли
	//}
	
	Если Параметры.Свойство("ЗаголовокФормы", ТекстЗаголовкаФормы) И
		НЕ ПустаяСтрока(ТекстЗаголовкаФормы) Тогда
		Заголовок = ТекстЗаголовкаФормы;
		АвтоЗаголовок = Ложь;
	КонецЕсли;
	
	ТекущийПользователь=Пользователи.ТекущийПользователь();

	ПоказыватьЗадачи = 2;
	ПоАвтору = ТекущийПользователь;
	
	ОбновитьСписок();

	УстановитьОтбор();
	
	//БизнесПроцессыИЗадачиСервер.УстановитьОформлениеЗадач(СписокЗадач.УсловноеОформление);
	
	Пользователь=СокрЛП(ТекущийПользователь);
	
	Если ПолучитьФункциональнуюОпцию("УчетПоПроектам") Тогда
		ВыбранныйПроект=КП_ОбщееСервер.ЗагрузитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ВыбранныйПроект", ,Пользователь);
	Иначе
		ВыбранныйПроект=Неопределено;
	КонецЕсли;
	
	ГруппировкаСпискаПоВидуЗадачВключенаЗначение=КП_ОбщееСервер.ЗагрузитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ГруппировкаСпискаПоВидуЗадачВключена", ,Пользователь);
	ГруппировкаСпискаПоПроцессамВключенаЗначение=КП_ОбщееСервер.ЗагрузитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ГруппировкаСпискаПоПроцессамВключена", ,Пользователь);
	ГруппировкаСпискаПоСостояниямЗадачВключенаЗначение=КП_ОбщееСервер.ЗагрузитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ГруппировкаСпискаПоСостояниямЗадачВключена", ,Пользователь);
	
	Если ГруппировкаСпискаПоСостояниямЗадачВключенаЗначение=Неопределено Тогда
		ГруппировкаСпискаПоСостояниямЗадачВключена=Ложь;
	Иначе
		ГруппировкаСпискаПоСостояниямЗадачВключена=ГруппировкаСпискаПоСостояниямЗадачВключенаЗначение;
	КонецЕсли;

	Если ГруппировкаСпискаПоВидуЗадачВключенаЗначение=Неопределено Тогда
		ГруппировкаСпискаПоВидуЗадачВключена=Ложь;
	Иначе
		ГруппировкаСпискаПоВидуЗадачВключена=ГруппировкаСпискаПоВидуЗадачВключенаЗначение;
	КонецЕсли;
	
	Если ГруппировкаСпискаПоПроцессамВключенаЗначение=Неопределено Тогда
		ГруппировкаСпискаПоПроцессамВключена=Ложь;
	Иначе
		ГруппировкаСпискаПоПроцессамВключена=ГруппировкаСпискаПоПроцессамВключенаЗначение;
	КонецЕсли;
	
	Элементы.ФормаГруппироватьСписокПоВиду.Пометка=ГруппировкаСпискаПоВидуЗадачВключена;
	Элементы.ФормаГруппироватьСписокПоПроцессам.Пометка=ГруппировкаСпискаПоПроцессамВключена;
	//Элементы.ФормаГруппироватьСписокПоСостояниямЗадач.Пометка=ГруппировкаСпискаПоПроцессамВключена;
	
	УстановитьГруппировкуСпискаПоВидам();
	УстановитьГруппировкуСпискаПоПроцессам();
	
	КП_ОформлениеСтрокСервер.УстановитьОформлениеСписка(Список, "Наименование");

	Элементы.ГруппаОтборПроекты.Видимость=ПолучитьФункциональнуюОпцию("УчетПоПроектам");
		
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоАвторуПриИзменении(Элемент)
	УстановитьОтбор();
	СохранитьНастройкиСервером();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоИсполнителюПриИзменении(Элемент)
	УстановитьОтбор();
	СохранитьНастройкиСервером();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗадачиПриИзменении(Элемент)
	УстановитьОтбор();
	СохранитьНастройкиСервером();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоПроцессуПриИзменении(Элемент)
	УстановитьОтбор();
	СохранитьНастройкиСервером();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если (ИмяСобытия="КП_Задача" И Параметр="Выполнена") 
		ИЛИ ИмяСобытия="РешениеЗаписано"
		ИЛИ ИмяСобытия="ЗаявкаИзменена"
		ИЛИ ИмяСобытия = "ЗадачаВыполнена" 
		ИЛИ ИмяСобытия = "ЗадачаИзменена" 
	Тогда
		Элементы.Список.Обновить();
		
	ИначеЕсли ИмяСобытия="КП_ИзменениеНастройкиЦвета" Тогда
		 ОбновитьОформлениеСписка();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Настройки["ПоПроцессу"]=Неопределено Тогда
		Настройки.Вставить("ПоПроцессу", ПоПроцессу);
	КонецЕсли;
	
	Если Настройки["ПоВидуПроцесса"]=Неопределено Тогда
		Настройки.Вставить("ПоВидуПроцесса", ПоВидуПроцесса);
	КонецЕсли;
	
	УстановитьОтборСписка(Список, Настройки);

КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоАвтору", ПоАвтору);
	ПараметрыОтбора.Вставить("ПоИсполнителю", ПоИсполнителю);
	ПараметрыОтбора.Вставить("ПоПроцессу", ПоПроцессу);
	ПараметрыОтбора.Вставить("ПоВидуПроцесса", ПоВидуПроцесса);
	ПараметрыОтбора.Вставить("ПоказыватьЗадачи", ПоказыватьЗадачи);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	Если ПараметрыОтбора["ПоАвтору"].Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Автор");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор, "Автор", ПараметрыОтбора["ПоАвтору"]);
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоИсполнителю"].Пустая() Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", NULL);
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", ПараметрыОтбора["ПоИсполнителю"]);
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоПроцессу"].Пустая() Тогда
		Список.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", NULL);
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", ПараметрыОтбора["ПоПроцессу"]);
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоВидуПроцесса"].Пустая() Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ВидПроцесса", NULL);
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("ВидПроцесса", ПараметрыОтбора["ПоВидуПроцесса"]);
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Выполнена");
	Если ПараметрыОтбора["ПоказыватьЗадачи"] <> 0 Тогда 
		
		Если ПараметрыОтбора["ПоказыватьЗадачи"] = 1 Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Список.Отбор, "Выполнена", Истина);
		КонецЕсли;
		
		Если ПараметрыОтбора["ПоказыватьЗадачи"] = 2 Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Список.Отбор, "Выполнена", Ложь);
		КонецЕсли;	
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиСервером()
	
	Пользователь=СокрЛП(ТекущийПользователь);

	КП_ОбщееСервер.СохранитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ГруппировкаСпискаПоВидуЗадачВключена", 		ГруппировкаСпискаПоВидуЗадачВключена, , Пользователь);
	КП_ОбщееСервер.СохранитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ГруппировкаСпискаПоПроцессамВключена", 		ГруппировкаСпискаПоПроцессамВключена, , Пользователь);
	КП_ОбщееСервер.СохранитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ГруппировкаСпискаПоСостояниямЗадачВключена", 	ГруппировкаСпискаПоСостояниямЗадачВключена , , Пользователь);
	
	КП_ОбщееСервер.СохранитьНастройкуПользователя("ВсеЗадачи.ФормаСписка", "ВыбранныйПроект", 	ВыбранныйПроект, , Пользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВидуПроцессаПриИзменении(Элемент)
	УстановитьОтбор();
	СохранитьНастройкиСервером();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьСписокПоПроцессам(Команда)
	
	ГруппировкаСпискаПоПроцессамВключена=НЕ ГруппировкаСпискаПоПроцессамВключена;
	
	Элементы.ФормаГруппироватьСписокПоПроцессам.Пометка=ГруппировкаСпискаПоПроцессамВключена;
	
	УстановитьГруппировкуСпискаПоПроцессам();	
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьСписокПоВидам(Команда)
	
	ГруппировкаСпискаПоВидуЗадачВключена=НЕ ГруппировкаСпискаПоВидуЗадачВключена;
	
	Элементы.ФормаГруппироватьСписокПоВиду.Пометка=ГруппировкаСпискаПоВидуЗадачВключена;
	
	УстановитьГруппировкуСпискаПоВидам();	
	
	Элементы.Список.Обновить();

КонецПроцедуры

&НаСервере
Процедура УстановитьГруппировкуСпискаПоПроцессам()
	
	КП_ОбщееСервер.СгруппироватьСписок(Список, "БизнесПроцесс", ГруппировкаСпискаПоПроцессамВключена);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГруппировкуСпискаПоВидам()
	
	КП_ОбщееСервер.СгруппироватьСписок(Список, "ВидПроцесса", ГруппировкаСпискаПоВидуЗадачВключена);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйПроектПриИзменении(Элемент)
	ОбновитьСписок();
	СохранитьНастройкиСервером();
	
КонецПроцедуры

Процедура ОбновитьСписок()
	
	Список.Параметры.УстановитьЗначениеПараметра("СлужебнаяТочкаМаршрута", БизнесПроцессы.КП_БизнесПроцесс.ТочкиМаршрута.ВыполнениеКорпоративногоПроцесса);
	Список.Параметры.УстановитьЗначениеПараметра("Проект", ?(ЗначениеЗаполнено(ВыбранныйПроект), ВыбранныйПроект, NULL));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаКон", ДобавитьМесяц(ТекущаяДата(), 1));
	Список.Параметры.УстановитьЗначениеПараметра("ПараметрЗадачиВыполнениеПроцент", ПланыВидовХарактеристик.КП_ПараметрыЗадач.ВыполнениеПроцент);
	Список.Параметры.УстановитьЗначениеПараметра("ПараметрЗадачиДатаНачалаВыполнения", ПланыВидовХарактеристик.КП_ПараметрыЗадач.ДатаНачалаВыполнения);
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", ТекущийПользователь);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокРеквизитов()
	СписокРеквизитов=КП_ОбщееСервер.ПолучитьСписокРеквизитов(ЭтаФорма);	
	Возврат СписокРеквизитов;
	
КонецФункции

&НаСервере
Процедура ОбновитьОформлениеСписка()
	КП_ОформлениеСтрокСервер.УстановитьОформлениеСписка(Список, "Наименование");
	ОбновитьСписок();
КонецПроцедуры

#КонецОбласти